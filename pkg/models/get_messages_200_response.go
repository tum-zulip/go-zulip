/*
Zulip REST API

Powerful open source group chat

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the GetMessages200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetMessages200Response{}

// GetMessages200Response struct for GetMessages200Response
type GetMessages200Response struct {
	Result string `json:"result"`
	Msg    string `json:"msg"`
	// An array of any parameters sent in the request that are not supported by the endpoint.  See [error handling](/api/rest-error-handling#ignored-parameters) documentation for details on this and its change history.
	IgnoredParametersUnsupported []string `json:"ignored_parameters_unsupported,omitempty"`
	// The same `anchor` specified in the request (or the computed one, if `use_first_unread_anchor` is `true`).  Only present if `message_ids` is not provided.
	Anchor *int32 `json:"anchor,omitempty"`
	// Whether the server promises that the `messages` list includes the very newest messages matching the narrow (used by clients that paginate their requests to decide whether there may be more messages to fetch).
	FoundNewest *bool `json:"found_newest,omitempty"`
	// Whether the server promises that the `messages` list includes the very oldest messages matching the narrow (used by clients that paginate their requests to decide whether there may be more messages to fetch).
	FoundOldest *bool `json:"found_oldest,omitempty"`
	// Whether the anchor message is included in the response. If the message with the ID specified in the request does not exist, did not match the narrow, or was excluded via `\"include_anchor\": false`, this will be false.
	FoundAnchor *bool `json:"found_anchor,omitempty"`
	// Whether the message history was limited due to plan restrictions. This flag is set to `true` only when the oldest messages(`found_oldest`) matching the narrow is fetched.
	HistoryLimited *bool `json:"history_limited,omitempty"`
	// An array of `message` objects.  **Changes**: In Zulip 3.1 (feature level 26), the `sender_short_name` field was removed from message objects.
	Messages []GetMessages200ResponseAllOfMessagesInner `json:"messages"`
}

type _GetMessages200Response GetMessages200Response

// NewGetMessages200Response instantiates a new GetMessages200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetMessages200Response(result string, msg string, messages []GetMessages200ResponseAllOfMessagesInner) *GetMessages200Response {
	this := GetMessages200Response{}
	this.Result = result
	this.Msg = msg
	this.Messages = messages
	return &this
}

// NewGetMessages200ResponseWithDefaults instantiates a new GetMessages200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetMessages200ResponseWithDefaults() *GetMessages200Response {
	this := GetMessages200Response{}
	return &this
}

// GetResult returns the Result field value
func (o *GetMessages200Response) GetResult() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Result
}

// GetResultOk returns a tuple with the Result field value
// and a boolean to check if the value has been set.
func (o *GetMessages200Response) GetResultOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Result, true
}

// SetResult sets field value
func (o *GetMessages200Response) SetResult(v string) {
	o.Result = v
}

// GetMsg returns the Msg field value
func (o *GetMessages200Response) GetMsg() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Msg
}

// GetMsgOk returns a tuple with the Msg field value
// and a boolean to check if the value has been set.
func (o *GetMessages200Response) GetMsgOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Msg, true
}

// SetMsg sets field value
func (o *GetMessages200Response) SetMsg(v string) {
	o.Msg = v
}

// GetIgnoredParametersUnsupported returns the IgnoredParametersUnsupported field value if set, zero value otherwise.
func (o *GetMessages200Response) GetIgnoredParametersUnsupported() []string {
	if o == nil || IsNil(o.IgnoredParametersUnsupported) {
		var ret []string
		return ret
	}
	return o.IgnoredParametersUnsupported
}

// GetIgnoredParametersUnsupportedOk returns a tuple with the IgnoredParametersUnsupported field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetMessages200Response) GetIgnoredParametersUnsupportedOk() ([]string, bool) {
	if o == nil || IsNil(o.IgnoredParametersUnsupported) {
		return nil, false
	}
	return o.IgnoredParametersUnsupported, true
}

// HasIgnoredParametersUnsupported returns a boolean if a field has been set.
func (o *GetMessages200Response) HasIgnoredParametersUnsupported() bool {
	if o != nil && !IsNil(o.IgnoredParametersUnsupported) {
		return true
	}

	return false
}

// SetIgnoredParametersUnsupported gets a reference to the given []string and assigns it to the IgnoredParametersUnsupported field.
func (o *GetMessages200Response) SetIgnoredParametersUnsupported(v []string) {
	o.IgnoredParametersUnsupported = v
}

// GetAnchor returns the Anchor field value if set, zero value otherwise.
func (o *GetMessages200Response) GetAnchor() int32 {
	if o == nil || IsNil(o.Anchor) {
		var ret int32
		return ret
	}
	return *o.Anchor
}

// GetAnchorOk returns a tuple with the Anchor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetMessages200Response) GetAnchorOk() (*int32, bool) {
	if o == nil || IsNil(o.Anchor) {
		return nil, false
	}
	return o.Anchor, true
}

// HasAnchor returns a boolean if a field has been set.
func (o *GetMessages200Response) HasAnchor() bool {
	if o != nil && !IsNil(o.Anchor) {
		return true
	}

	return false
}

// SetAnchor gets a reference to the given int32 and assigns it to the Anchor field.
func (o *GetMessages200Response) SetAnchor(v int32) {
	o.Anchor = &v
}

// GetFoundNewest returns the FoundNewest field value if set, zero value otherwise.
func (o *GetMessages200Response) GetFoundNewest() bool {
	if o == nil || IsNil(o.FoundNewest) {
		var ret bool
		return ret
	}
	return *o.FoundNewest
}

// GetFoundNewestOk returns a tuple with the FoundNewest field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetMessages200Response) GetFoundNewestOk() (*bool, bool) {
	if o == nil || IsNil(o.FoundNewest) {
		return nil, false
	}
	return o.FoundNewest, true
}

// HasFoundNewest returns a boolean if a field has been set.
func (o *GetMessages200Response) HasFoundNewest() bool {
	if o != nil && !IsNil(o.FoundNewest) {
		return true
	}

	return false
}

// SetFoundNewest gets a reference to the given bool and assigns it to the FoundNewest field.
func (o *GetMessages200Response) SetFoundNewest(v bool) {
	o.FoundNewest = &v
}

// GetFoundOldest returns the FoundOldest field value if set, zero value otherwise.
func (o *GetMessages200Response) GetFoundOldest() bool {
	if o == nil || IsNil(o.FoundOldest) {
		var ret bool
		return ret
	}
	return *o.FoundOldest
}

// GetFoundOldestOk returns a tuple with the FoundOldest field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetMessages200Response) GetFoundOldestOk() (*bool, bool) {
	if o == nil || IsNil(o.FoundOldest) {
		return nil, false
	}
	return o.FoundOldest, true
}

// HasFoundOldest returns a boolean if a field has been set.
func (o *GetMessages200Response) HasFoundOldest() bool {
	if o != nil && !IsNil(o.FoundOldest) {
		return true
	}

	return false
}

// SetFoundOldest gets a reference to the given bool and assigns it to the FoundOldest field.
func (o *GetMessages200Response) SetFoundOldest(v bool) {
	o.FoundOldest = &v
}

// GetFoundAnchor returns the FoundAnchor field value if set, zero value otherwise.
func (o *GetMessages200Response) GetFoundAnchor() bool {
	if o == nil || IsNil(o.FoundAnchor) {
		var ret bool
		return ret
	}
	return *o.FoundAnchor
}

// GetFoundAnchorOk returns a tuple with the FoundAnchor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetMessages200Response) GetFoundAnchorOk() (*bool, bool) {
	if o == nil || IsNil(o.FoundAnchor) {
		return nil, false
	}
	return o.FoundAnchor, true
}

// HasFoundAnchor returns a boolean if a field has been set.
func (o *GetMessages200Response) HasFoundAnchor() bool {
	if o != nil && !IsNil(o.FoundAnchor) {
		return true
	}

	return false
}

// SetFoundAnchor gets a reference to the given bool and assigns it to the FoundAnchor field.
func (o *GetMessages200Response) SetFoundAnchor(v bool) {
	o.FoundAnchor = &v
}

// GetHistoryLimited returns the HistoryLimited field value if set, zero value otherwise.
func (o *GetMessages200Response) GetHistoryLimited() bool {
	if o == nil || IsNil(o.HistoryLimited) {
		var ret bool
		return ret
	}
	return *o.HistoryLimited
}

// GetHistoryLimitedOk returns a tuple with the HistoryLimited field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetMessages200Response) GetHistoryLimitedOk() (*bool, bool) {
	if o == nil || IsNil(o.HistoryLimited) {
		return nil, false
	}
	return o.HistoryLimited, true
}

// HasHistoryLimited returns a boolean if a field has been set.
func (o *GetMessages200Response) HasHistoryLimited() bool {
	if o != nil && !IsNil(o.HistoryLimited) {
		return true
	}

	return false
}

// SetHistoryLimited gets a reference to the given bool and assigns it to the HistoryLimited field.
func (o *GetMessages200Response) SetHistoryLimited(v bool) {
	o.HistoryLimited = &v
}

// GetMessages returns the Messages field value
func (o *GetMessages200Response) GetMessages() []GetMessages200ResponseAllOfMessagesInner {
	if o == nil {
		var ret []GetMessages200ResponseAllOfMessagesInner
		return ret
	}

	return o.Messages
}

// GetMessagesOk returns a tuple with the Messages field value
// and a boolean to check if the value has been set.
func (o *GetMessages200Response) GetMessagesOk() ([]GetMessages200ResponseAllOfMessagesInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.Messages, true
}

// SetMessages sets field value
func (o *GetMessages200Response) SetMessages(v []GetMessages200ResponseAllOfMessagesInner) {
	o.Messages = v
}

func (o GetMessages200Response) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetMessages200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["result"] = o.Result
	toSerialize["msg"] = o.Msg
	if !IsNil(o.IgnoredParametersUnsupported) {
		toSerialize["ignored_parameters_unsupported"] = o.IgnoredParametersUnsupported
	}
	if !IsNil(o.Anchor) {
		toSerialize["anchor"] = o.Anchor
	}
	if !IsNil(o.FoundNewest) {
		toSerialize["found_newest"] = o.FoundNewest
	}
	if !IsNil(o.FoundOldest) {
		toSerialize["found_oldest"] = o.FoundOldest
	}
	if !IsNil(o.FoundAnchor) {
		toSerialize["found_anchor"] = o.FoundAnchor
	}
	if !IsNil(o.HistoryLimited) {
		toSerialize["history_limited"] = o.HistoryLimited
	}
	toSerialize["messages"] = o.Messages
	return toSerialize, nil
}

func (o *GetMessages200Response) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"result",
		"msg",
		"messages",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varGetMessages200Response := _GetMessages200Response{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varGetMessages200Response)

	if err != nil {
		return err
	}

	*o = GetMessages200Response(varGetMessages200Response)

	return err
}

type NullableGetMessages200Response struct {
	value *GetMessages200Response
	isSet bool
}

func (v NullableGetMessages200Response) Get() *GetMessages200Response {
	return v.value
}

func (v *NullableGetMessages200Response) Set(val *GetMessages200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableGetMessages200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableGetMessages200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetMessages200Response(val *GetMessages200Response) *NullableGetMessages200Response {
	return &NullableGetMessages200Response{value: val, isSet: true}
}

func (v NullableGetMessages200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetMessages200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
