/*
Zulip REST API

Powerful open source group chat 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// checks if the ProfileDataValue type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProfileDataValue{}

// ProfileDataValue `{id}`: Object with data about what value the user filled in the custom profile field with that ID. 
type ProfileDataValue struct {
	// User's personal value for this custom profile field. 
	Value *string `json:"value,omitempty"`
	// The `value` rendered in HTML. Will only be present for custom profile field types that support Markdown rendering.  This user-generated HTML content should be rendered using the same CSS and client-side security protections as are used for message content.  See [Markdown message formatting](/api/message-formatting) for details on Zulip's HTML format. 
	RenderedValue *string `json:"rendered_value,omitempty"`
}

// NewProfileDataValue instantiates a new ProfileDataValue object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProfileDataValue() *ProfileDataValue {
	this := ProfileDataValue{}
	return &this
}

// NewProfileDataValueWithDefaults instantiates a new ProfileDataValue object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProfileDataValueWithDefaults() *ProfileDataValue {
	this := ProfileDataValue{}
	return &this
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *ProfileDataValue) GetValue() string {
	if o == nil || IsNil(o.Value) {
		var ret string
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileDataValue) GetValueOk() (*string, bool) {
	if o == nil || IsNil(o.Value) {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *ProfileDataValue) HasValue() bool {
	if o != nil && !IsNil(o.Value) {
		return true
	}

	return false
}

// SetValue gets a reference to the given string and assigns it to the Value field.
func (o *ProfileDataValue) SetValue(v string) {
	o.Value = &v
}

// GetRenderedValue returns the RenderedValue field value if set, zero value otherwise.
func (o *ProfileDataValue) GetRenderedValue() string {
	if o == nil || IsNil(o.RenderedValue) {
		var ret string
		return ret
	}
	return *o.RenderedValue
}

// GetRenderedValueOk returns a tuple with the RenderedValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileDataValue) GetRenderedValueOk() (*string, bool) {
	if o == nil || IsNil(o.RenderedValue) {
		return nil, false
	}
	return o.RenderedValue, true
}

// HasRenderedValue returns a boolean if a field has been set.
func (o *ProfileDataValue) HasRenderedValue() bool {
	if o != nil && !IsNil(o.RenderedValue) {
		return true
	}

	return false
}

// SetRenderedValue gets a reference to the given string and assigns it to the RenderedValue field.
func (o *ProfileDataValue) SetRenderedValue(v string) {
	o.RenderedValue = &v
}

func (o ProfileDataValue) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProfileDataValue) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Value) {
		toSerialize["value"] = o.Value
	}
	if !IsNil(o.RenderedValue) {
		toSerialize["rendered_value"] = o.RenderedValue
	}
	return toSerialize, nil
}

type NullableProfileDataValue struct {
	value *ProfileDataValue
	isSet bool
}

func (v NullableProfileDataValue) Get() *ProfileDataValue {
	return v.value
}

func (v *NullableProfileDataValue) Set(val *ProfileDataValue) {
	v.value = val
	v.isSet = true
}

func (v NullableProfileDataValue) IsSet() bool {
	return v.isSet
}

func (v *NullableProfileDataValue) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProfileDataValue(val *ProfileDataValue) *NullableProfileDataValue {
	return &NullableProfileDataValue{value: val, isSet: true}
}

func (v NullableProfileDataValue) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProfileDataValue) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


