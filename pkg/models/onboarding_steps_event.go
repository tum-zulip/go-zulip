/*
Zulip REST API

Powerful open source group chat

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// checks if the OnboardingStepsEvent type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OnboardingStepsEvent{}

// OnboardingStepsEvent Event sent when the set of onboarding steps to show for the current user has changed (e.g. because the user dismissed one).  Clients that feature a similar tutorial experience to the Zulip web app may want to handle these events.  **Changes**: Before Zulip 8.0 (feature level 233), this event was named `hotspots`. Prior to this feature level, one-time notice onboarding steps were not supported.
type OnboardingStepsEvent struct {
	// The ID of the event. Events appear in increasing order but may not be consecutive.
	Id   *int32  `json:"id,omitempty"`
	Type *string `json:"type,omitempty"`
	// An array of dictionaries where each dictionary contains details about a single onboarding step.  **Changes**: Before Zulip 8.0 (feature level 233), this array was named `hotspots`. Prior to this feature level, one-time notice onboarding steps were not supported, and the `type` field in these objects did not exist as all onboarding steps were implicitly hotspots.
	OnboardingSteps []OnboardingStep `json:"onboarding_steps,omitempty"`
}

// NewUserSettingsUpdateEvent5 instantiates a new OnboardingStepsEvent object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserSettingsUpdateEvent5() *OnboardingStepsEvent {
	this := OnboardingStepsEvent{}
	return &this
}

// NewUserSettingsUpdateEvent5WithDefaults instantiates a new OnboardingStepsEvent object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserSettingsUpdateEvent5WithDefaults() *OnboardingStepsEvent {
	this := OnboardingStepsEvent{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *OnboardingStepsEvent) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OnboardingStepsEvent) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *OnboardingStepsEvent) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *OnboardingStepsEvent) SetId(v int32) {
	o.Id = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *OnboardingStepsEvent) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OnboardingStepsEvent) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *OnboardingStepsEvent) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *OnboardingStepsEvent) SetType(v string) {
	o.Type = &v
}

// GetOnboardingSteps returns the OnboardingSteps field value if set, zero value otherwise.
func (o *OnboardingStepsEvent) GetOnboardingSteps() []OnboardingStep {
	if o == nil || IsNil(o.OnboardingSteps) {
		var ret []OnboardingStep
		return ret
	}
	return o.OnboardingSteps
}

// GetOnboardingStepsOk returns a tuple with the OnboardingSteps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OnboardingStepsEvent) GetOnboardingStepsOk() ([]OnboardingStep, bool) {
	if o == nil || IsNil(o.OnboardingSteps) {
		return nil, false
	}
	return o.OnboardingSteps, true
}

// HasOnboardingSteps returns a boolean if a field has been set.
func (o *OnboardingStepsEvent) HasOnboardingSteps() bool {
	if o != nil && !IsNil(o.OnboardingSteps) {
		return true
	}

	return false
}

// SetOnboardingSteps gets a reference to the given []OnboardingStep and assigns it to the OnboardingSteps field.
func (o *OnboardingStepsEvent) SetOnboardingSteps(v []OnboardingStep) {
	o.OnboardingSteps = v
}

func (o OnboardingStepsEvent) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OnboardingStepsEvent) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.OnboardingSteps) {
		toSerialize["onboarding_steps"] = o.OnboardingSteps
	}
	return toSerialize, nil
}

type NullableUserSettingsUpdateEvent5 struct {
	value *OnboardingStepsEvent
	isSet bool
}

func (v NullableUserSettingsUpdateEvent5) Get() *OnboardingStepsEvent {
	return v.value
}

func (v *NullableUserSettingsUpdateEvent5) Set(val *OnboardingStepsEvent) {
	v.value = val
	v.isSet = true
}

func (v NullableUserSettingsUpdateEvent5) IsSet() bool {
	return v.isSet
}

func (v *NullableUserSettingsUpdateEvent5) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserSettingsUpdateEvent5(val *OnboardingStepsEvent) *NullableUserSettingsUpdateEvent5 {
	return &NullableUserSettingsUpdateEvent5{value: val, isSet: true}
}

func (v NullableUserSettingsUpdateEvent5) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserSettingsUpdateEvent5) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
