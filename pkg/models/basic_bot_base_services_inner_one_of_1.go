/*
Zulip REST API

Powerful open source group chat

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// checks if the BasicBotBaseServicesInnerOneOf1 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BasicBotBaseServicesInnerOneOf1{}

// BasicBotBaseServicesInnerOneOf1 When the bot is an embedded bot.
type BasicBotBaseServicesInnerOneOf1 struct {
	// The name of the bot.
	ServiceName *string `json:"service_name,omitempty"`
	// A dictionary of string key/value pairs, which describe the configuration for the bot. These are usually details like API keys, and are unique to the integration/bot. Can be an empty dictionary.
	ConfigData *map[string]string `json:"config_data,omitempty"`
}

// NewBasicBotBaseServicesInnerOneOf1 instantiates a new BasicBotBaseServicesInnerOneOf1 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBasicBotBaseServicesInnerOneOf1() *BasicBotBaseServicesInnerOneOf1 {
	this := BasicBotBaseServicesInnerOneOf1{}
	return &this
}

// NewBasicBotBaseServicesInnerOneOf1WithDefaults instantiates a new BasicBotBaseServicesInnerOneOf1 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBasicBotBaseServicesInnerOneOf1WithDefaults() *BasicBotBaseServicesInnerOneOf1 {
	this := BasicBotBaseServicesInnerOneOf1{}
	return &this
}

// GetServiceName returns the ServiceName field value if set, zero value otherwise.
func (o *BasicBotBaseServicesInnerOneOf1) GetServiceName() string {
	if o == nil || IsNil(o.ServiceName) {
		var ret string
		return ret
	}
	return *o.ServiceName
}

// GetServiceNameOk returns a tuple with the ServiceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BasicBotBaseServicesInnerOneOf1) GetServiceNameOk() (*string, bool) {
	if o == nil || IsNil(o.ServiceName) {
		return nil, false
	}
	return o.ServiceName, true
}

// HasServiceName returns a boolean if a field has been set.
func (o *BasicBotBaseServicesInnerOneOf1) HasServiceName() bool {
	if o != nil && !IsNil(o.ServiceName) {
		return true
	}

	return false
}

// SetServiceName gets a reference to the given string and assigns it to the ServiceName field.
func (o *BasicBotBaseServicesInnerOneOf1) SetServiceName(v string) {
	o.ServiceName = &v
}

// GetConfigData returns the ConfigData field value if set, zero value otherwise.
func (o *BasicBotBaseServicesInnerOneOf1) GetConfigData() map[string]string {
	if o == nil || IsNil(o.ConfigData) {
		var ret map[string]string
		return ret
	}
	return *o.ConfigData
}

// GetConfigDataOk returns a tuple with the ConfigData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BasicBotBaseServicesInnerOneOf1) GetConfigDataOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.ConfigData) {
		return nil, false
	}
	return o.ConfigData, true
}

// HasConfigData returns a boolean if a field has been set.
func (o *BasicBotBaseServicesInnerOneOf1) HasConfigData() bool {
	if o != nil && !IsNil(o.ConfigData) {
		return true
	}

	return false
}

// SetConfigData gets a reference to the given map[string]string and assigns it to the ConfigData field.
func (o *BasicBotBaseServicesInnerOneOf1) SetConfigData(v map[string]string) {
	o.ConfigData = &v
}

func (o BasicBotBaseServicesInnerOneOf1) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BasicBotBaseServicesInnerOneOf1) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ServiceName) {
		toSerialize["service_name"] = o.ServiceName
	}
	if !IsNil(o.ConfigData) {
		toSerialize["config_data"] = o.ConfigData
	}
	return toSerialize, nil
}

type NullableBasicBotBaseServicesInnerOneOf1 struct {
	value *BasicBotBaseServicesInnerOneOf1
	isSet bool
}

func (v NullableBasicBotBaseServicesInnerOneOf1) Get() *BasicBotBaseServicesInnerOneOf1 {
	return v.value
}

func (v *NullableBasicBotBaseServicesInnerOneOf1) Set(val *BasicBotBaseServicesInnerOneOf1) {
	v.value = val
	v.isSet = true
}

func (v NullableBasicBotBaseServicesInnerOneOf1) IsSet() bool {
	return v.isSet
}

func (v *NullableBasicBotBaseServicesInnerOneOf1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBasicBotBaseServicesInnerOneOf1(val *BasicBotBaseServicesInnerOneOf1) *NullableBasicBotBaseServicesInnerOneOf1 {
	return &NullableBasicBotBaseServicesInnerOneOf1{value: val, isSet: true}
}

func (v NullableBasicBotBaseServicesInnerOneOf1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBasicBotBaseServicesInnerOneOf1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
