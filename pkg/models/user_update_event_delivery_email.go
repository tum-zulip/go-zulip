/*
Zulip REST API

Powerful open source group chat

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// checks if the UserUpdateEventDeliveryEmail type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UserUpdateEventDeliveryEmail{}

// UserUpdateEventDeliveryEmail When the value of a user's delivery email as visible to you changes, either due to the email address changing or your access to the user's email changing via an update to their `email_address_visibility` setting.  **Changes**: Prior to Zulip 7.0 (feature level 163), this event was sent only to the affected user, and this event would only be triggered by changing the affected user's delivery email.
type UserUpdateEventDeliveryEmail struct {
	// The ID of the user affected by this change.
	UserId *int32 `json:"user_id,omitempty"`
	// The new delivery email of the user.  This value can be `null` if the affected user changed their `email_address_visibility` setting such that you cannot access their real email.  **Changes**: Before Zulip 7.0 (feature level 163), `null` was not a possible value for this event as it was only sent to the affected user when their email address was changed.
	DeliveryEmail NullableString `json:"delivery_email,omitempty"`
}

// NewUserUpdateEventDeliveryEmail instantiates a new UserUpdateEventDeliveryEmail object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserUpdateEventDeliveryEmail() *UserUpdateEventDeliveryEmail {
	this := UserUpdateEventDeliveryEmail{}
	return &this
}

// NewUserUpdateEventDeliveryEmailWithDefaults instantiates a new UserUpdateEventDeliveryEmail object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserUpdateEventDeliveryEmailWithDefaults() *UserUpdateEventDeliveryEmail {
	this := UserUpdateEventDeliveryEmail{}
	return &this
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *UserUpdateEventDeliveryEmail) GetUserId() int32 {
	if o == nil || IsNil(o.UserId) {
		var ret int32
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserUpdateEventDeliveryEmail) GetUserIdOk() (*int32, bool) {
	if o == nil || IsNil(o.UserId) {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *UserUpdateEventDeliveryEmail) HasUserId() bool {
	if o != nil && !IsNil(o.UserId) {
		return true
	}

	return false
}

// SetUserId gets a reference to the given int32 and assigns it to the UserId field.
func (o *UserUpdateEventDeliveryEmail) SetUserId(v int32) {
	o.UserId = &v
}

// GetDeliveryEmail returns the DeliveryEmail field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UserUpdateEventDeliveryEmail) GetDeliveryEmail() string {
	if o == nil || IsNil(o.DeliveryEmail.Get()) {
		var ret string
		return ret
	}
	return *o.DeliveryEmail.Get()
}

// GetDeliveryEmailOk returns a tuple with the DeliveryEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UserUpdateEventDeliveryEmail) GetDeliveryEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DeliveryEmail.Get(), o.DeliveryEmail.IsSet()
}

// HasDeliveryEmail returns a boolean if a field has been set.
func (o *UserUpdateEventDeliveryEmail) HasDeliveryEmail() bool {
	if o != nil && o.DeliveryEmail.IsSet() {
		return true
	}

	return false
}

// SetDeliveryEmail gets a reference to the given NullableString and assigns it to the DeliveryEmail field.
func (o *UserUpdateEventDeliveryEmail) SetDeliveryEmail(v string) {
	o.DeliveryEmail.Set(&v)
}

// SetDeliveryEmailNil sets the value for DeliveryEmail to be an explicit nil
func (o *UserUpdateEventDeliveryEmail) SetDeliveryEmailNil() {
	o.DeliveryEmail.Set(nil)
}

// UnsetDeliveryEmail ensures that no value is present for DeliveryEmail, not even an explicit nil
func (o *UserUpdateEventDeliveryEmail) UnsetDeliveryEmail() {
	o.DeliveryEmail.Unset()
}

func (o UserUpdateEventDeliveryEmail) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UserUpdateEventDeliveryEmail) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.UserId) {
		toSerialize["user_id"] = o.UserId
	}
	if o.DeliveryEmail.IsSet() {
		toSerialize["delivery_email"] = o.DeliveryEmail.Get()
	}
	return toSerialize, nil
}

type NullableUserUpdateEventDeliveryEmail struct {
	value *UserUpdateEventDeliveryEmail
	isSet bool
}

func (v NullableUserUpdateEventDeliveryEmail) Get() *UserUpdateEventDeliveryEmail {
	return v.value
}

func (v *NullableUserUpdateEventDeliveryEmail) Set(val *UserUpdateEventDeliveryEmail) {
	v.value = val
	v.isSet = true
}

func (v NullableUserUpdateEventDeliveryEmail) IsSet() bool {
	return v.isSet
}

func (v *NullableUserUpdateEventDeliveryEmail) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserUpdateEventDeliveryEmail(val *UserUpdateEventDeliveryEmail) *NullableUserUpdateEventDeliveryEmail {
	return &NullableUserUpdateEventDeliveryEmail{value: val, isSet: true}
}

func (v NullableUserUpdateEventDeliveryEmail) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserUpdateEventDeliveryEmail) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
