/*
Zulip REST API

Powerful open source group chat 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the GetReadReceipts200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetReadReceipts200Response{}

// GetReadReceipts200Response struct for GetReadReceipts200Response
type GetReadReceipts200Response struct {
	Result interface{} `json:"result"`
	Msg interface{} `json:"msg"`
	IgnoredParametersUnsupported interface{} `json:"ignored_parameters_unsupported,omitempty"`
	// An array of IDs of users who have marked the target message as read and whose read status is available to the current user.  The IDs of users who have disabled sending read receipts (`\"send_read_receipts\": false`) will never appear in the response, nor will the message's sender. Additionally, the IDs of any users who have been muted by the current user or who have muted the current user will not be included in the response.  The current user's ID will appear if they have marked the target message as read.  **Changes**: Prior to Zulip 6.0 (feature level 143), the IDs of users who have been muted by or have muted the current user were included in the response. 
	UserIds []int32 `json:"user_ids,omitempty"`
}

type _GetReadReceipts200Response GetReadReceipts200Response

// NewGetReadReceipts200Response instantiates a new GetReadReceipts200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetReadReceipts200Response(result interface{}, msg interface{}) *GetReadReceipts200Response {
	this := GetReadReceipts200Response{}
	this.Result = result
	this.Msg = msg
	return &this
}

// NewGetReadReceipts200ResponseWithDefaults instantiates a new GetReadReceipts200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetReadReceipts200ResponseWithDefaults() *GetReadReceipts200Response {
	this := GetReadReceipts200Response{}
	return &this
}

// GetResult returns the Result field value
// If the value is explicit nil, the zero value for interface{} will be returned
func (o *GetReadReceipts200Response) GetResult() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}

	return o.Result
}

// GetResultOk returns a tuple with the Result field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetReadReceipts200Response) GetResultOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Result) {
		return nil, false
	}
	return &o.Result, true
}

// SetResult sets field value
func (o *GetReadReceipts200Response) SetResult(v interface{}) {
	o.Result = v
}

// GetMsg returns the Msg field value
// If the value is explicit nil, the zero value for interface{} will be returned
func (o *GetReadReceipts200Response) GetMsg() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}

	return o.Msg
}

// GetMsgOk returns a tuple with the Msg field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetReadReceipts200Response) GetMsgOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Msg) {
		return nil, false
	}
	return &o.Msg, true
}

// SetMsg sets field value
func (o *GetReadReceipts200Response) SetMsg(v interface{}) {
	o.Msg = v
}

// GetIgnoredParametersUnsupported returns the IgnoredParametersUnsupported field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetReadReceipts200Response) GetIgnoredParametersUnsupported() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.IgnoredParametersUnsupported
}

// GetIgnoredParametersUnsupportedOk returns a tuple with the IgnoredParametersUnsupported field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetReadReceipts200Response) GetIgnoredParametersUnsupportedOk() (*interface{}, bool) {
	if o == nil || IsNil(o.IgnoredParametersUnsupported) {
		return nil, false
	}
	return &o.IgnoredParametersUnsupported, true
}

// HasIgnoredParametersUnsupported returns a boolean if a field has been set.
func (o *GetReadReceipts200Response) HasIgnoredParametersUnsupported() bool {
	if o != nil && !IsNil(o.IgnoredParametersUnsupported) {
		return true
	}

	return false
}

// SetIgnoredParametersUnsupported gets a reference to the given interface{} and assigns it to the IgnoredParametersUnsupported field.
func (o *GetReadReceipts200Response) SetIgnoredParametersUnsupported(v interface{}) {
	o.IgnoredParametersUnsupported = v
}

// GetUserIds returns the UserIds field value if set, zero value otherwise.
func (o *GetReadReceipts200Response) GetUserIds() []int32 {
	if o == nil || IsNil(o.UserIds) {
		var ret []int32
		return ret
	}
	return o.UserIds
}

// GetUserIdsOk returns a tuple with the UserIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetReadReceipts200Response) GetUserIdsOk() ([]int32, bool) {
	if o == nil || IsNil(o.UserIds) {
		return nil, false
	}
	return o.UserIds, true
}

// HasUserIds returns a boolean if a field has been set.
func (o *GetReadReceipts200Response) HasUserIds() bool {
	if o != nil && !IsNil(o.UserIds) {
		return true
	}

	return false
}

// SetUserIds gets a reference to the given []int32 and assigns it to the UserIds field.
func (o *GetReadReceipts200Response) SetUserIds(v []int32) {
	o.UserIds = v
}

func (o GetReadReceipts200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetReadReceipts200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Result != nil {
		toSerialize["result"] = o.Result
	}
	if o.Msg != nil {
		toSerialize["msg"] = o.Msg
	}
	if o.IgnoredParametersUnsupported != nil {
		toSerialize["ignored_parameters_unsupported"] = o.IgnoredParametersUnsupported
	}
	if !IsNil(o.UserIds) {
		toSerialize["user_ids"] = o.UserIds
	}
	return toSerialize, nil
}

func (o *GetReadReceipts200Response) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"result",
		"msg",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varGetReadReceipts200Response := _GetReadReceipts200Response{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varGetReadReceipts200Response)

	if err != nil {
		return err
	}

	*o = GetReadReceipts200Response(varGetReadReceipts200Response)

	return err
}

type NullableGetReadReceipts200Response struct {
	value *GetReadReceipts200Response
	isSet bool
}

func (v NullableGetReadReceipts200Response) Get() *GetReadReceipts200Response {
	return v.value
}

func (v *NullableGetReadReceipts200Response) Set(val *GetReadReceipts200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableGetReadReceipts200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableGetReadReceipts200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetReadReceipts200Response(val *GetReadReceipts200Response) *NullableGetReadReceipts200Response {
	return &NullableGetReadReceipts200Response{value: val, isSet: true}
}

func (v NullableGetReadReceipts200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetReadReceipts200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


