/*
Zulip REST API

Powerful open source group chat

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// checks if the ExternalAuthMethod type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ExternalAuthMethod{}

// ExternalAuthMethod struct for ExternalAuthMethod
type ExternalAuthMethod struct {
	// A unique, table, machine-readable name for the authentication method, intended to be used by clients with special behavior for specific authentication methods to correctly identify the method.
	Name *string `json:"name,omitempty"`
	// Display name of the authentication method, to be used in all buttons for the authentication method.
	DisplayName *string `json:"display_name,omitempty"`
	// URL for an image to be displayed as an icon in all buttons for the external authentication method.  When `null`, no icon should be displayed.
	DisplayIcon NullableString `json:"display_icon,omitempty"`
	// URL to be used to initiate authentication using this method.
	LoginUrl *string `json:"login_url,omitempty"`
	// URL to be used to initiate account registration using this method.
	SignupUrl *string `json:"signup_url,omitempty"`
}

// NewExternalAuthMethod instantiates a new ExternalAuthMethod object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExternalAuthMethod() *ExternalAuthMethod {
	this := ExternalAuthMethod{}
	return &this
}

// NewExternalAuthMethodWithDefaults instantiates a new ExternalAuthMethod object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExternalAuthMethodWithDefaults() *ExternalAuthMethod {
	this := ExternalAuthMethod{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ExternalAuthMethod) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExternalAuthMethod) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ExternalAuthMethod) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ExternalAuthMethod) SetName(v string) {
	o.Name = &v
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *ExternalAuthMethod) GetDisplayName() string {
	if o == nil || IsNil(o.DisplayName) {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExternalAuthMethod) GetDisplayNameOk() (*string, bool) {
	if o == nil || IsNil(o.DisplayName) {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *ExternalAuthMethod) HasDisplayName() bool {
	if o != nil && !IsNil(o.DisplayName) {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *ExternalAuthMethod) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetDisplayIcon returns the DisplayIcon field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ExternalAuthMethod) GetDisplayIcon() string {
	if o == nil || IsNil(o.DisplayIcon.Get()) {
		var ret string
		return ret
	}
	return *o.DisplayIcon.Get()
}

// GetDisplayIconOk returns a tuple with the DisplayIcon field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ExternalAuthMethod) GetDisplayIconOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DisplayIcon.Get(), o.DisplayIcon.IsSet()
}

// HasDisplayIcon returns a boolean if a field has been set.
func (o *ExternalAuthMethod) HasDisplayIcon() bool {
	if o != nil && o.DisplayIcon.IsSet() {
		return true
	}

	return false
}

// SetDisplayIcon gets a reference to the given NullableString and assigns it to the DisplayIcon field.
func (o *ExternalAuthMethod) SetDisplayIcon(v string) {
	o.DisplayIcon.Set(&v)
}

// SetDisplayIconNil sets the value for DisplayIcon to be an explicit nil
func (o *ExternalAuthMethod) SetDisplayIconNil() {
	o.DisplayIcon.Set(nil)
}

// UnsetDisplayIcon ensures that no value is present for DisplayIcon, not even an explicit nil
func (o *ExternalAuthMethod) UnsetDisplayIcon() {
	o.DisplayIcon.Unset()
}

// GetLoginUrl returns the LoginUrl field value if set, zero value otherwise.
func (o *ExternalAuthMethod) GetLoginUrl() string {
	if o == nil || IsNil(o.LoginUrl) {
		var ret string
		return ret
	}
	return *o.LoginUrl
}

// GetLoginUrlOk returns a tuple with the LoginUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExternalAuthMethod) GetLoginUrlOk() (*string, bool) {
	if o == nil || IsNil(o.LoginUrl) {
		return nil, false
	}
	return o.LoginUrl, true
}

// HasLoginUrl returns a boolean if a field has been set.
func (o *ExternalAuthMethod) HasLoginUrl() bool {
	if o != nil && !IsNil(o.LoginUrl) {
		return true
	}

	return false
}

// SetLoginUrl gets a reference to the given string and assigns it to the LoginUrl field.
func (o *ExternalAuthMethod) SetLoginUrl(v string) {
	o.LoginUrl = &v
}

// GetSignupUrl returns the SignupUrl field value if set, zero value otherwise.
func (o *ExternalAuthMethod) GetSignupUrl() string {
	if o == nil || IsNil(o.SignupUrl) {
		var ret string
		return ret
	}
	return *o.SignupUrl
}

// GetSignupUrlOk returns a tuple with the SignupUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExternalAuthMethod) GetSignupUrlOk() (*string, bool) {
	if o == nil || IsNil(o.SignupUrl) {
		return nil, false
	}
	return o.SignupUrl, true
}

// HasSignupUrl returns a boolean if a field has been set.
func (o *ExternalAuthMethod) HasSignupUrl() bool {
	if o != nil && !IsNil(o.SignupUrl) {
		return true
	}

	return false
}

// SetSignupUrl gets a reference to the given string and assigns it to the SignupUrl field.
func (o *ExternalAuthMethod) SetSignupUrl(v string) {
	o.SignupUrl = &v
}

func (o ExternalAuthMethod) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ExternalAuthMethod) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.DisplayName) {
		toSerialize["display_name"] = o.DisplayName
	}
	if o.DisplayIcon.IsSet() {
		toSerialize["display_icon"] = o.DisplayIcon.Get()
	}
	if !IsNil(o.LoginUrl) {
		toSerialize["login_url"] = o.LoginUrl
	}
	if !IsNil(o.SignupUrl) {
		toSerialize["signup_url"] = o.SignupUrl
	}
	return toSerialize, nil
}

type NullableExternalAuthMethod struct {
	value *ExternalAuthMethod
	isSet bool
}

func (v NullableExternalAuthMethod) Get() *ExternalAuthMethod {
	return v.value
}

func (v *NullableExternalAuthMethod) Set(val *ExternalAuthMethod) {
	v.value = val
	v.isSet = true
}

func (v NullableExternalAuthMethod) IsSet() bool {
	return v.isSet
}

func (v *NullableExternalAuthMethod) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExternalAuthMethod(val *ExternalAuthMethod) *NullableExternalAuthMethod {
	return &NullableExternalAuthMethod{value: val, isSet: true}
}

func (v NullableExternalAuthMethod) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExternalAuthMethod) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
