/*
Zulip REST API

Powerful open source group chat 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// checks if the GetEvents200ResponseAllOfEventsInnerOneOf14 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetEvents200ResponseAllOfEventsInnerOneOf14{}

// GetEvents200ResponseAllOfEventsInnerOneOf14 Event sent to guest users when they lose access to a user.  **Changes**: As of Zulip 8.0 (feature level 228), this event is no longer deprecated.  In Zulip 8.0 (feature level 222), this event was deprecated and no longer sent to clients. Prior to this feature level, it was sent to all users in a Zulip organization when a user was deactivated. 
type GetEvents200ResponseAllOfEventsInnerOneOf14 struct {
	// The ID of the event. Events appear in increasing order but may not be consecutive. 
	Id *int32 `json:"id,omitempty"`
	Type *string `json:"type,omitempty"`
	Op *string `json:"op,omitempty"`
	Person *GetEvents200ResponseAllOfEventsInnerOneOf14Person `json:"person,omitempty"`
}

// NewGetEvents200ResponseAllOfEventsInnerOneOf14 instantiates a new GetEvents200ResponseAllOfEventsInnerOneOf14 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetEvents200ResponseAllOfEventsInnerOneOf14() *GetEvents200ResponseAllOfEventsInnerOneOf14 {
	this := GetEvents200ResponseAllOfEventsInnerOneOf14{}
	return &this
}

// NewGetEvents200ResponseAllOfEventsInnerOneOf14WithDefaults instantiates a new GetEvents200ResponseAllOfEventsInnerOneOf14 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetEvents200ResponseAllOfEventsInnerOneOf14WithDefaults() *GetEvents200ResponseAllOfEventsInnerOneOf14 {
	this := GetEvents200ResponseAllOfEventsInnerOneOf14{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf14) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf14) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf14) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf14) SetId(v int32) {
	o.Id = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf14) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf14) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf14) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf14) SetType(v string) {
	o.Type = &v
}

// GetOp returns the Op field value if set, zero value otherwise.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf14) GetOp() string {
	if o == nil || IsNil(o.Op) {
		var ret string
		return ret
	}
	return *o.Op
}

// GetOpOk returns a tuple with the Op field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf14) GetOpOk() (*string, bool) {
	if o == nil || IsNil(o.Op) {
		return nil, false
	}
	return o.Op, true
}

// HasOp returns a boolean if a field has been set.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf14) HasOp() bool {
	if o != nil && !IsNil(o.Op) {
		return true
	}

	return false
}

// SetOp gets a reference to the given string and assigns it to the Op field.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf14) SetOp(v string) {
	o.Op = &v
}

// GetPerson returns the Person field value if set, zero value otherwise.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf14) GetPerson() GetEvents200ResponseAllOfEventsInnerOneOf14Person {
	if o == nil || IsNil(o.Person) {
		var ret GetEvents200ResponseAllOfEventsInnerOneOf14Person
		return ret
	}
	return *o.Person
}

// GetPersonOk returns a tuple with the Person field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf14) GetPersonOk() (*GetEvents200ResponseAllOfEventsInnerOneOf14Person, bool) {
	if o == nil || IsNil(o.Person) {
		return nil, false
	}
	return o.Person, true
}

// HasPerson returns a boolean if a field has been set.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf14) HasPerson() bool {
	if o != nil && !IsNil(o.Person) {
		return true
	}

	return false
}

// SetPerson gets a reference to the given GetEvents200ResponseAllOfEventsInnerOneOf14Person and assigns it to the Person field.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf14) SetPerson(v GetEvents200ResponseAllOfEventsInnerOneOf14Person) {
	o.Person = &v
}

func (o GetEvents200ResponseAllOfEventsInnerOneOf14) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetEvents200ResponseAllOfEventsInnerOneOf14) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Op) {
		toSerialize["op"] = o.Op
	}
	if !IsNil(o.Person) {
		toSerialize["person"] = o.Person
	}
	return toSerialize, nil
}

type NullableGetEvents200ResponseAllOfEventsInnerOneOf14 struct {
	value *GetEvents200ResponseAllOfEventsInnerOneOf14
	isSet bool
}

func (v NullableGetEvents200ResponseAllOfEventsInnerOneOf14) Get() *GetEvents200ResponseAllOfEventsInnerOneOf14 {
	return v.value
}

func (v *NullableGetEvents200ResponseAllOfEventsInnerOneOf14) Set(val *GetEvents200ResponseAllOfEventsInnerOneOf14) {
	v.value = val
	v.isSet = true
}

func (v NullableGetEvents200ResponseAllOfEventsInnerOneOf14) IsSet() bool {
	return v.isSet
}

func (v *NullableGetEvents200ResponseAllOfEventsInnerOneOf14) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetEvents200ResponseAllOfEventsInnerOneOf14(val *GetEvents200ResponseAllOfEventsInnerOneOf14) *NullableGetEvents200ResponseAllOfEventsInnerOneOf14 {
	return &NullableGetEvents200ResponseAllOfEventsInnerOneOf14{value: val, isSet: true}
}

func (v NullableGetEvents200ResponseAllOfEventsInnerOneOf14) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetEvents200ResponseAllOfEventsInnerOneOf14) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


