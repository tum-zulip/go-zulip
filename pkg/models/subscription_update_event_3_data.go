/*
Zulip REST API

Powerful open source group chat

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// checks if the SubscriptionUpdateEvent3Data type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SubscriptionUpdateEvent3Data{}

// SubscriptionUpdateEvent3Data A dictionary containing the updated properties of the navigation view.
type SubscriptionUpdateEvent3Data struct {
	// The user-facing name for custom navigation views. Omit this field for built-in views.
	Name NullableString `json:"name,omitempty"`
	// Determines whether the view is pinned (true) or hidden in the menu (false).
	IsPinned NullableBool `json:"is_pinned,omitempty"`
}

// NewSubscriptionUpdateEvent3Data instantiates a new SubscriptionUpdateEvent3Data object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSubscriptionUpdateEvent3Data() *SubscriptionUpdateEvent3Data {
	this := SubscriptionUpdateEvent3Data{}
	return &this
}

// NewSubscriptionUpdateEvent3DataWithDefaults instantiates a new SubscriptionUpdateEvent3Data object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSubscriptionUpdateEvent3DataWithDefaults() *SubscriptionUpdateEvent3Data {
	this := SubscriptionUpdateEvent3Data{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SubscriptionUpdateEvent3Data) GetName() string {
	if o == nil || IsNil(o.Name.Get()) {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SubscriptionUpdateEvent3Data) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *SubscriptionUpdateEvent3Data) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *SubscriptionUpdateEvent3Data) SetName(v string) {
	o.Name.Set(&v)
}

// SetNameNil sets the value for Name to be an explicit nil
func (o *SubscriptionUpdateEvent3Data) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *SubscriptionUpdateEvent3Data) UnsetName() {
	o.Name.Unset()
}

// GetIsPinned returns the IsPinned field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SubscriptionUpdateEvent3Data) GetIsPinned() bool {
	if o == nil || IsNil(o.IsPinned.Get()) {
		var ret bool
		return ret
	}
	return *o.IsPinned.Get()
}

// GetIsPinnedOk returns a tuple with the IsPinned field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SubscriptionUpdateEvent3Data) GetIsPinnedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.IsPinned.Get(), o.IsPinned.IsSet()
}

// HasIsPinned returns a boolean if a field has been set.
func (o *SubscriptionUpdateEvent3Data) HasIsPinned() bool {
	if o != nil && o.IsPinned.IsSet() {
		return true
	}

	return false
}

// SetIsPinned gets a reference to the given NullableBool and assigns it to the IsPinned field.
func (o *SubscriptionUpdateEvent3Data) SetIsPinned(v bool) {
	o.IsPinned.Set(&v)
}

// SetIsPinnedNil sets the value for IsPinned to be an explicit nil
func (o *SubscriptionUpdateEvent3Data) SetIsPinnedNil() {
	o.IsPinned.Set(nil)
}

// UnsetIsPinned ensures that no value is present for IsPinned, not even an explicit nil
func (o *SubscriptionUpdateEvent3Data) UnsetIsPinned() {
	o.IsPinned.Unset()
}

func (o SubscriptionUpdateEvent3Data) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SubscriptionUpdateEvent3Data) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	if o.IsPinned.IsSet() {
		toSerialize["is_pinned"] = o.IsPinned.Get()
	}
	return toSerialize, nil
}

type NullableSubscriptionUpdateEvent3Data struct {
	value *SubscriptionUpdateEvent3Data
	isSet bool
}

func (v NullableSubscriptionUpdateEvent3Data) Get() *SubscriptionUpdateEvent3Data {
	return v.value
}

func (v *NullableSubscriptionUpdateEvent3Data) Set(val *SubscriptionUpdateEvent3Data) {
	v.value = val
	v.isSet = true
}

func (v NullableSubscriptionUpdateEvent3Data) IsSet() bool {
	return v.isSet
}

func (v *NullableSubscriptionUpdateEvent3Data) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSubscriptionUpdateEvent3Data(val *SubscriptionUpdateEvent3Data) *NullableSubscriptionUpdateEvent3Data {
	return &NullableSubscriptionUpdateEvent3Data{value: val, isSet: true}
}

func (v NullableSubscriptionUpdateEvent3Data) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSubscriptionUpdateEvent3Data) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
