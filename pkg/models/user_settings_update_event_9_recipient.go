/*
Zulip REST API

Powerful open source group chat

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// checks if the UserSettingsUpdateEvent9Recipient type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UserSettingsUpdateEvent9Recipient{}

// UserSettingsUpdateEvent9Recipient Object containing details about recipients of message edit typing notification.
type UserSettingsUpdateEvent9Recipient struct {
	// Type of message being composed. Must be `\"channel\"` or `\"direct\"`.
	Type *string `json:"type,omitempty"`
	// Only present if `type` is `\"channel\"`.  The unique ID of the channel to which message is being edited.
	ChannelId *int32 `json:"channel_id,omitempty"`
	// Only present if `type` is `\"channel\"`.  Topic within the channel where the message is being edited.
	Topic *string `json:"topic,omitempty"`
	// Present only if `type` is `direct`.  The user IDs of every recipient of this direct message.
	UserIds []int32 `json:"user_ids,omitempty"`
}

// NewUserSettingsUpdateEvent9Recipient instantiates a new UserSettingsUpdateEvent9Recipient object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserSettingsUpdateEvent9Recipient() *UserSettingsUpdateEvent9Recipient {
	this := UserSettingsUpdateEvent9Recipient{}
	return &this
}

// NewUserSettingsUpdateEvent9RecipientWithDefaults instantiates a new UserSettingsUpdateEvent9Recipient object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserSettingsUpdateEvent9RecipientWithDefaults() *UserSettingsUpdateEvent9Recipient {
	this := UserSettingsUpdateEvent9Recipient{}
	return &this
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *UserSettingsUpdateEvent9Recipient) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserSettingsUpdateEvent9Recipient) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *UserSettingsUpdateEvent9Recipient) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *UserSettingsUpdateEvent9Recipient) SetType(v string) {
	o.Type = &v
}

// GetChannelId returns the ChannelId field value if set, zero value otherwise.
func (o *UserSettingsUpdateEvent9Recipient) GetChannelId() int32 {
	if o == nil || IsNil(o.ChannelId) {
		var ret int32
		return ret
	}
	return *o.ChannelId
}

// GetChannelIdOk returns a tuple with the ChannelId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserSettingsUpdateEvent9Recipient) GetChannelIdOk() (*int32, bool) {
	if o == nil || IsNil(o.ChannelId) {
		return nil, false
	}
	return o.ChannelId, true
}

// HasChannelId returns a boolean if a field has been set.
func (o *UserSettingsUpdateEvent9Recipient) HasChannelId() bool {
	if o != nil && !IsNil(o.ChannelId) {
		return true
	}

	return false
}

// SetChannelId gets a reference to the given int32 and assigns it to the ChannelId field.
func (o *UserSettingsUpdateEvent9Recipient) SetChannelId(v int32) {
	o.ChannelId = &v
}

// GetTopic returns the Topic field value if set, zero value otherwise.
func (o *UserSettingsUpdateEvent9Recipient) GetTopic() string {
	if o == nil || IsNil(o.Topic) {
		var ret string
		return ret
	}
	return *o.Topic
}

// GetTopicOk returns a tuple with the Topic field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserSettingsUpdateEvent9Recipient) GetTopicOk() (*string, bool) {
	if o == nil || IsNil(o.Topic) {
		return nil, false
	}
	return o.Topic, true
}

// HasTopic returns a boolean if a field has been set.
func (o *UserSettingsUpdateEvent9Recipient) HasTopic() bool {
	if o != nil && !IsNil(o.Topic) {
		return true
	}

	return false
}

// SetTopic gets a reference to the given string and assigns it to the Topic field.
func (o *UserSettingsUpdateEvent9Recipient) SetTopic(v string) {
	o.Topic = &v
}

// GetUserIds returns the UserIds field value if set, zero value otherwise.
func (o *UserSettingsUpdateEvent9Recipient) GetUserIds() []int32 {
	if o == nil || IsNil(o.UserIds) {
		var ret []int32
		return ret
	}
	return o.UserIds
}

// GetUserIdsOk returns a tuple with the UserIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserSettingsUpdateEvent9Recipient) GetUserIdsOk() ([]int32, bool) {
	if o == nil || IsNil(o.UserIds) {
		return nil, false
	}
	return o.UserIds, true
}

// HasUserIds returns a boolean if a field has been set.
func (o *UserSettingsUpdateEvent9Recipient) HasUserIds() bool {
	if o != nil && !IsNil(o.UserIds) {
		return true
	}

	return false
}

// SetUserIds gets a reference to the given []int32 and assigns it to the UserIds field.
func (o *UserSettingsUpdateEvent9Recipient) SetUserIds(v []int32) {
	o.UserIds = v
}

func (o UserSettingsUpdateEvent9Recipient) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UserSettingsUpdateEvent9Recipient) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.ChannelId) {
		toSerialize["channel_id"] = o.ChannelId
	}
	if !IsNil(o.Topic) {
		toSerialize["topic"] = o.Topic
	}
	if !IsNil(o.UserIds) {
		toSerialize["user_ids"] = o.UserIds
	}
	return toSerialize, nil
}

type NullableUserSettingsUpdateEvent9Recipient struct {
	value *UserSettingsUpdateEvent9Recipient
	isSet bool
}

func (v NullableUserSettingsUpdateEvent9Recipient) Get() *UserSettingsUpdateEvent9Recipient {
	return v.value
}

func (v *NullableUserSettingsUpdateEvent9Recipient) Set(val *UserSettingsUpdateEvent9Recipient) {
	v.value = val
	v.isSet = true
}

func (v NullableUserSettingsUpdateEvent9Recipient) IsSet() bool {
	return v.isSet
}

func (v *NullableUserSettingsUpdateEvent9Recipient) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserSettingsUpdateEvent9Recipient(val *UserSettingsUpdateEvent9Recipient) *NullableUserSettingsUpdateEvent9Recipient {
	return &NullableUserSettingsUpdateEvent9Recipient{value: val, isSet: true}
}

func (v NullableUserSettingsUpdateEvent9Recipient) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserSettingsUpdateEvent9Recipient) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
