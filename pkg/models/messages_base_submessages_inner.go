/*
Zulip REST API

Powerful open source group chat 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// checks if the MessagesBaseSubmessagesInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MessagesBaseSubmessagesInner{}

// MessagesBaseSubmessagesInner struct for MessagesBaseSubmessagesInner
type MessagesBaseSubmessagesInner struct {
	// The type of the message. 
	MsgType *string `json:"msg_type,omitempty"`
	// The new content of the submessage. 
	Content *string `json:"content,omitempty"`
	// The ID of the message to which the submessage has been added. 
	MessageId *int32 `json:"message_id,omitempty"`
	// The ID of the user who sent the message. 
	SenderId *int32 `json:"sender_id,omitempty"`
	// The ID of the submessage. 
	Id *int32 `json:"id,omitempty"`
}

// NewMessagesBaseSubmessagesInner instantiates a new MessagesBaseSubmessagesInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMessagesBaseSubmessagesInner() *MessagesBaseSubmessagesInner {
	this := MessagesBaseSubmessagesInner{}
	return &this
}

// NewMessagesBaseSubmessagesInnerWithDefaults instantiates a new MessagesBaseSubmessagesInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMessagesBaseSubmessagesInnerWithDefaults() *MessagesBaseSubmessagesInner {
	this := MessagesBaseSubmessagesInner{}
	return &this
}

// GetMsgType returns the MsgType field value if set, zero value otherwise.
func (o *MessagesBaseSubmessagesInner) GetMsgType() string {
	if o == nil || IsNil(o.MsgType) {
		var ret string
		return ret
	}
	return *o.MsgType
}

// GetMsgTypeOk returns a tuple with the MsgType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MessagesBaseSubmessagesInner) GetMsgTypeOk() (*string, bool) {
	if o == nil || IsNil(o.MsgType) {
		return nil, false
	}
	return o.MsgType, true
}

// HasMsgType returns a boolean if a field has been set.
func (o *MessagesBaseSubmessagesInner) HasMsgType() bool {
	if o != nil && !IsNil(o.MsgType) {
		return true
	}

	return false
}

// SetMsgType gets a reference to the given string and assigns it to the MsgType field.
func (o *MessagesBaseSubmessagesInner) SetMsgType(v string) {
	o.MsgType = &v
}

// GetContent returns the Content field value if set, zero value otherwise.
func (o *MessagesBaseSubmessagesInner) GetContent() string {
	if o == nil || IsNil(o.Content) {
		var ret string
		return ret
	}
	return *o.Content
}

// GetContentOk returns a tuple with the Content field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MessagesBaseSubmessagesInner) GetContentOk() (*string, bool) {
	if o == nil || IsNil(o.Content) {
		return nil, false
	}
	return o.Content, true
}

// HasContent returns a boolean if a field has been set.
func (o *MessagesBaseSubmessagesInner) HasContent() bool {
	if o != nil && !IsNil(o.Content) {
		return true
	}

	return false
}

// SetContent gets a reference to the given string and assigns it to the Content field.
func (o *MessagesBaseSubmessagesInner) SetContent(v string) {
	o.Content = &v
}

// GetMessageId returns the MessageId field value if set, zero value otherwise.
func (o *MessagesBaseSubmessagesInner) GetMessageId() int32 {
	if o == nil || IsNil(o.MessageId) {
		var ret int32
		return ret
	}
	return *o.MessageId
}

// GetMessageIdOk returns a tuple with the MessageId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MessagesBaseSubmessagesInner) GetMessageIdOk() (*int32, bool) {
	if o == nil || IsNil(o.MessageId) {
		return nil, false
	}
	return o.MessageId, true
}

// HasMessageId returns a boolean if a field has been set.
func (o *MessagesBaseSubmessagesInner) HasMessageId() bool {
	if o != nil && !IsNil(o.MessageId) {
		return true
	}

	return false
}

// SetMessageId gets a reference to the given int32 and assigns it to the MessageId field.
func (o *MessagesBaseSubmessagesInner) SetMessageId(v int32) {
	o.MessageId = &v
}

// GetSenderId returns the SenderId field value if set, zero value otherwise.
func (o *MessagesBaseSubmessagesInner) GetSenderId() int32 {
	if o == nil || IsNil(o.SenderId) {
		var ret int32
		return ret
	}
	return *o.SenderId
}

// GetSenderIdOk returns a tuple with the SenderId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MessagesBaseSubmessagesInner) GetSenderIdOk() (*int32, bool) {
	if o == nil || IsNil(o.SenderId) {
		return nil, false
	}
	return o.SenderId, true
}

// HasSenderId returns a boolean if a field has been set.
func (o *MessagesBaseSubmessagesInner) HasSenderId() bool {
	if o != nil && !IsNil(o.SenderId) {
		return true
	}

	return false
}

// SetSenderId gets a reference to the given int32 and assigns it to the SenderId field.
func (o *MessagesBaseSubmessagesInner) SetSenderId(v int32) {
	o.SenderId = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *MessagesBaseSubmessagesInner) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MessagesBaseSubmessagesInner) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *MessagesBaseSubmessagesInner) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *MessagesBaseSubmessagesInner) SetId(v int32) {
	o.Id = &v
}

func (o MessagesBaseSubmessagesInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MessagesBaseSubmessagesInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.MsgType) {
		toSerialize["msg_type"] = o.MsgType
	}
	if !IsNil(o.Content) {
		toSerialize["content"] = o.Content
	}
	if !IsNil(o.MessageId) {
		toSerialize["message_id"] = o.MessageId
	}
	if !IsNil(o.SenderId) {
		toSerialize["sender_id"] = o.SenderId
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	return toSerialize, nil
}

type NullableMessagesBaseSubmessagesInner struct {
	value *MessagesBaseSubmessagesInner
	isSet bool
}

func (v NullableMessagesBaseSubmessagesInner) Get() *MessagesBaseSubmessagesInner {
	return v.value
}

func (v *NullableMessagesBaseSubmessagesInner) Set(val *MessagesBaseSubmessagesInner) {
	v.value = val
	v.isSet = true
}

func (v NullableMessagesBaseSubmessagesInner) IsSet() bool {
	return v.isSet
}

func (v *NullableMessagesBaseSubmessagesInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMessagesBaseSubmessagesInner(val *MessagesBaseSubmessagesInner) *NullableMessagesBaseSubmessagesInner {
	return &NullableMessagesBaseSubmessagesInner{value: val, isSet: true}
}

func (v NullableMessagesBaseSubmessagesInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMessagesBaseSubmessagesInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


