/*
Zulip REST API

Powerful open source group chat

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// checks if the RecentPrivateConversation type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RecentPrivateConversation{}

// RecentPrivateConversation Object describing a single recent direct conversation in the user's history.
type RecentPrivateConversation struct {
	// The highest message ID of the conversation, intended to support sorting the conversations by recency.
	MaxMessageId *int32 `json:"max_message_id,omitempty"`
	// The list of users other than the current user in the direct message conversation. This will be an empty list for direct messages sent to oneself.
	UserIds []int32 `json:"user_ids,omitempty"`
}

// NewRecentPrivateConversation instantiates a new RecentPrivateConversation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRecentPrivateConversation() *RecentPrivateConversation {
	this := RecentPrivateConversation{}
	return &this
}

// NewRecentPrivateConversationWithDefaults instantiates a new RecentPrivateConversation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRecentPrivateConversationWithDefaults() *RecentPrivateConversation {
	this := RecentPrivateConversation{}
	return &this
}

// GetMaxMessageId returns the MaxMessageId field value if set, zero value otherwise.
func (o *RecentPrivateConversation) GetMaxMessageId() int32 {
	if o == nil || IsNil(o.MaxMessageId) {
		var ret int32
		return ret
	}
	return *o.MaxMessageId
}

// GetMaxMessageIdOk returns a tuple with the MaxMessageId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecentPrivateConversation) GetMaxMessageIdOk() (*int32, bool) {
	if o == nil || IsNil(o.MaxMessageId) {
		return nil, false
	}
	return o.MaxMessageId, true
}

// HasMaxMessageId returns a boolean if a field has been set.
func (o *RecentPrivateConversation) HasMaxMessageId() bool {
	if o != nil && !IsNil(o.MaxMessageId) {
		return true
	}

	return false
}

// SetMaxMessageId gets a reference to the given int32 and assigns it to the MaxMessageId field.
func (o *RecentPrivateConversation) SetMaxMessageId(v int32) {
	o.MaxMessageId = &v
}

// GetUserIds returns the UserIds field value if set, zero value otherwise.
func (o *RecentPrivateConversation) GetUserIds() []int32 {
	if o == nil || IsNil(o.UserIds) {
		var ret []int32
		return ret
	}
	return o.UserIds
}

// GetUserIdsOk returns a tuple with the UserIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecentPrivateConversation) GetUserIdsOk() ([]int32, bool) {
	if o == nil || IsNil(o.UserIds) {
		return nil, false
	}
	return o.UserIds, true
}

// HasUserIds returns a boolean if a field has been set.
func (o *RecentPrivateConversation) HasUserIds() bool {
	if o != nil && !IsNil(o.UserIds) {
		return true
	}

	return false
}

// SetUserIds gets a reference to the given []int32 and assigns it to the UserIds field.
func (o *RecentPrivateConversation) SetUserIds(v []int32) {
	o.UserIds = v
}

func (o RecentPrivateConversation) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RecentPrivateConversation) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.MaxMessageId) {
		toSerialize["max_message_id"] = o.MaxMessageId
	}
	if !IsNil(o.UserIds) {
		toSerialize["user_ids"] = o.UserIds
	}
	return toSerialize, nil
}

type NullableRecentPrivateConversation struct {
	value *RecentPrivateConversation
	isSet bool
}

func (v NullableRecentPrivateConversation) Get() *RecentPrivateConversation {
	return v.value
}

func (v *NullableRecentPrivateConversation) Set(val *RecentPrivateConversation) {
	v.value = val
	v.isSet = true
}

func (v NullableRecentPrivateConversation) IsSet() bool {
	return v.isSet
}

func (v *NullableRecentPrivateConversation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRecentPrivateConversation(val *RecentPrivateConversation) *NullableRecentPrivateConversation {
	return &NullableRecentPrivateConversation{value: val, isSet: true}
}

func (v NullableRecentPrivateConversation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRecentPrivateConversation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
