/*
Zulip REST API

Powerful open source group chat 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// checks if the GroupSettingValueOneOf type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GroupSettingValueOneOf{}

// GroupSettingValueOneOf An object with these fields: 
type GroupSettingValueOneOf struct {
	// The list of IDs of individual users in the collection of users with this permission.  **Changes**: Prior to Zulip 10.0 (feature level 303), this list would include deactivated users who had the permission before being deactivated. 
	DirectMembers []int32 `json:"direct_members,omitempty"`
	// The list of IDs of the groups in the collection of users with this permission. 
	DirectSubgroups []int32 `json:"direct_subgroups,omitempty"`
}

// NewGroupSettingValueOneOf instantiates a new GroupSettingValueOneOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGroupSettingValueOneOf() *GroupSettingValueOneOf {
	this := GroupSettingValueOneOf{}
	return &this
}

// NewGroupSettingValueOneOfWithDefaults instantiates a new GroupSettingValueOneOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGroupSettingValueOneOfWithDefaults() *GroupSettingValueOneOf {
	this := GroupSettingValueOneOf{}
	return &this
}

// GetDirectMembers returns the DirectMembers field value if set, zero value otherwise.
func (o *GroupSettingValueOneOf) GetDirectMembers() []int32 {
	if o == nil || IsNil(o.DirectMembers) {
		var ret []int32
		return ret
	}
	return o.DirectMembers
}

// GetDirectMembersOk returns a tuple with the DirectMembers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GroupSettingValueOneOf) GetDirectMembersOk() ([]int32, bool) {
	if o == nil || IsNil(o.DirectMembers) {
		return nil, false
	}
	return o.DirectMembers, true
}

// HasDirectMembers returns a boolean if a field has been set.
func (o *GroupSettingValueOneOf) HasDirectMembers() bool {
	if o != nil && !IsNil(o.DirectMembers) {
		return true
	}

	return false
}

// SetDirectMembers gets a reference to the given []int32 and assigns it to the DirectMembers field.
func (o *GroupSettingValueOneOf) SetDirectMembers(v []int32) {
	o.DirectMembers = v
}

// GetDirectSubgroups returns the DirectSubgroups field value if set, zero value otherwise.
func (o *GroupSettingValueOneOf) GetDirectSubgroups() []int32 {
	if o == nil || IsNil(o.DirectSubgroups) {
		var ret []int32
		return ret
	}
	return o.DirectSubgroups
}

// GetDirectSubgroupsOk returns a tuple with the DirectSubgroups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GroupSettingValueOneOf) GetDirectSubgroupsOk() ([]int32, bool) {
	if o == nil || IsNil(o.DirectSubgroups) {
		return nil, false
	}
	return o.DirectSubgroups, true
}

// HasDirectSubgroups returns a boolean if a field has been set.
func (o *GroupSettingValueOneOf) HasDirectSubgroups() bool {
	if o != nil && !IsNil(o.DirectSubgroups) {
		return true
	}

	return false
}

// SetDirectSubgroups gets a reference to the given []int32 and assigns it to the DirectSubgroups field.
func (o *GroupSettingValueOneOf) SetDirectSubgroups(v []int32) {
	o.DirectSubgroups = v
}

func (o GroupSettingValueOneOf) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GroupSettingValueOneOf) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DirectMembers) {
		toSerialize["direct_members"] = o.DirectMembers
	}
	if !IsNil(o.DirectSubgroups) {
		toSerialize["direct_subgroups"] = o.DirectSubgroups
	}
	return toSerialize, nil
}

type NullableGroupSettingValueOneOf struct {
	value *GroupSettingValueOneOf
	isSet bool
}

func (v NullableGroupSettingValueOneOf) Get() *GroupSettingValueOneOf {
	return v.value
}

func (v *NullableGroupSettingValueOneOf) Set(val *GroupSettingValueOneOf) {
	v.value = val
	v.isSet = true
}

func (v NullableGroupSettingValueOneOf) IsSet() bool {
	return v.isSet
}

func (v *NullableGroupSettingValueOneOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGroupSettingValueOneOf(val *GroupSettingValueOneOf) *NullableGroupSettingValueOneOf {
	return &NullableGroupSettingValueOneOf{value: val, isSet: true}
}

func (v NullableGroupSettingValueOneOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGroupSettingValueOneOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


