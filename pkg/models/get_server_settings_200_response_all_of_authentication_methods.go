/*
Zulip REST API

Powerful open source group chat 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// checks if the GetServerSettings200ResponseAllOfAuthenticationMethods type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetServerSettings200ResponseAllOfAuthenticationMethods{}

// GetServerSettings200ResponseAllOfAuthenticationMethods Each key-value pair in the object indicates whether the authentication method is enabled on this server.  **Changes**: Deprecated in Zulip 2.1.0, in favor of the more expressive `external_authentication_methods`. 
type GetServerSettings200ResponseAllOfAuthenticationMethods struct {
	// Whether the user can authenticate using password. 
	Password *bool `json:"password,omitempty"`
	// Whether the user can authenticate using development API key. 
	Dev *bool `json:"dev,omitempty"`
	// Whether the user can authenticate using email. 
	Email *bool `json:"email,omitempty"`
	// Whether the user can authenticate using LDAP. 
	Ldap *bool `json:"ldap,omitempty"`
	// Whether the user can authenticate using REMOTE_USER. 
	Remoteuser *bool `json:"remoteuser,omitempty"`
	// Whether the user can authenticate using their GitHub account. 
	Github *bool `json:"github,omitempty"`
	// Whether the user can authenticate using their Microsoft Entra ID account. 
	Azuread *bool `json:"azuread,omitempty"`
	// Whether the user can authenticate using their GitLab account.  **Changes**: New in Zulip 3.0 (feature level 1). 
	Gitlab *bool `json:"gitlab,omitempty"`
	// Whether the user can authenticate using their Apple account. 
	Apple *bool `json:"apple,omitempty"`
	// Whether the user can authenticate using their Google account. 
	Google *bool `json:"google,omitempty"`
	// Whether the user can authenticate using SAML. 
	Saml *bool `json:"saml,omitempty"`
	// Whether the user can authenticate using OpenID Connect. 
	OpenidConnect *bool `json:"openid connect,omitempty"`
}

// NewGetServerSettings200ResponseAllOfAuthenticationMethods instantiates a new GetServerSettings200ResponseAllOfAuthenticationMethods object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetServerSettings200ResponseAllOfAuthenticationMethods() *GetServerSettings200ResponseAllOfAuthenticationMethods {
	this := GetServerSettings200ResponseAllOfAuthenticationMethods{}
	return &this
}

// NewGetServerSettings200ResponseAllOfAuthenticationMethodsWithDefaults instantiates a new GetServerSettings200ResponseAllOfAuthenticationMethods object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetServerSettings200ResponseAllOfAuthenticationMethodsWithDefaults() *GetServerSettings200ResponseAllOfAuthenticationMethods {
	this := GetServerSettings200ResponseAllOfAuthenticationMethods{}
	return &this
}

// GetPassword returns the Password field value if set, zero value otherwise.
func (o *GetServerSettings200ResponseAllOfAuthenticationMethods) GetPassword() bool {
	if o == nil || IsNil(o.Password) {
		var ret bool
		return ret
	}
	return *o.Password
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetServerSettings200ResponseAllOfAuthenticationMethods) GetPasswordOk() (*bool, bool) {
	if o == nil || IsNil(o.Password) {
		return nil, false
	}
	return o.Password, true
}

// HasPassword returns a boolean if a field has been set.
func (o *GetServerSettings200ResponseAllOfAuthenticationMethods) HasPassword() bool {
	if o != nil && !IsNil(o.Password) {
		return true
	}

	return false
}

// SetPassword gets a reference to the given bool and assigns it to the Password field.
func (o *GetServerSettings200ResponseAllOfAuthenticationMethods) SetPassword(v bool) {
	o.Password = &v
}

// GetDev returns the Dev field value if set, zero value otherwise.
func (o *GetServerSettings200ResponseAllOfAuthenticationMethods) GetDev() bool {
	if o == nil || IsNil(o.Dev) {
		var ret bool
		return ret
	}
	return *o.Dev
}

// GetDevOk returns a tuple with the Dev field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetServerSettings200ResponseAllOfAuthenticationMethods) GetDevOk() (*bool, bool) {
	if o == nil || IsNil(o.Dev) {
		return nil, false
	}
	return o.Dev, true
}

// HasDev returns a boolean if a field has been set.
func (o *GetServerSettings200ResponseAllOfAuthenticationMethods) HasDev() bool {
	if o != nil && !IsNil(o.Dev) {
		return true
	}

	return false
}

// SetDev gets a reference to the given bool and assigns it to the Dev field.
func (o *GetServerSettings200ResponseAllOfAuthenticationMethods) SetDev(v bool) {
	o.Dev = &v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *GetServerSettings200ResponseAllOfAuthenticationMethods) GetEmail() bool {
	if o == nil || IsNil(o.Email) {
		var ret bool
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetServerSettings200ResponseAllOfAuthenticationMethods) GetEmailOk() (*bool, bool) {
	if o == nil || IsNil(o.Email) {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *GetServerSettings200ResponseAllOfAuthenticationMethods) HasEmail() bool {
	if o != nil && !IsNil(o.Email) {
		return true
	}

	return false
}

// SetEmail gets a reference to the given bool and assigns it to the Email field.
func (o *GetServerSettings200ResponseAllOfAuthenticationMethods) SetEmail(v bool) {
	o.Email = &v
}

// GetLdap returns the Ldap field value if set, zero value otherwise.
func (o *GetServerSettings200ResponseAllOfAuthenticationMethods) GetLdap() bool {
	if o == nil || IsNil(o.Ldap) {
		var ret bool
		return ret
	}
	return *o.Ldap
}

// GetLdapOk returns a tuple with the Ldap field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetServerSettings200ResponseAllOfAuthenticationMethods) GetLdapOk() (*bool, bool) {
	if o == nil || IsNil(o.Ldap) {
		return nil, false
	}
	return o.Ldap, true
}

// HasLdap returns a boolean if a field has been set.
func (o *GetServerSettings200ResponseAllOfAuthenticationMethods) HasLdap() bool {
	if o != nil && !IsNil(o.Ldap) {
		return true
	}

	return false
}

// SetLdap gets a reference to the given bool and assigns it to the Ldap field.
func (o *GetServerSettings200ResponseAllOfAuthenticationMethods) SetLdap(v bool) {
	o.Ldap = &v
}

// GetRemoteuser returns the Remoteuser field value if set, zero value otherwise.
func (o *GetServerSettings200ResponseAllOfAuthenticationMethods) GetRemoteuser() bool {
	if o == nil || IsNil(o.Remoteuser) {
		var ret bool
		return ret
	}
	return *o.Remoteuser
}

// GetRemoteuserOk returns a tuple with the Remoteuser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetServerSettings200ResponseAllOfAuthenticationMethods) GetRemoteuserOk() (*bool, bool) {
	if o == nil || IsNil(o.Remoteuser) {
		return nil, false
	}
	return o.Remoteuser, true
}

// HasRemoteuser returns a boolean if a field has been set.
func (o *GetServerSettings200ResponseAllOfAuthenticationMethods) HasRemoteuser() bool {
	if o != nil && !IsNil(o.Remoteuser) {
		return true
	}

	return false
}

// SetRemoteuser gets a reference to the given bool and assigns it to the Remoteuser field.
func (o *GetServerSettings200ResponseAllOfAuthenticationMethods) SetRemoteuser(v bool) {
	o.Remoteuser = &v
}

// GetGithub returns the Github field value if set, zero value otherwise.
func (o *GetServerSettings200ResponseAllOfAuthenticationMethods) GetGithub() bool {
	if o == nil || IsNil(o.Github) {
		var ret bool
		return ret
	}
	return *o.Github
}

// GetGithubOk returns a tuple with the Github field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetServerSettings200ResponseAllOfAuthenticationMethods) GetGithubOk() (*bool, bool) {
	if o == nil || IsNil(o.Github) {
		return nil, false
	}
	return o.Github, true
}

// HasGithub returns a boolean if a field has been set.
func (o *GetServerSettings200ResponseAllOfAuthenticationMethods) HasGithub() bool {
	if o != nil && !IsNil(o.Github) {
		return true
	}

	return false
}

// SetGithub gets a reference to the given bool and assigns it to the Github field.
func (o *GetServerSettings200ResponseAllOfAuthenticationMethods) SetGithub(v bool) {
	o.Github = &v
}

// GetAzuread returns the Azuread field value if set, zero value otherwise.
func (o *GetServerSettings200ResponseAllOfAuthenticationMethods) GetAzuread() bool {
	if o == nil || IsNil(o.Azuread) {
		var ret bool
		return ret
	}
	return *o.Azuread
}

// GetAzureadOk returns a tuple with the Azuread field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetServerSettings200ResponseAllOfAuthenticationMethods) GetAzureadOk() (*bool, bool) {
	if o == nil || IsNil(o.Azuread) {
		return nil, false
	}
	return o.Azuread, true
}

// HasAzuread returns a boolean if a field has been set.
func (o *GetServerSettings200ResponseAllOfAuthenticationMethods) HasAzuread() bool {
	if o != nil && !IsNil(o.Azuread) {
		return true
	}

	return false
}

// SetAzuread gets a reference to the given bool and assigns it to the Azuread field.
func (o *GetServerSettings200ResponseAllOfAuthenticationMethods) SetAzuread(v bool) {
	o.Azuread = &v
}

// GetGitlab returns the Gitlab field value if set, zero value otherwise.
func (o *GetServerSettings200ResponseAllOfAuthenticationMethods) GetGitlab() bool {
	if o == nil || IsNil(o.Gitlab) {
		var ret bool
		return ret
	}
	return *o.Gitlab
}

// GetGitlabOk returns a tuple with the Gitlab field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetServerSettings200ResponseAllOfAuthenticationMethods) GetGitlabOk() (*bool, bool) {
	if o == nil || IsNil(o.Gitlab) {
		return nil, false
	}
	return o.Gitlab, true
}

// HasGitlab returns a boolean if a field has been set.
func (o *GetServerSettings200ResponseAllOfAuthenticationMethods) HasGitlab() bool {
	if o != nil && !IsNil(o.Gitlab) {
		return true
	}

	return false
}

// SetGitlab gets a reference to the given bool and assigns it to the Gitlab field.
func (o *GetServerSettings200ResponseAllOfAuthenticationMethods) SetGitlab(v bool) {
	o.Gitlab = &v
}

// GetApple returns the Apple field value if set, zero value otherwise.
func (o *GetServerSettings200ResponseAllOfAuthenticationMethods) GetApple() bool {
	if o == nil || IsNil(o.Apple) {
		var ret bool
		return ret
	}
	return *o.Apple
}

// GetAppleOk returns a tuple with the Apple field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetServerSettings200ResponseAllOfAuthenticationMethods) GetAppleOk() (*bool, bool) {
	if o == nil || IsNil(o.Apple) {
		return nil, false
	}
	return o.Apple, true
}

// HasApple returns a boolean if a field has been set.
func (o *GetServerSettings200ResponseAllOfAuthenticationMethods) HasApple() bool {
	if o != nil && !IsNil(o.Apple) {
		return true
	}

	return false
}

// SetApple gets a reference to the given bool and assigns it to the Apple field.
func (o *GetServerSettings200ResponseAllOfAuthenticationMethods) SetApple(v bool) {
	o.Apple = &v
}

// GetGoogle returns the Google field value if set, zero value otherwise.
func (o *GetServerSettings200ResponseAllOfAuthenticationMethods) GetGoogle() bool {
	if o == nil || IsNil(o.Google) {
		var ret bool
		return ret
	}
	return *o.Google
}

// GetGoogleOk returns a tuple with the Google field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetServerSettings200ResponseAllOfAuthenticationMethods) GetGoogleOk() (*bool, bool) {
	if o == nil || IsNil(o.Google) {
		return nil, false
	}
	return o.Google, true
}

// HasGoogle returns a boolean if a field has been set.
func (o *GetServerSettings200ResponseAllOfAuthenticationMethods) HasGoogle() bool {
	if o != nil && !IsNil(o.Google) {
		return true
	}

	return false
}

// SetGoogle gets a reference to the given bool and assigns it to the Google field.
func (o *GetServerSettings200ResponseAllOfAuthenticationMethods) SetGoogle(v bool) {
	o.Google = &v
}

// GetSaml returns the Saml field value if set, zero value otherwise.
func (o *GetServerSettings200ResponseAllOfAuthenticationMethods) GetSaml() bool {
	if o == nil || IsNil(o.Saml) {
		var ret bool
		return ret
	}
	return *o.Saml
}

// GetSamlOk returns a tuple with the Saml field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetServerSettings200ResponseAllOfAuthenticationMethods) GetSamlOk() (*bool, bool) {
	if o == nil || IsNil(o.Saml) {
		return nil, false
	}
	return o.Saml, true
}

// HasSaml returns a boolean if a field has been set.
func (o *GetServerSettings200ResponseAllOfAuthenticationMethods) HasSaml() bool {
	if o != nil && !IsNil(o.Saml) {
		return true
	}

	return false
}

// SetSaml gets a reference to the given bool and assigns it to the Saml field.
func (o *GetServerSettings200ResponseAllOfAuthenticationMethods) SetSaml(v bool) {
	o.Saml = &v
}

// GetOpenidConnect returns the OpenidConnect field value if set, zero value otherwise.
func (o *GetServerSettings200ResponseAllOfAuthenticationMethods) GetOpenidConnect() bool {
	if o == nil || IsNil(o.OpenidConnect) {
		var ret bool
		return ret
	}
	return *o.OpenidConnect
}

// GetOpenidConnectOk returns a tuple with the OpenidConnect field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetServerSettings200ResponseAllOfAuthenticationMethods) GetOpenidConnectOk() (*bool, bool) {
	if o == nil || IsNil(o.OpenidConnect) {
		return nil, false
	}
	return o.OpenidConnect, true
}

// HasOpenidConnect returns a boolean if a field has been set.
func (o *GetServerSettings200ResponseAllOfAuthenticationMethods) HasOpenidConnect() bool {
	if o != nil && !IsNil(o.OpenidConnect) {
		return true
	}

	return false
}

// SetOpenidConnect gets a reference to the given bool and assigns it to the OpenidConnect field.
func (o *GetServerSettings200ResponseAllOfAuthenticationMethods) SetOpenidConnect(v bool) {
	o.OpenidConnect = &v
}

func (o GetServerSettings200ResponseAllOfAuthenticationMethods) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetServerSettings200ResponseAllOfAuthenticationMethods) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Password) {
		toSerialize["password"] = o.Password
	}
	if !IsNil(o.Dev) {
		toSerialize["dev"] = o.Dev
	}
	if !IsNil(o.Email) {
		toSerialize["email"] = o.Email
	}
	if !IsNil(o.Ldap) {
		toSerialize["ldap"] = o.Ldap
	}
	if !IsNil(o.Remoteuser) {
		toSerialize["remoteuser"] = o.Remoteuser
	}
	if !IsNil(o.Github) {
		toSerialize["github"] = o.Github
	}
	if !IsNil(o.Azuread) {
		toSerialize["azuread"] = o.Azuread
	}
	if !IsNil(o.Gitlab) {
		toSerialize["gitlab"] = o.Gitlab
	}
	if !IsNil(o.Apple) {
		toSerialize["apple"] = o.Apple
	}
	if !IsNil(o.Google) {
		toSerialize["google"] = o.Google
	}
	if !IsNil(o.Saml) {
		toSerialize["saml"] = o.Saml
	}
	if !IsNil(o.OpenidConnect) {
		toSerialize["openid connect"] = o.OpenidConnect
	}
	return toSerialize, nil
}

type NullableGetServerSettings200ResponseAllOfAuthenticationMethods struct {
	value *GetServerSettings200ResponseAllOfAuthenticationMethods
	isSet bool
}

func (v NullableGetServerSettings200ResponseAllOfAuthenticationMethods) Get() *GetServerSettings200ResponseAllOfAuthenticationMethods {
	return v.value
}

func (v *NullableGetServerSettings200ResponseAllOfAuthenticationMethods) Set(val *GetServerSettings200ResponseAllOfAuthenticationMethods) {
	v.value = val
	v.isSet = true
}

func (v NullableGetServerSettings200ResponseAllOfAuthenticationMethods) IsSet() bool {
	return v.isSet
}

func (v *NullableGetServerSettings200ResponseAllOfAuthenticationMethods) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetServerSettings200ResponseAllOfAuthenticationMethods(val *GetServerSettings200ResponseAllOfAuthenticationMethods) *NullableGetServerSettings200ResponseAllOfAuthenticationMethods {
	return &NullableGetServerSettings200ResponseAllOfAuthenticationMethods{value: val, isSet: true}
}

func (v NullableGetServerSettings200ResponseAllOfAuthenticationMethods) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetServerSettings200ResponseAllOfAuthenticationMethods) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


