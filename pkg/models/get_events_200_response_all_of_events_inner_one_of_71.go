/*
Zulip REST API

Powerful open source group chat

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// checks if the GetEvents200ResponseAllOfEventsInnerOneOf71 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetEvents200ResponseAllOfEventsInnerOneOf71{}

// GetEvents200ResponseAllOfEventsInnerOneOf71 Event containing the ID of a deleted draft.
type GetEvents200ResponseAllOfEventsInnerOneOf71 struct {
	// The ID of the event. Events appear in increasing order but may not be consecutive.
	Id   *int32  `json:"id,omitempty"`
	Type *string `json:"type,omitempty"`
	Op   *string `json:"op,omitempty"`
	// The ID of the draft that was just deleted.
	DraftId *int32 `json:"draft_id,omitempty"`
}

// NewGetEvents200ResponseAllOfEventsInnerOneOf71 instantiates a new GetEvents200ResponseAllOfEventsInnerOneOf71 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetEvents200ResponseAllOfEventsInnerOneOf71() *GetEvents200ResponseAllOfEventsInnerOneOf71 {
	this := GetEvents200ResponseAllOfEventsInnerOneOf71{}
	return &this
}

// NewGetEvents200ResponseAllOfEventsInnerOneOf71WithDefaults instantiates a new GetEvents200ResponseAllOfEventsInnerOneOf71 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetEvents200ResponseAllOfEventsInnerOneOf71WithDefaults() *GetEvents200ResponseAllOfEventsInnerOneOf71 {
	this := GetEvents200ResponseAllOfEventsInnerOneOf71{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf71) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf71) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf71) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf71) SetId(v int32) {
	o.Id = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf71) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf71) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf71) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf71) SetType(v string) {
	o.Type = &v
}

// GetOp returns the Op field value if set, zero value otherwise.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf71) GetOp() string {
	if o == nil || IsNil(o.Op) {
		var ret string
		return ret
	}
	return *o.Op
}

// GetOpOk returns a tuple with the Op field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf71) GetOpOk() (*string, bool) {
	if o == nil || IsNil(o.Op) {
		return nil, false
	}
	return o.Op, true
}

// HasOp returns a boolean if a field has been set.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf71) HasOp() bool {
	if o != nil && !IsNil(o.Op) {
		return true
	}

	return false
}

// SetOp gets a reference to the given string and assigns it to the Op field.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf71) SetOp(v string) {
	o.Op = &v
}

// GetDraftId returns the DraftId field value if set, zero value otherwise.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf71) GetDraftId() int32 {
	if o == nil || IsNil(o.DraftId) {
		var ret int32
		return ret
	}
	return *o.DraftId
}

// GetDraftIdOk returns a tuple with the DraftId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf71) GetDraftIdOk() (*int32, bool) {
	if o == nil || IsNil(o.DraftId) {
		return nil, false
	}
	return o.DraftId, true
}

// HasDraftId returns a boolean if a field has been set.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf71) HasDraftId() bool {
	if o != nil && !IsNil(o.DraftId) {
		return true
	}

	return false
}

// SetDraftId gets a reference to the given int32 and assigns it to the DraftId field.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf71) SetDraftId(v int32) {
	o.DraftId = &v
}

func (o GetEvents200ResponseAllOfEventsInnerOneOf71) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetEvents200ResponseAllOfEventsInnerOneOf71) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Op) {
		toSerialize["op"] = o.Op
	}
	if !IsNil(o.DraftId) {
		toSerialize["draft_id"] = o.DraftId
	}
	return toSerialize, nil
}

type NullableGetEvents200ResponseAllOfEventsInnerOneOf71 struct {
	value *GetEvents200ResponseAllOfEventsInnerOneOf71
	isSet bool
}

func (v NullableGetEvents200ResponseAllOfEventsInnerOneOf71) Get() *GetEvents200ResponseAllOfEventsInnerOneOf71 {
	return v.value
}

func (v *NullableGetEvents200ResponseAllOfEventsInnerOneOf71) Set(val *GetEvents200ResponseAllOfEventsInnerOneOf71) {
	v.value = val
	v.isSet = true
}

func (v NullableGetEvents200ResponseAllOfEventsInnerOneOf71) IsSet() bool {
	return v.isSet
}

func (v *NullableGetEvents200ResponseAllOfEventsInnerOneOf71) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetEvents200ResponseAllOfEventsInnerOneOf71(val *GetEvents200ResponseAllOfEventsInnerOneOf71) *NullableGetEvents200ResponseAllOfEventsInnerOneOf71 {
	return &NullableGetEvents200ResponseAllOfEventsInnerOneOf71{value: val, isSet: true}
}

func (v NullableGetEvents200ResponseAllOfEventsInnerOneOf71) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetEvents200ResponseAllOfEventsInnerOneOf71) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
