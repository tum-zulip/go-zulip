/*
Zulip REST API

Powerful open source group chat

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the GetOwnUser200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetOwnUser200Response{}

// GetOwnUser200Response struct for GetOwnUser200Response
type GetOwnUser200Response struct {
	Result string `json:"result"`
	Msg    string `json:"msg"`
	// An array of any parameters sent in the request that are not supported by the endpoint.  See [error handling](/api/rest-error-handling#ignored-parameters) documentation for details on this and its change history.
	IgnoredParametersUnsupported []string `json:"ignored_parameters_unsupported,omitempty"`
	// URL for the requesting user's avatar.  **Changes**: New in Zulip 2.1.0.
	AvatarUrl *string `json:"avatar_url,omitempty"`
	// Version for the requesting user's avatar. Used for cache-busting requests for the user's avatar. Clients generally shouldn't need to use this; most avatar URLs sent by Zulip will already end with `?v={avatar_version}`.  **Changes**: New in Zulip 3.0 (feature level 10).
	AvatarVersion *int32 `json:"avatar_version,omitempty"`
	// Zulip API email of the requesting user.
	Email *string `json:"email,omitempty"`
	// Full name of the requesting user.
	FullName *string `json:"full_name,omitempty"`
	// A boolean indicating if the requesting user is an admin.
	IsAdmin *bool `json:"is_admin,omitempty"`
	// A boolean indicating if the requesting user is an organization owner.  **Changes**: New in Zulip 3.0 (feature level 8).
	IsOwner *bool `json:"is_owner,omitempty"`
	// [Organization-level role](/api/roles-and-permissions) of the requesting user. Possible values are:  - 100 = Organization owner - 200 = Organization administrator - 300 = Organization moderator - 400 = Member - 600 = Guest  **Changes**: New in Zulip 4.0 (feature level 59).
	Role *int32 `json:"role,omitempty"`
	// A boolean indicating if the requesting user is a guest.  **Changes**: New in Zulip 3.0 (feature level 10).
	IsGuest *bool `json:"is_guest,omitempty"`
	// A boolean indicating if the requesting user is a bot.
	IsBot *bool `json:"is_bot,omitempty"`
	// A boolean specifying whether the requesting user account has been deactivated.  **Changes**: New in Zulip 3.0 (feature level 10).
	IsActive *bool `json:"is_active,omitempty"`
	// The IANA identifier of the requesting user's [profile time zone](/help/change-your-timezone), which is used primarily to display the user's local time to other users.  **Changes**: New in Zulip 3.0 (feature level 10).
	Timezone *string `json:"timezone,omitempty"`
	// The time the requesting user's account was created.  **Changes**: New in Zulip 3.0 (feature level 10).
	DateJoined *string `json:"date_joined,omitempty"`
	// The integer ID of the last message received by the requesting user's account.  **Deprecated**. We plan to remove this in favor of recommending using `GET /messages` with `\"anchor\": \"newest\"`.
	// Deprecated
	MaxMessageId *int32 `json:"max_message_id,omitempty"`
	// The user's ID.
	UserId *int32 `json:"user_id,omitempty"`
	// The requesting user's real email address.  **Changes**: Prior to Zulip 7.0 (feature level 163), this field was present only when `email_address_visibility` was restricted and the requesting user had permission to access realm users' emails. As of this feature level, this field is always present.
	DeliveryEmail *string `json:"delivery_email,omitempty"`
	// Only present if `is_bot` is false; bots can't have custom profile fields.  A dictionary containing custom profile field data for the user. Each entry maps the integer ID of a custom profile field in the organization to a dictionary containing the user's data for that field. Generally the data includes just a single `value` key; for those custom profile fields supporting Markdown, a `rendered_value` key will also be present.
	ProfileData *map[string]ProfileDataValue `json:"profile_data,omitempty"`
}

type _GetOwnUser200Response GetOwnUser200Response

// NewGetOwnUser200Response instantiates a new GetOwnUser200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetOwnUser200Response(result string, msg string) *GetOwnUser200Response {
	this := GetOwnUser200Response{}
	this.Result = result
	this.Msg = msg
	return &this
}

// NewGetOwnUser200ResponseWithDefaults instantiates a new GetOwnUser200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetOwnUser200ResponseWithDefaults() *GetOwnUser200Response {
	this := GetOwnUser200Response{}
	return &this
}

// GetResult returns the Result field value
func (o *GetOwnUser200Response) GetResult() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Result
}

// GetResultOk returns a tuple with the Result field value
// and a boolean to check if the value has been set.
func (o *GetOwnUser200Response) GetResultOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Result, true
}

// SetResult sets field value
func (o *GetOwnUser200Response) SetResult(v string) {
	o.Result = v
}

// GetMsg returns the Msg field value
func (o *GetOwnUser200Response) GetMsg() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Msg
}

// GetMsgOk returns a tuple with the Msg field value
// and a boolean to check if the value has been set.
func (o *GetOwnUser200Response) GetMsgOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Msg, true
}

// SetMsg sets field value
func (o *GetOwnUser200Response) SetMsg(v string) {
	o.Msg = v
}

// GetIgnoredParametersUnsupported returns the IgnoredParametersUnsupported field value if set, zero value otherwise.
func (o *GetOwnUser200Response) GetIgnoredParametersUnsupported() []string {
	if o == nil || IsNil(o.IgnoredParametersUnsupported) {
		var ret []string
		return ret
	}
	return o.IgnoredParametersUnsupported
}

// GetIgnoredParametersUnsupportedOk returns a tuple with the IgnoredParametersUnsupported field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetOwnUser200Response) GetIgnoredParametersUnsupportedOk() ([]string, bool) {
	if o == nil || IsNil(o.IgnoredParametersUnsupported) {
		return nil, false
	}
	return o.IgnoredParametersUnsupported, true
}

// HasIgnoredParametersUnsupported returns a boolean if a field has been set.
func (o *GetOwnUser200Response) HasIgnoredParametersUnsupported() bool {
	if o != nil && !IsNil(o.IgnoredParametersUnsupported) {
		return true
	}

	return false
}

// SetIgnoredParametersUnsupported gets a reference to the given []string and assigns it to the IgnoredParametersUnsupported field.
func (o *GetOwnUser200Response) SetIgnoredParametersUnsupported(v []string) {
	o.IgnoredParametersUnsupported = v
}

// GetAvatarUrl returns the AvatarUrl field value if set, zero value otherwise.
func (o *GetOwnUser200Response) GetAvatarUrl() string {
	if o == nil || IsNil(o.AvatarUrl) {
		var ret string
		return ret
	}
	return *o.AvatarUrl
}

// GetAvatarUrlOk returns a tuple with the AvatarUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetOwnUser200Response) GetAvatarUrlOk() (*string, bool) {
	if o == nil || IsNil(o.AvatarUrl) {
		return nil, false
	}
	return o.AvatarUrl, true
}

// HasAvatarUrl returns a boolean if a field has been set.
func (o *GetOwnUser200Response) HasAvatarUrl() bool {
	if o != nil && !IsNil(o.AvatarUrl) {
		return true
	}

	return false
}

// SetAvatarUrl gets a reference to the given string and assigns it to the AvatarUrl field.
func (o *GetOwnUser200Response) SetAvatarUrl(v string) {
	o.AvatarUrl = &v
}

// GetAvatarVersion returns the AvatarVersion field value if set, zero value otherwise.
func (o *GetOwnUser200Response) GetAvatarVersion() int32 {
	if o == nil || IsNil(o.AvatarVersion) {
		var ret int32
		return ret
	}
	return *o.AvatarVersion
}

// GetAvatarVersionOk returns a tuple with the AvatarVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetOwnUser200Response) GetAvatarVersionOk() (*int32, bool) {
	if o == nil || IsNil(o.AvatarVersion) {
		return nil, false
	}
	return o.AvatarVersion, true
}

// HasAvatarVersion returns a boolean if a field has been set.
func (o *GetOwnUser200Response) HasAvatarVersion() bool {
	if o != nil && !IsNil(o.AvatarVersion) {
		return true
	}

	return false
}

// SetAvatarVersion gets a reference to the given int32 and assigns it to the AvatarVersion field.
func (o *GetOwnUser200Response) SetAvatarVersion(v int32) {
	o.AvatarVersion = &v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *GetOwnUser200Response) GetEmail() string {
	if o == nil || IsNil(o.Email) {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetOwnUser200Response) GetEmailOk() (*string, bool) {
	if o == nil || IsNil(o.Email) {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *GetOwnUser200Response) HasEmail() bool {
	if o != nil && !IsNil(o.Email) {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *GetOwnUser200Response) SetEmail(v string) {
	o.Email = &v
}

// GetFullName returns the FullName field value if set, zero value otherwise.
func (o *GetOwnUser200Response) GetFullName() string {
	if o == nil || IsNil(o.FullName) {
		var ret string
		return ret
	}
	return *o.FullName
}

// GetFullNameOk returns a tuple with the FullName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetOwnUser200Response) GetFullNameOk() (*string, bool) {
	if o == nil || IsNil(o.FullName) {
		return nil, false
	}
	return o.FullName, true
}

// HasFullName returns a boolean if a field has been set.
func (o *GetOwnUser200Response) HasFullName() bool {
	if o != nil && !IsNil(o.FullName) {
		return true
	}

	return false
}

// SetFullName gets a reference to the given string and assigns it to the FullName field.
func (o *GetOwnUser200Response) SetFullName(v string) {
	o.FullName = &v
}

// GetIsAdmin returns the IsAdmin field value if set, zero value otherwise.
func (o *GetOwnUser200Response) GetIsAdmin() bool {
	if o == nil || IsNil(o.IsAdmin) {
		var ret bool
		return ret
	}
	return *o.IsAdmin
}

// GetIsAdminOk returns a tuple with the IsAdmin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetOwnUser200Response) GetIsAdminOk() (*bool, bool) {
	if o == nil || IsNil(o.IsAdmin) {
		return nil, false
	}
	return o.IsAdmin, true
}

// HasIsAdmin returns a boolean if a field has been set.
func (o *GetOwnUser200Response) HasIsAdmin() bool {
	if o != nil && !IsNil(o.IsAdmin) {
		return true
	}

	return false
}

// SetIsAdmin gets a reference to the given bool and assigns it to the IsAdmin field.
func (o *GetOwnUser200Response) SetIsAdmin(v bool) {
	o.IsAdmin = &v
}

// GetIsOwner returns the IsOwner field value if set, zero value otherwise.
func (o *GetOwnUser200Response) GetIsOwner() bool {
	if o == nil || IsNil(o.IsOwner) {
		var ret bool
		return ret
	}
	return *o.IsOwner
}

// GetIsOwnerOk returns a tuple with the IsOwner field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetOwnUser200Response) GetIsOwnerOk() (*bool, bool) {
	if o == nil || IsNil(o.IsOwner) {
		return nil, false
	}
	return o.IsOwner, true
}

// HasIsOwner returns a boolean if a field has been set.
func (o *GetOwnUser200Response) HasIsOwner() bool {
	if o != nil && !IsNil(o.IsOwner) {
		return true
	}

	return false
}

// SetIsOwner gets a reference to the given bool and assigns it to the IsOwner field.
func (o *GetOwnUser200Response) SetIsOwner(v bool) {
	o.IsOwner = &v
}

// GetRole returns the Role field value if set, zero value otherwise.
func (o *GetOwnUser200Response) GetRole() int32 {
	if o == nil || IsNil(o.Role) {
		var ret int32
		return ret
	}
	return *o.Role
}

// GetRoleOk returns a tuple with the Role field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetOwnUser200Response) GetRoleOk() (*int32, bool) {
	if o == nil || IsNil(o.Role) {
		return nil, false
	}
	return o.Role, true
}

// HasRole returns a boolean if a field has been set.
func (o *GetOwnUser200Response) HasRole() bool {
	if o != nil && !IsNil(o.Role) {
		return true
	}

	return false
}

// SetRole gets a reference to the given int32 and assigns it to the Role field.
func (o *GetOwnUser200Response) SetRole(v int32) {
	o.Role = &v
}

// GetIsGuest returns the IsGuest field value if set, zero value otherwise.
func (o *GetOwnUser200Response) GetIsGuest() bool {
	if o == nil || IsNil(o.IsGuest) {
		var ret bool
		return ret
	}
	return *o.IsGuest
}

// GetIsGuestOk returns a tuple with the IsGuest field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetOwnUser200Response) GetIsGuestOk() (*bool, bool) {
	if o == nil || IsNil(o.IsGuest) {
		return nil, false
	}
	return o.IsGuest, true
}

// HasIsGuest returns a boolean if a field has been set.
func (o *GetOwnUser200Response) HasIsGuest() bool {
	if o != nil && !IsNil(o.IsGuest) {
		return true
	}

	return false
}

// SetIsGuest gets a reference to the given bool and assigns it to the IsGuest field.
func (o *GetOwnUser200Response) SetIsGuest(v bool) {
	o.IsGuest = &v
}

// GetIsBot returns the IsBot field value if set, zero value otherwise.
func (o *GetOwnUser200Response) GetIsBot() bool {
	if o == nil || IsNil(o.IsBot) {
		var ret bool
		return ret
	}
	return *o.IsBot
}

// GetIsBotOk returns a tuple with the IsBot field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetOwnUser200Response) GetIsBotOk() (*bool, bool) {
	if o == nil || IsNil(o.IsBot) {
		return nil, false
	}
	return o.IsBot, true
}

// HasIsBot returns a boolean if a field has been set.
func (o *GetOwnUser200Response) HasIsBot() bool {
	if o != nil && !IsNil(o.IsBot) {
		return true
	}

	return false
}

// SetIsBot gets a reference to the given bool and assigns it to the IsBot field.
func (o *GetOwnUser200Response) SetIsBot(v bool) {
	o.IsBot = &v
}

// GetIsActive returns the IsActive field value if set, zero value otherwise.
func (o *GetOwnUser200Response) GetIsActive() bool {
	if o == nil || IsNil(o.IsActive) {
		var ret bool
		return ret
	}
	return *o.IsActive
}

// GetIsActiveOk returns a tuple with the IsActive field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetOwnUser200Response) GetIsActiveOk() (*bool, bool) {
	if o == nil || IsNil(o.IsActive) {
		return nil, false
	}
	return o.IsActive, true
}

// HasIsActive returns a boolean if a field has been set.
func (o *GetOwnUser200Response) HasIsActive() bool {
	if o != nil && !IsNil(o.IsActive) {
		return true
	}

	return false
}

// SetIsActive gets a reference to the given bool and assigns it to the IsActive field.
func (o *GetOwnUser200Response) SetIsActive(v bool) {
	o.IsActive = &v
}

// GetTimezone returns the Timezone field value if set, zero value otherwise.
func (o *GetOwnUser200Response) GetTimezone() string {
	if o == nil || IsNil(o.Timezone) {
		var ret string
		return ret
	}
	return *o.Timezone
}

// GetTimezoneOk returns a tuple with the Timezone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetOwnUser200Response) GetTimezoneOk() (*string, bool) {
	if o == nil || IsNil(o.Timezone) {
		return nil, false
	}
	return o.Timezone, true
}

// HasTimezone returns a boolean if a field has been set.
func (o *GetOwnUser200Response) HasTimezone() bool {
	if o != nil && !IsNil(o.Timezone) {
		return true
	}

	return false
}

// SetTimezone gets a reference to the given string and assigns it to the Timezone field.
func (o *GetOwnUser200Response) SetTimezone(v string) {
	o.Timezone = &v
}

// GetDateJoined returns the DateJoined field value if set, zero value otherwise.
func (o *GetOwnUser200Response) GetDateJoined() string {
	if o == nil || IsNil(o.DateJoined) {
		var ret string
		return ret
	}
	return *o.DateJoined
}

// GetDateJoinedOk returns a tuple with the DateJoined field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetOwnUser200Response) GetDateJoinedOk() (*string, bool) {
	if o == nil || IsNil(o.DateJoined) {
		return nil, false
	}
	return o.DateJoined, true
}

// HasDateJoined returns a boolean if a field has been set.
func (o *GetOwnUser200Response) HasDateJoined() bool {
	if o != nil && !IsNil(o.DateJoined) {
		return true
	}

	return false
}

// SetDateJoined gets a reference to the given string and assigns it to the DateJoined field.
func (o *GetOwnUser200Response) SetDateJoined(v string) {
	o.DateJoined = &v
}

// GetMaxMessageId returns the MaxMessageId field value if set, zero value otherwise.
// Deprecated
func (o *GetOwnUser200Response) GetMaxMessageId() int32 {
	if o == nil || IsNil(o.MaxMessageId) {
		var ret int32
		return ret
	}
	return *o.MaxMessageId
}

// GetMaxMessageIdOk returns a tuple with the MaxMessageId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *GetOwnUser200Response) GetMaxMessageIdOk() (*int32, bool) {
	if o == nil || IsNil(o.MaxMessageId) {
		return nil, false
	}
	return o.MaxMessageId, true
}

// HasMaxMessageId returns a boolean if a field has been set.
func (o *GetOwnUser200Response) HasMaxMessageId() bool {
	if o != nil && !IsNil(o.MaxMessageId) {
		return true
	}

	return false
}

// SetMaxMessageId gets a reference to the given int32 and assigns it to the MaxMessageId field.
// Deprecated
func (o *GetOwnUser200Response) SetMaxMessageId(v int32) {
	o.MaxMessageId = &v
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *GetOwnUser200Response) GetUserId() int32 {
	if o == nil || IsNil(o.UserId) {
		var ret int32
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetOwnUser200Response) GetUserIdOk() (*int32, bool) {
	if o == nil || IsNil(o.UserId) {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *GetOwnUser200Response) HasUserId() bool {
	if o != nil && !IsNil(o.UserId) {
		return true
	}

	return false
}

// SetUserId gets a reference to the given int32 and assigns it to the UserId field.
func (o *GetOwnUser200Response) SetUserId(v int32) {
	o.UserId = &v
}

// GetDeliveryEmail returns the DeliveryEmail field value if set, zero value otherwise.
func (o *GetOwnUser200Response) GetDeliveryEmail() string {
	if o == nil || IsNil(o.DeliveryEmail) {
		var ret string
		return ret
	}
	return *o.DeliveryEmail
}

// GetDeliveryEmailOk returns a tuple with the DeliveryEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetOwnUser200Response) GetDeliveryEmailOk() (*string, bool) {
	if o == nil || IsNil(o.DeliveryEmail) {
		return nil, false
	}
	return o.DeliveryEmail, true
}

// HasDeliveryEmail returns a boolean if a field has been set.
func (o *GetOwnUser200Response) HasDeliveryEmail() bool {
	if o != nil && !IsNil(o.DeliveryEmail) {
		return true
	}

	return false
}

// SetDeliveryEmail gets a reference to the given string and assigns it to the DeliveryEmail field.
func (o *GetOwnUser200Response) SetDeliveryEmail(v string) {
	o.DeliveryEmail = &v
}

// GetProfileData returns the ProfileData field value if set, zero value otherwise.
func (o *GetOwnUser200Response) GetProfileData() map[string]ProfileDataValue {
	if o == nil || IsNil(o.ProfileData) {
		var ret map[string]ProfileDataValue
		return ret
	}
	return *o.ProfileData
}

// GetProfileDataOk returns a tuple with the ProfileData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetOwnUser200Response) GetProfileDataOk() (*map[string]ProfileDataValue, bool) {
	if o == nil || IsNil(o.ProfileData) {
		return nil, false
	}
	return o.ProfileData, true
}

// HasProfileData returns a boolean if a field has been set.
func (o *GetOwnUser200Response) HasProfileData() bool {
	if o != nil && !IsNil(o.ProfileData) {
		return true
	}

	return false
}

// SetProfileData gets a reference to the given map[string]ProfileDataValue and assigns it to the ProfileData field.
func (o *GetOwnUser200Response) SetProfileData(v map[string]ProfileDataValue) {
	o.ProfileData = &v
}

func (o GetOwnUser200Response) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetOwnUser200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["result"] = o.Result
	toSerialize["msg"] = o.Msg
	if !IsNil(o.IgnoredParametersUnsupported) {
		toSerialize["ignored_parameters_unsupported"] = o.IgnoredParametersUnsupported
	}
	if !IsNil(o.AvatarUrl) {
		toSerialize["avatar_url"] = o.AvatarUrl
	}
	if !IsNil(o.AvatarVersion) {
		toSerialize["avatar_version"] = o.AvatarVersion
	}
	if !IsNil(o.Email) {
		toSerialize["email"] = o.Email
	}
	if !IsNil(o.FullName) {
		toSerialize["full_name"] = o.FullName
	}
	if !IsNil(o.IsAdmin) {
		toSerialize["is_admin"] = o.IsAdmin
	}
	if !IsNil(o.IsOwner) {
		toSerialize["is_owner"] = o.IsOwner
	}
	if !IsNil(o.Role) {
		toSerialize["role"] = o.Role
	}
	if !IsNil(o.IsGuest) {
		toSerialize["is_guest"] = o.IsGuest
	}
	if !IsNil(o.IsBot) {
		toSerialize["is_bot"] = o.IsBot
	}
	if !IsNil(o.IsActive) {
		toSerialize["is_active"] = o.IsActive
	}
	if !IsNil(o.Timezone) {
		toSerialize["timezone"] = o.Timezone
	}
	if !IsNil(o.DateJoined) {
		toSerialize["date_joined"] = o.DateJoined
	}
	if !IsNil(o.MaxMessageId) {
		toSerialize["max_message_id"] = o.MaxMessageId
	}
	if !IsNil(o.UserId) {
		toSerialize["user_id"] = o.UserId
	}
	if !IsNil(o.DeliveryEmail) {
		toSerialize["delivery_email"] = o.DeliveryEmail
	}
	if !IsNil(o.ProfileData) {
		toSerialize["profile_data"] = o.ProfileData
	}
	return toSerialize, nil
}

func (o *GetOwnUser200Response) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"result",
		"msg",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varGetOwnUser200Response := _GetOwnUser200Response{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varGetOwnUser200Response)

	if err != nil {
		return err
	}

	*o = GetOwnUser200Response(varGetOwnUser200Response)

	return err
}

type NullableGetOwnUser200Response struct {
	value *GetOwnUser200Response
	isSet bool
}

func (v NullableGetOwnUser200Response) Get() *GetOwnUser200Response {
	return v.value
}

func (v *NullableGetOwnUser200Response) Set(val *GetOwnUser200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableGetOwnUser200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableGetOwnUser200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetOwnUser200Response(val *GetOwnUser200Response) *NullableGetOwnUser200Response {
	return &NullableGetOwnUser200Response{value: val, isSet: true}
}

func (v NullableGetOwnUser200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetOwnUser200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
