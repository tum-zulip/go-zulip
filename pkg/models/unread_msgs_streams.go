/*
Zulip REST API

Powerful open source group chat

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// checks if the UnreadMsgsStreams type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UnreadMsgsStreams{}

// UnreadMsgsStreams struct for UnreadMsgsStreams
type UnreadMsgsStreams struct {
	// The topic under which the messages were sent.  Note that the empty string topic may have been rewritten by the server to the value of `realm_empty_topic_display_name` found in the [`POST /register`](zulip.com/api/register-queue response depending on the value of the `empty_topic_name` [client capability][client-capabilities].  **Changes**: The `empty_topic_name` client capability is new in Zulip 10.0 (feature level 334).  [client-capabilities]: /api/register-queue#parameter-client_capabilities
	Topic *string `json:"topic,omitempty"`
	// The ID of the channel to which the messages were sent.
	StreamId *int32 `json:"stream_id,omitempty"`
	// The message IDs of the recent unread messages sent in this channel, sorted in ascending order.
	UnreadMessageIds []int32 `json:"unread_message_ids,omitempty"`
}

// NewUnreadMsgsStreams instantiates a new UnreadMsgsStreams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUnreadMsgsStreams() *UnreadMsgsStreams {
	this := UnreadMsgsStreams{}
	return &this
}

// NewUnreadMsgsStreamsWithDefaults instantiates a new UnreadMsgsStreams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUnreadMsgsStreamsWithDefaults() *UnreadMsgsStreams {
	this := UnreadMsgsStreams{}
	return &this
}

// GetTopic returns the Topic field value if set, zero value otherwise.
func (o *UnreadMsgsStreams) GetTopic() string {
	if o == nil || IsNil(o.Topic) {
		var ret string
		return ret
	}
	return *o.Topic
}

// GetTopicOk returns a tuple with the Topic field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnreadMsgsStreams) GetTopicOk() (*string, bool) {
	if o == nil || IsNil(o.Topic) {
		return nil, false
	}
	return o.Topic, true
}

// HasTopic returns a boolean if a field has been set.
func (o *UnreadMsgsStreams) HasTopic() bool {
	if o != nil && !IsNil(o.Topic) {
		return true
	}

	return false
}

// SetTopic gets a reference to the given string and assigns it to the Topic field.
func (o *UnreadMsgsStreams) SetTopic(v string) {
	o.Topic = &v
}

// GetStreamId returns the StreamId field value if set, zero value otherwise.
func (o *UnreadMsgsStreams) GetStreamId() int32 {
	if o == nil || IsNil(o.StreamId) {
		var ret int32
		return ret
	}
	return *o.StreamId
}

// GetStreamIdOk returns a tuple with the StreamId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnreadMsgsStreams) GetStreamIdOk() (*int32, bool) {
	if o == nil || IsNil(o.StreamId) {
		return nil, false
	}
	return o.StreamId, true
}

// HasStreamId returns a boolean if a field has been set.
func (o *UnreadMsgsStreams) HasStreamId() bool {
	if o != nil && !IsNil(o.StreamId) {
		return true
	}

	return false
}

// SetStreamId gets a reference to the given int32 and assigns it to the StreamId field.
func (o *UnreadMsgsStreams) SetStreamId(v int32) {
	o.StreamId = &v
}

// GetUnreadMessageIds returns the UnreadMessageIds field value if set, zero value otherwise.
func (o *UnreadMsgsStreams) GetUnreadMessageIds() []int32 {
	if o == nil || IsNil(o.UnreadMessageIds) {
		var ret []int32
		return ret
	}
	return o.UnreadMessageIds
}

// GetUnreadMessageIdsOk returns a tuple with the UnreadMessageIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnreadMsgsStreams) GetUnreadMessageIdsOk() ([]int32, bool) {
	if o == nil || IsNil(o.UnreadMessageIds) {
		return nil, false
	}
	return o.UnreadMessageIds, true
}

// HasUnreadMessageIds returns a boolean if a field has been set.
func (o *UnreadMsgsStreams) HasUnreadMessageIds() bool {
	if o != nil && !IsNil(o.UnreadMessageIds) {
		return true
	}

	return false
}

// SetUnreadMessageIds gets a reference to the given []int32 and assigns it to the UnreadMessageIds field.
func (o *UnreadMsgsStreams) SetUnreadMessageIds(v []int32) {
	o.UnreadMessageIds = v
}

func (o UnreadMsgsStreams) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UnreadMsgsStreams) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Topic) {
		toSerialize["topic"] = o.Topic
	}
	if !IsNil(o.StreamId) {
		toSerialize["stream_id"] = o.StreamId
	}
	if !IsNil(o.UnreadMessageIds) {
		toSerialize["unread_message_ids"] = o.UnreadMessageIds
	}
	return toSerialize, nil
}

type NullableUnreadMsgsStreams struct {
	value *UnreadMsgsStreams
	isSet bool
}

func (v NullableUnreadMsgsStreams) Get() *UnreadMsgsStreams {
	return v.value
}

func (v *NullableUnreadMsgsStreams) Set(val *UnreadMsgsStreams) {
	v.value = val
	v.isSet = true
}

func (v NullableUnreadMsgsStreams) IsSet() bool {
	return v.isSet
}

func (v *NullableUnreadMsgsStreams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUnreadMsgsStreams(val *UnreadMsgsStreams) *NullableUnreadMsgsStreams {
	return &NullableUnreadMsgsStreams{value: val, isSet: true}
}

func (v NullableUnreadMsgsStreams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUnreadMsgsStreams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
