/*
Zulip REST API

Powerful open source group chat

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// checks if the UnreadMsgsPms type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UnreadMsgsPms{}

// UnreadMsgsPms struct for UnreadMsgsPms
type UnreadMsgsPms struct {
	// The user ID of the other participant in this one-on-one direct message conversation. Will be the current user's ID for messages that they sent in a one-on-one direct message conversation with themself.  **Changes**: New in Zulip 5.0 (feature level 119), replacing the less clearly named `sender_id` field.
	OtherUserId *int32 `json:"other_user_id,omitempty"`
	// Old name for the `other_user_id` field. Clients should access this field in Zulip server versions that do not yet support `other_user_id`.  **Changes**: Deprecated in Zulip 5.0 (feature level 119). We expect to provide a next version of the full `unread_msgs` API before removing this legacy name.
	// Deprecated
	SenderId *int32 `json:"sender_id,omitempty"`
	// The message IDs of the recent unread direct messages sent by either user in this one-on-one direct message conversation, sorted in ascending order.
	UnreadMessageIds []int32 `json:"unread_message_ids,omitempty"`
}

// NewUnreadMsgsPms instantiates a new UnreadMsgsPms object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUnreadMsgsPms() *UnreadMsgsPms {
	this := UnreadMsgsPms{}
	return &this
}

// NewUnreadMsgsPmsWithDefaults instantiates a new UnreadMsgsPms object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUnreadMsgsPmsWithDefaults() *UnreadMsgsPms {
	this := UnreadMsgsPms{}
	return &this
}

// GetOtherUserId returns the OtherUserId field value if set, zero value otherwise.
func (o *UnreadMsgsPms) GetOtherUserId() int32 {
	if o == nil || IsNil(o.OtherUserId) {
		var ret int32
		return ret
	}
	return *o.OtherUserId
}

// GetOtherUserIdOk returns a tuple with the OtherUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnreadMsgsPms) GetOtherUserIdOk() (*int32, bool) {
	if o == nil || IsNil(o.OtherUserId) {
		return nil, false
	}
	return o.OtherUserId, true
}

// HasOtherUserId returns a boolean if a field has been set.
func (o *UnreadMsgsPms) HasOtherUserId() bool {
	if o != nil && !IsNil(o.OtherUserId) {
		return true
	}

	return false
}

// SetOtherUserId gets a reference to the given int32 and assigns it to the OtherUserId field.
func (o *UnreadMsgsPms) SetOtherUserId(v int32) {
	o.OtherUserId = &v
}

// GetSenderId returns the SenderId field value if set, zero value otherwise.
// Deprecated
func (o *UnreadMsgsPms) GetSenderId() int32 {
	if o == nil || IsNil(o.SenderId) {
		var ret int32
		return ret
	}
	return *o.SenderId
}

// GetSenderIdOk returns a tuple with the SenderId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *UnreadMsgsPms) GetSenderIdOk() (*int32, bool) {
	if o == nil || IsNil(o.SenderId) {
		return nil, false
	}
	return o.SenderId, true
}

// HasSenderId returns a boolean if a field has been set.
func (o *UnreadMsgsPms) HasSenderId() bool {
	if o != nil && !IsNil(o.SenderId) {
		return true
	}

	return false
}

// SetSenderId gets a reference to the given int32 and assigns it to the SenderId field.
// Deprecated
func (o *UnreadMsgsPms) SetSenderId(v int32) {
	o.SenderId = &v
}

// GetUnreadMessageIds returns the UnreadMessageIds field value if set, zero value otherwise.
func (o *UnreadMsgsPms) GetUnreadMessageIds() []int32 {
	if o == nil || IsNil(o.UnreadMessageIds) {
		var ret []int32
		return ret
	}
	return o.UnreadMessageIds
}

// GetUnreadMessageIdsOk returns a tuple with the UnreadMessageIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnreadMsgsPms) GetUnreadMessageIdsOk() ([]int32, bool) {
	if o == nil || IsNil(o.UnreadMessageIds) {
		return nil, false
	}
	return o.UnreadMessageIds, true
}

// HasUnreadMessageIds returns a boolean if a field has been set.
func (o *UnreadMsgsPms) HasUnreadMessageIds() bool {
	if o != nil && !IsNil(o.UnreadMessageIds) {
		return true
	}

	return false
}

// SetUnreadMessageIds gets a reference to the given []int32 and assigns it to the UnreadMessageIds field.
func (o *UnreadMsgsPms) SetUnreadMessageIds(v []int32) {
	o.UnreadMessageIds = v
}

func (o UnreadMsgsPms) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UnreadMsgsPms) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.OtherUserId) {
		toSerialize["other_user_id"] = o.OtherUserId
	}
	if !IsNil(o.SenderId) {
		toSerialize["sender_id"] = o.SenderId
	}
	if !IsNil(o.UnreadMessageIds) {
		toSerialize["unread_message_ids"] = o.UnreadMessageIds
	}
	return toSerialize, nil
}

type NullableUnreadMsgsPms struct {
	value *UnreadMsgsPms
	isSet bool
}

func (v NullableUnreadMsgsPms) Get() *UnreadMsgsPms {
	return v.value
}

func (v *NullableUnreadMsgsPms) Set(val *UnreadMsgsPms) {
	v.value = val
	v.isSet = true
}

func (v NullableUnreadMsgsPms) IsSet() bool {
	return v.isSet
}

func (v *NullableUnreadMsgsPms) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUnreadMsgsPms(val *UnreadMsgsPms) *NullableUnreadMsgsPms {
	return &NullableUnreadMsgsPms{value: val, isSet: true}
}

func (v NullableUnreadMsgsPms) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUnreadMsgsPms) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
