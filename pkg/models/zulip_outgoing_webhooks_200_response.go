/*
Zulip REST API

Powerful open source group chat

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// checks if the ZulipOutgoingWebhooks200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ZulipOutgoingWebhooks200Response{}

// ZulipOutgoingWebhooks200Response This is an example of the JSON payload that the Zulip server will `POST` to your server:
type ZulipOutgoingWebhooks200Response struct {
	// Email of the bot user.
	BotEmail *string `json:"bot_email,omitempty"`
	// The full name of the bot user.
	BotFullName *string `json:"bot_full_name,omitempty"`
	// The message content, in raw [Zulip-flavored Markdown](zulip.com/help/format-your-message-using-markdown format (not rendered to HTML).
	Data *string `json:"data,omitempty"`
	// What aspect of the message triggered the outgoing webhook notification. Possible values include `direct_message` and `mention`.  **Changes**: In Zulip 8.0 (feature level 201), renamed the trigger `private_message` to `direct_message`.
	Trigger *string `json:"trigger,omitempty"`
	// A string of alphanumeric characters that can be used to authenticate the webhook request (each bot user uses a fixed token). You can get the token used by a given outgoing webhook bot in the `zuliprc` file downloaded when creating the bot.
	Token   *string                                  `json:"token,omitempty"`
	Message *ZulipOutgoingWebhooks200ResponseMessage `json:"message,omitempty"`
}

// NewZulipOutgoingWebhooks200Response instantiates a new ZulipOutgoingWebhooks200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewZulipOutgoingWebhooks200Response() *ZulipOutgoingWebhooks200Response {
	this := ZulipOutgoingWebhooks200Response{}
	return &this
}

// NewZulipOutgoingWebhooks200ResponseWithDefaults instantiates a new ZulipOutgoingWebhooks200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewZulipOutgoingWebhooks200ResponseWithDefaults() *ZulipOutgoingWebhooks200Response {
	this := ZulipOutgoingWebhooks200Response{}
	return &this
}

// GetBotEmail returns the BotEmail field value if set, zero value otherwise.
func (o *ZulipOutgoingWebhooks200Response) GetBotEmail() string {
	if o == nil || IsNil(o.BotEmail) {
		var ret string
		return ret
	}
	return *o.BotEmail
}

// GetBotEmailOk returns a tuple with the BotEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZulipOutgoingWebhooks200Response) GetBotEmailOk() (*string, bool) {
	if o == nil || IsNil(o.BotEmail) {
		return nil, false
	}
	return o.BotEmail, true
}

// HasBotEmail returns a boolean if a field has been set.
func (o *ZulipOutgoingWebhooks200Response) HasBotEmail() bool {
	if o != nil && !IsNil(o.BotEmail) {
		return true
	}

	return false
}

// SetBotEmail gets a reference to the given string and assigns it to the BotEmail field.
func (o *ZulipOutgoingWebhooks200Response) SetBotEmail(v string) {
	o.BotEmail = &v
}

// GetBotFullName returns the BotFullName field value if set, zero value otherwise.
func (o *ZulipOutgoingWebhooks200Response) GetBotFullName() string {
	if o == nil || IsNil(o.BotFullName) {
		var ret string
		return ret
	}
	return *o.BotFullName
}

// GetBotFullNameOk returns a tuple with the BotFullName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZulipOutgoingWebhooks200Response) GetBotFullNameOk() (*string, bool) {
	if o == nil || IsNil(o.BotFullName) {
		return nil, false
	}
	return o.BotFullName, true
}

// HasBotFullName returns a boolean if a field has been set.
func (o *ZulipOutgoingWebhooks200Response) HasBotFullName() bool {
	if o != nil && !IsNil(o.BotFullName) {
		return true
	}

	return false
}

// SetBotFullName gets a reference to the given string and assigns it to the BotFullName field.
func (o *ZulipOutgoingWebhooks200Response) SetBotFullName(v string) {
	o.BotFullName = &v
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *ZulipOutgoingWebhooks200Response) GetData() string {
	if o == nil || IsNil(o.Data) {
		var ret string
		return ret
	}
	return *o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZulipOutgoingWebhooks200Response) GetDataOk() (*string, bool) {
	if o == nil || IsNil(o.Data) {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *ZulipOutgoingWebhooks200Response) HasData() bool {
	if o != nil && !IsNil(o.Data) {
		return true
	}

	return false
}

// SetData gets a reference to the given string and assigns it to the Data field.
func (o *ZulipOutgoingWebhooks200Response) SetData(v string) {
	o.Data = &v
}

// GetTrigger returns the Trigger field value if set, zero value otherwise.
func (o *ZulipOutgoingWebhooks200Response) GetTrigger() string {
	if o == nil || IsNil(o.Trigger) {
		var ret string
		return ret
	}
	return *o.Trigger
}

// GetTriggerOk returns a tuple with the Trigger field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZulipOutgoingWebhooks200Response) GetTriggerOk() (*string, bool) {
	if o == nil || IsNil(o.Trigger) {
		return nil, false
	}
	return o.Trigger, true
}

// HasTrigger returns a boolean if a field has been set.
func (o *ZulipOutgoingWebhooks200Response) HasTrigger() bool {
	if o != nil && !IsNil(o.Trigger) {
		return true
	}

	return false
}

// SetTrigger gets a reference to the given string and assigns it to the Trigger field.
func (o *ZulipOutgoingWebhooks200Response) SetTrigger(v string) {
	o.Trigger = &v
}

// GetToken returns the Token field value if set, zero value otherwise.
func (o *ZulipOutgoingWebhooks200Response) GetToken() string {
	if o == nil || IsNil(o.Token) {
		var ret string
		return ret
	}
	return *o.Token
}

// GetTokenOk returns a tuple with the Token field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZulipOutgoingWebhooks200Response) GetTokenOk() (*string, bool) {
	if o == nil || IsNil(o.Token) {
		return nil, false
	}
	return o.Token, true
}

// HasToken returns a boolean if a field has been set.
func (o *ZulipOutgoingWebhooks200Response) HasToken() bool {
	if o != nil && !IsNil(o.Token) {
		return true
	}

	return false
}

// SetToken gets a reference to the given string and assigns it to the Token field.
func (o *ZulipOutgoingWebhooks200Response) SetToken(v string) {
	o.Token = &v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *ZulipOutgoingWebhooks200Response) GetMessage() ZulipOutgoingWebhooks200ResponseMessage {
	if o == nil || IsNil(o.Message) {
		var ret ZulipOutgoingWebhooks200ResponseMessage
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZulipOutgoingWebhooks200Response) GetMessageOk() (*ZulipOutgoingWebhooks200ResponseMessage, bool) {
	if o == nil || IsNil(o.Message) {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *ZulipOutgoingWebhooks200Response) HasMessage() bool {
	if o != nil && !IsNil(o.Message) {
		return true
	}

	return false
}

// SetMessage gets a reference to the given ZulipOutgoingWebhooks200ResponseMessage and assigns it to the Message field.
func (o *ZulipOutgoingWebhooks200Response) SetMessage(v ZulipOutgoingWebhooks200ResponseMessage) {
	o.Message = &v
}

func (o ZulipOutgoingWebhooks200Response) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ZulipOutgoingWebhooks200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BotEmail) {
		toSerialize["bot_email"] = o.BotEmail
	}
	if !IsNil(o.BotFullName) {
		toSerialize["bot_full_name"] = o.BotFullName
	}
	if !IsNil(o.Data) {
		toSerialize["data"] = o.Data
	}
	if !IsNil(o.Trigger) {
		toSerialize["trigger"] = o.Trigger
	}
	if !IsNil(o.Token) {
		toSerialize["token"] = o.Token
	}
	if !IsNil(o.Message) {
		toSerialize["message"] = o.Message
	}
	return toSerialize, nil
}

type NullableZulipOutgoingWebhooks200Response struct {
	value *ZulipOutgoingWebhooks200Response
	isSet bool
}

func (v NullableZulipOutgoingWebhooks200Response) Get() *ZulipOutgoingWebhooks200Response {
	return v.value
}

func (v *NullableZulipOutgoingWebhooks200Response) Set(val *ZulipOutgoingWebhooks200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableZulipOutgoingWebhooks200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableZulipOutgoingWebhooks200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableZulipOutgoingWebhooks200Response(val *ZulipOutgoingWebhooks200Response) *NullableZulipOutgoingWebhooks200Response {
	return &NullableZulipOutgoingWebhooks200Response{value: val, isSet: true}
}

func (v NullableZulipOutgoingWebhooks200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableZulipOutgoingWebhooks200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
