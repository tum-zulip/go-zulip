/*
Zulip REST API

Powerful open source group chat

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// checks if the ChannelFolder type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ChannelFolder{}

// ChannelFolder Object containing the channel folder's attributes.
type ChannelFolder struct {
	// The name of the channel folder.
	Name *string `json:"name,omitempty"`
	// The UNIX timestamp for when the channel folder was created, in UTC seconds.
	DateCreated NullableTimestamp `json:"date_created,omitempty"`
	// The ID of the user who created this channel folder.
	CreatorId NullableInt32 `json:"creator_id,omitempty"`
	// The description of the channel folder.  See [Markdown message formatting](zulip.com/api/message-formatting for details on Zulip's HTML format.
	Description *string `json:"description,omitempty"`
	// The description of the channel folder rendered as HTML, intended to be used when displaying the channel folder description in a UI.  One should use the standard Zulip rendered_markdown CSS when displaying this content so that emoji, LaTeX, and other syntax work correctly. And any client-side security logic for user-generated message content should be applied when displaying this HTML as though it were the body of a Zulip message.
	RenderedDescription *string `json:"rendered_description,omitempty"`
	// This value determines in which order the channel folders will be displayed in the UI. The value is 0 indexed, and the value with the lower order will be displayed first.  **Changes**: New in Zulip 11.0 (feature level 414).
	Order *int32 `json:"order,omitempty"`
	// The ID of the channel folder.
	Id *int32 `json:"id,omitempty"`
	// Whether the channel folder is archived or not.
	IsArchived *bool `json:"is_archived,omitempty"`
}

// NewChannelFolder instantiates a new ChannelFolder object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewChannelFolder() *ChannelFolder {
	this := ChannelFolder{}
	return &this
}

// NewChannelFolderWithDefaults instantiates a new ChannelFolder object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewChannelFolderWithDefaults() *ChannelFolder {
	this := ChannelFolder{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ChannelFolder) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelFolder) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ChannelFolder) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ChannelFolder) SetName(v string) {
	o.Name = &v
}

// GetDateCreated returns the DateCreated field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ChannelFolder) GetDateCreated() Timestamp {
	if o == nil || IsNil(o.DateCreated.Get()) {
		var ret Timestamp
		return ret
	}
	return *o.DateCreated.Get()
}

// GetDateCreatedOk returns a tuple with the DateCreated field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ChannelFolder) GetDateCreatedOk() (*Timestamp, bool) {
	if o == nil {
		return nil, false
	}
	return o.DateCreated.Get(), o.DateCreated.IsSet()
}

// HasDateCreated returns a boolean if a field has been set.
func (o *ChannelFolder) HasDateCreated() bool {
	if o != nil && o.DateCreated.IsSet() {
		return true
	}

	return false
}

// SetDateCreated gets a reference to the given NullableInt32 and assigns it to the DateCreated field.
func (o *ChannelFolder) SetDateCreated(v Timestamp) {
	o.DateCreated.Set(&v)
}

// SetDateCreatedNil sets the value for DateCreated to be an explicit nil
func (o *ChannelFolder) SetDateCreatedNil() {
	o.DateCreated.Set(nil)
}

// UnsetDateCreated ensures that no value is present for DateCreated, not even an explicit nil
func (o *ChannelFolder) UnsetDateCreated() {
	o.DateCreated.Unset()
}

// GetCreatorId returns the CreatorId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ChannelFolder) GetCreatorId() int32 {
	if o == nil || IsNil(o.CreatorId.Get()) {
		var ret int32
		return ret
	}
	return *o.CreatorId.Get()
}

// GetCreatorIdOk returns a tuple with the CreatorId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ChannelFolder) GetCreatorIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.CreatorId.Get(), o.CreatorId.IsSet()
}

// HasCreatorId returns a boolean if a field has been set.
func (o *ChannelFolder) HasCreatorId() bool {
	if o != nil && o.CreatorId.IsSet() {
		return true
	}

	return false
}

// SetCreatorId gets a reference to the given NullableInt32 and assigns it to the CreatorId field.
func (o *ChannelFolder) SetCreatorId(v int32) {
	o.CreatorId.Set(&v)
}

// SetCreatorIdNil sets the value for CreatorId to be an explicit nil
func (o *ChannelFolder) SetCreatorIdNil() {
	o.CreatorId.Set(nil)
}

// UnsetCreatorId ensures that no value is present for CreatorId, not even an explicit nil
func (o *ChannelFolder) UnsetCreatorId() {
	o.CreatorId.Unset()
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ChannelFolder) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelFolder) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ChannelFolder) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ChannelFolder) SetDescription(v string) {
	o.Description = &v
}

// GetRenderedDescription returns the RenderedDescription field value if set, zero value otherwise.
func (o *ChannelFolder) GetRenderedDescription() string {
	if o == nil || IsNil(o.RenderedDescription) {
		var ret string
		return ret
	}
	return *o.RenderedDescription
}

// GetRenderedDescriptionOk returns a tuple with the RenderedDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelFolder) GetRenderedDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.RenderedDescription) {
		return nil, false
	}
	return o.RenderedDescription, true
}

// HasRenderedDescription returns a boolean if a field has been set.
func (o *ChannelFolder) HasRenderedDescription() bool {
	if o != nil && !IsNil(o.RenderedDescription) {
		return true
	}

	return false
}

// SetRenderedDescription gets a reference to the given string and assigns it to the RenderedDescription field.
func (o *ChannelFolder) SetRenderedDescription(v string) {
	o.RenderedDescription = &v
}

// GetOrder returns the Order field value if set, zero value otherwise.
func (o *ChannelFolder) GetOrder() int32 {
	if o == nil || IsNil(o.Order) {
		var ret int32
		return ret
	}
	return *o.Order
}

// GetOrderOk returns a tuple with the Order field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelFolder) GetOrderOk() (*int32, bool) {
	if o == nil || IsNil(o.Order) {
		return nil, false
	}
	return o.Order, true
}

// HasOrder returns a boolean if a field has been set.
func (o *ChannelFolder) HasOrder() bool {
	if o != nil && !IsNil(o.Order) {
		return true
	}

	return false
}

// SetOrder gets a reference to the given int32 and assigns it to the Order field.
func (o *ChannelFolder) SetOrder(v int32) {
	o.Order = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ChannelFolder) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelFolder) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ChannelFolder) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *ChannelFolder) SetId(v int32) {
	o.Id = &v
}

// GetIsArchived returns the IsArchived field value if set, zero value otherwise.
func (o *ChannelFolder) GetIsArchived() bool {
	if o == nil || IsNil(o.IsArchived) {
		var ret bool
		return ret
	}
	return *o.IsArchived
}

// GetIsArchivedOk returns a tuple with the IsArchived field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelFolder) GetIsArchivedOk() (*bool, bool) {
	if o == nil || IsNil(o.IsArchived) {
		return nil, false
	}
	return o.IsArchived, true
}

// HasIsArchived returns a boolean if a field has been set.
func (o *ChannelFolder) HasIsArchived() bool {
	if o != nil && !IsNil(o.IsArchived) {
		return true
	}

	return false
}

// SetIsArchived gets a reference to the given bool and assigns it to the IsArchived field.
func (o *ChannelFolder) SetIsArchived(v bool) {
	o.IsArchived = &v
}

func (o ChannelFolder) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ChannelFolder) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if o.DateCreated.IsSet() {
		toSerialize["date_created"] = o.DateCreated.Get()
	}
	if o.CreatorId.IsSet() {
		toSerialize["creator_id"] = o.CreatorId.Get()
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.RenderedDescription) {
		toSerialize["rendered_description"] = o.RenderedDescription
	}
	if !IsNil(o.Order) {
		toSerialize["order"] = o.Order
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.IsArchived) {
		toSerialize["is_archived"] = o.IsArchived
	}
	return toSerialize, nil
}

type NullableChannelFolder struct {
	value *ChannelFolder
	isSet bool
}

func (v NullableChannelFolder) Get() *ChannelFolder {
	return v.value
}

func (v *NullableChannelFolder) Set(val *ChannelFolder) {
	v.value = val
	v.isSet = true
}

func (v NullableChannelFolder) IsSet() bool {
	return v.isSet
}

func (v *NullableChannelFolder) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableChannelFolder(val *ChannelFolder) *NullableChannelFolder {
	return &NullableChannelFolder{value: val, isSet: true}
}

func (v NullableChannelFolder) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableChannelFolder) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
