/*
Zulip REST API

Powerful open source group chat 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// checks if the GetEvents200ResponseAllOfEventsInnerOneOf14Person type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetEvents200ResponseAllOfEventsInnerOneOf14Person{}

// GetEvents200ResponseAllOfEventsInnerOneOf14Person Object containing details of the deactivated user. 
type GetEvents200ResponseAllOfEventsInnerOneOf14Person struct {
	// The ID of the deactivated user. 
	UserId *int32 `json:"user_id,omitempty"`
	// The full name of the user.  **Deprecated**: We expect to remove this field in the future. 
	// Deprecated
	FullName *string `json:"full_name,omitempty"`
}

// NewGetEvents200ResponseAllOfEventsInnerOneOf14Person instantiates a new GetEvents200ResponseAllOfEventsInnerOneOf14Person object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetEvents200ResponseAllOfEventsInnerOneOf14Person() *GetEvents200ResponseAllOfEventsInnerOneOf14Person {
	this := GetEvents200ResponseAllOfEventsInnerOneOf14Person{}
	return &this
}

// NewGetEvents200ResponseAllOfEventsInnerOneOf14PersonWithDefaults instantiates a new GetEvents200ResponseAllOfEventsInnerOneOf14Person object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetEvents200ResponseAllOfEventsInnerOneOf14PersonWithDefaults() *GetEvents200ResponseAllOfEventsInnerOneOf14Person {
	this := GetEvents200ResponseAllOfEventsInnerOneOf14Person{}
	return &this
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf14Person) GetUserId() int32 {
	if o == nil || IsNil(o.UserId) {
		var ret int32
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf14Person) GetUserIdOk() (*int32, bool) {
	if o == nil || IsNil(o.UserId) {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf14Person) HasUserId() bool {
	if o != nil && !IsNil(o.UserId) {
		return true
	}

	return false
}

// SetUserId gets a reference to the given int32 and assigns it to the UserId field.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf14Person) SetUserId(v int32) {
	o.UserId = &v
}

// GetFullName returns the FullName field value if set, zero value otherwise.
// Deprecated
func (o *GetEvents200ResponseAllOfEventsInnerOneOf14Person) GetFullName() string {
	if o == nil || IsNil(o.FullName) {
		var ret string
		return ret
	}
	return *o.FullName
}

// GetFullNameOk returns a tuple with the FullName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *GetEvents200ResponseAllOfEventsInnerOneOf14Person) GetFullNameOk() (*string, bool) {
	if o == nil || IsNil(o.FullName) {
		return nil, false
	}
	return o.FullName, true
}

// HasFullName returns a boolean if a field has been set.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf14Person) HasFullName() bool {
	if o != nil && !IsNil(o.FullName) {
		return true
	}

	return false
}

// SetFullName gets a reference to the given string and assigns it to the FullName field.
// Deprecated
func (o *GetEvents200ResponseAllOfEventsInnerOneOf14Person) SetFullName(v string) {
	o.FullName = &v
}

func (o GetEvents200ResponseAllOfEventsInnerOneOf14Person) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetEvents200ResponseAllOfEventsInnerOneOf14Person) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.UserId) {
		toSerialize["user_id"] = o.UserId
	}
	if !IsNil(o.FullName) {
		toSerialize["full_name"] = o.FullName
	}
	return toSerialize, nil
}

type NullableGetEvents200ResponseAllOfEventsInnerOneOf14Person struct {
	value *GetEvents200ResponseAllOfEventsInnerOneOf14Person
	isSet bool
}

func (v NullableGetEvents200ResponseAllOfEventsInnerOneOf14Person) Get() *GetEvents200ResponseAllOfEventsInnerOneOf14Person {
	return v.value
}

func (v *NullableGetEvents200ResponseAllOfEventsInnerOneOf14Person) Set(val *GetEvents200ResponseAllOfEventsInnerOneOf14Person) {
	v.value = val
	v.isSet = true
}

func (v NullableGetEvents200ResponseAllOfEventsInnerOneOf14Person) IsSet() bool {
	return v.isSet
}

func (v *NullableGetEvents200ResponseAllOfEventsInnerOneOf14Person) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetEvents200ResponseAllOfEventsInnerOneOf14Person(val *GetEvents200ResponseAllOfEventsInnerOneOf14Person) *NullableGetEvents200ResponseAllOfEventsInnerOneOf14Person {
	return &NullableGetEvents200ResponseAllOfEventsInnerOneOf14Person{value: val, isSet: true}
}

func (v NullableGetEvents200ResponseAllOfEventsInnerOneOf14Person) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetEvents200ResponseAllOfEventsInnerOneOf14Person) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


