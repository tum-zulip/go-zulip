/*
Zulip REST API

Powerful open source group chat 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// checks if the GetMessageHistory200ResponseAllOfMessageHistoryInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetMessageHistory200ResponseAllOfMessageHistoryInner{}

// GetMessageHistory200ResponseAllOfMessageHistoryInner struct for GetMessageHistory200ResponseAllOfMessageHistoryInner
type GetMessageHistory200ResponseAllOfMessageHistoryInner struct {
	// The topic of the message immediately after this edit event. 
	Topic *string `json:"topic,omitempty"`
	// Only present if message's topic was edited.  The topic of the message immediately prior to this edit event. 
	PrevTopic *string `json:"prev_topic,omitempty"`
	// Only present if message's channel was edited.  The ID of the channel containing the message immediately after this edit event.  **Changes**: New in Zulip 5.0 (feature level 118). 
	Stream *int32 `json:"stream,omitempty"`
	// Only present if message's channel was edited.  The ID of the channel containing the message immediately prior to this edit event.  **Changes**: New in Zulip 3.0 (feature level 1). 
	PrevStream *int32 `json:"prev_stream,omitempty"`
	// The raw [Zulip-flavored Markdown](/help/format-your-message-using-markdown) content of the message immediately after this edit event. 
	Content *string `json:"content,omitempty"`
	// The rendered HTML representation of `content`.  See [Markdown message formatting](/api/message-formatting) for details on Zulip's HTML format. 
	RenderedContent *string `json:"rendered_content,omitempty"`
	// Only present if message's content was edited.  The raw [Zulip-flavored Markdown](/help/format-your-message-using-markdown) content of the message immediately prior to this edit event. 
	PrevContent *string `json:"prev_content,omitempty"`
	// Only present if message's content was edited.  The rendered HTML representation of `prev_content`.  See [Markdown message formatting](/api/message-formatting) for details on Zulip's HTML format. 
	PrevRenderedContent *string `json:"prev_rendered_content,omitempty"`
	// The ID of the user that made the edit.  Will be `null` only for edit history events predating March 2017.  Clients can display edit history events where this is `null` as modified by either the sender (for content edits) or an unknown user (for topic edits). 
	UserId NullableInt32 `json:"user_id,omitempty"`
	// Only present if message's content was edited.  An HTML diff between this version of the message and the previous one. 
	ContentHtmlDiff *string `json:"content_html_diff,omitempty"`
	// The UNIX timestamp for this edit. 
	Timestamp *int32 `json:"timestamp,omitempty"`
}

// NewGetMessageHistory200ResponseAllOfMessageHistoryInner instantiates a new GetMessageHistory200ResponseAllOfMessageHistoryInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetMessageHistory200ResponseAllOfMessageHistoryInner() *GetMessageHistory200ResponseAllOfMessageHistoryInner {
	this := GetMessageHistory200ResponseAllOfMessageHistoryInner{}
	return &this
}

// NewGetMessageHistory200ResponseAllOfMessageHistoryInnerWithDefaults instantiates a new GetMessageHistory200ResponseAllOfMessageHistoryInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetMessageHistory200ResponseAllOfMessageHistoryInnerWithDefaults() *GetMessageHistory200ResponseAllOfMessageHistoryInner {
	this := GetMessageHistory200ResponseAllOfMessageHistoryInner{}
	return &this
}

// GetTopic returns the Topic field value if set, zero value otherwise.
func (o *GetMessageHistory200ResponseAllOfMessageHistoryInner) GetTopic() string {
	if o == nil || IsNil(o.Topic) {
		var ret string
		return ret
	}
	return *o.Topic
}

// GetTopicOk returns a tuple with the Topic field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetMessageHistory200ResponseAllOfMessageHistoryInner) GetTopicOk() (*string, bool) {
	if o == nil || IsNil(o.Topic) {
		return nil, false
	}
	return o.Topic, true
}

// HasTopic returns a boolean if a field has been set.
func (o *GetMessageHistory200ResponseAllOfMessageHistoryInner) HasTopic() bool {
	if o != nil && !IsNil(o.Topic) {
		return true
	}

	return false
}

// SetTopic gets a reference to the given string and assigns it to the Topic field.
func (o *GetMessageHistory200ResponseAllOfMessageHistoryInner) SetTopic(v string) {
	o.Topic = &v
}

// GetPrevTopic returns the PrevTopic field value if set, zero value otherwise.
func (o *GetMessageHistory200ResponseAllOfMessageHistoryInner) GetPrevTopic() string {
	if o == nil || IsNil(o.PrevTopic) {
		var ret string
		return ret
	}
	return *o.PrevTopic
}

// GetPrevTopicOk returns a tuple with the PrevTopic field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetMessageHistory200ResponseAllOfMessageHistoryInner) GetPrevTopicOk() (*string, bool) {
	if o == nil || IsNil(o.PrevTopic) {
		return nil, false
	}
	return o.PrevTopic, true
}

// HasPrevTopic returns a boolean if a field has been set.
func (o *GetMessageHistory200ResponseAllOfMessageHistoryInner) HasPrevTopic() bool {
	if o != nil && !IsNil(o.PrevTopic) {
		return true
	}

	return false
}

// SetPrevTopic gets a reference to the given string and assigns it to the PrevTopic field.
func (o *GetMessageHistory200ResponseAllOfMessageHistoryInner) SetPrevTopic(v string) {
	o.PrevTopic = &v
}

// GetStream returns the Stream field value if set, zero value otherwise.
func (o *GetMessageHistory200ResponseAllOfMessageHistoryInner) GetStream() int32 {
	if o == nil || IsNil(o.Stream) {
		var ret int32
		return ret
	}
	return *o.Stream
}

// GetStreamOk returns a tuple with the Stream field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetMessageHistory200ResponseAllOfMessageHistoryInner) GetStreamOk() (*int32, bool) {
	if o == nil || IsNil(o.Stream) {
		return nil, false
	}
	return o.Stream, true
}

// HasStream returns a boolean if a field has been set.
func (o *GetMessageHistory200ResponseAllOfMessageHistoryInner) HasStream() bool {
	if o != nil && !IsNil(o.Stream) {
		return true
	}

	return false
}

// SetStream gets a reference to the given int32 and assigns it to the Stream field.
func (o *GetMessageHistory200ResponseAllOfMessageHistoryInner) SetStream(v int32) {
	o.Stream = &v
}

// GetPrevStream returns the PrevStream field value if set, zero value otherwise.
func (o *GetMessageHistory200ResponseAllOfMessageHistoryInner) GetPrevStream() int32 {
	if o == nil || IsNil(o.PrevStream) {
		var ret int32
		return ret
	}
	return *o.PrevStream
}

// GetPrevStreamOk returns a tuple with the PrevStream field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetMessageHistory200ResponseAllOfMessageHistoryInner) GetPrevStreamOk() (*int32, bool) {
	if o == nil || IsNil(o.PrevStream) {
		return nil, false
	}
	return o.PrevStream, true
}

// HasPrevStream returns a boolean if a field has been set.
func (o *GetMessageHistory200ResponseAllOfMessageHistoryInner) HasPrevStream() bool {
	if o != nil && !IsNil(o.PrevStream) {
		return true
	}

	return false
}

// SetPrevStream gets a reference to the given int32 and assigns it to the PrevStream field.
func (o *GetMessageHistory200ResponseAllOfMessageHistoryInner) SetPrevStream(v int32) {
	o.PrevStream = &v
}

// GetContent returns the Content field value if set, zero value otherwise.
func (o *GetMessageHistory200ResponseAllOfMessageHistoryInner) GetContent() string {
	if o == nil || IsNil(o.Content) {
		var ret string
		return ret
	}
	return *o.Content
}

// GetContentOk returns a tuple with the Content field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetMessageHistory200ResponseAllOfMessageHistoryInner) GetContentOk() (*string, bool) {
	if o == nil || IsNil(o.Content) {
		return nil, false
	}
	return o.Content, true
}

// HasContent returns a boolean if a field has been set.
func (o *GetMessageHistory200ResponseAllOfMessageHistoryInner) HasContent() bool {
	if o != nil && !IsNil(o.Content) {
		return true
	}

	return false
}

// SetContent gets a reference to the given string and assigns it to the Content field.
func (o *GetMessageHistory200ResponseAllOfMessageHistoryInner) SetContent(v string) {
	o.Content = &v
}

// GetRenderedContent returns the RenderedContent field value if set, zero value otherwise.
func (o *GetMessageHistory200ResponseAllOfMessageHistoryInner) GetRenderedContent() string {
	if o == nil || IsNil(o.RenderedContent) {
		var ret string
		return ret
	}
	return *o.RenderedContent
}

// GetRenderedContentOk returns a tuple with the RenderedContent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetMessageHistory200ResponseAllOfMessageHistoryInner) GetRenderedContentOk() (*string, bool) {
	if o == nil || IsNil(o.RenderedContent) {
		return nil, false
	}
	return o.RenderedContent, true
}

// HasRenderedContent returns a boolean if a field has been set.
func (o *GetMessageHistory200ResponseAllOfMessageHistoryInner) HasRenderedContent() bool {
	if o != nil && !IsNil(o.RenderedContent) {
		return true
	}

	return false
}

// SetRenderedContent gets a reference to the given string and assigns it to the RenderedContent field.
func (o *GetMessageHistory200ResponseAllOfMessageHistoryInner) SetRenderedContent(v string) {
	o.RenderedContent = &v
}

// GetPrevContent returns the PrevContent field value if set, zero value otherwise.
func (o *GetMessageHistory200ResponseAllOfMessageHistoryInner) GetPrevContent() string {
	if o == nil || IsNil(o.PrevContent) {
		var ret string
		return ret
	}
	return *o.PrevContent
}

// GetPrevContentOk returns a tuple with the PrevContent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetMessageHistory200ResponseAllOfMessageHistoryInner) GetPrevContentOk() (*string, bool) {
	if o == nil || IsNil(o.PrevContent) {
		return nil, false
	}
	return o.PrevContent, true
}

// HasPrevContent returns a boolean if a field has been set.
func (o *GetMessageHistory200ResponseAllOfMessageHistoryInner) HasPrevContent() bool {
	if o != nil && !IsNil(o.PrevContent) {
		return true
	}

	return false
}

// SetPrevContent gets a reference to the given string and assigns it to the PrevContent field.
func (o *GetMessageHistory200ResponseAllOfMessageHistoryInner) SetPrevContent(v string) {
	o.PrevContent = &v
}

// GetPrevRenderedContent returns the PrevRenderedContent field value if set, zero value otherwise.
func (o *GetMessageHistory200ResponseAllOfMessageHistoryInner) GetPrevRenderedContent() string {
	if o == nil || IsNil(o.PrevRenderedContent) {
		var ret string
		return ret
	}
	return *o.PrevRenderedContent
}

// GetPrevRenderedContentOk returns a tuple with the PrevRenderedContent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetMessageHistory200ResponseAllOfMessageHistoryInner) GetPrevRenderedContentOk() (*string, bool) {
	if o == nil || IsNil(o.PrevRenderedContent) {
		return nil, false
	}
	return o.PrevRenderedContent, true
}

// HasPrevRenderedContent returns a boolean if a field has been set.
func (o *GetMessageHistory200ResponseAllOfMessageHistoryInner) HasPrevRenderedContent() bool {
	if o != nil && !IsNil(o.PrevRenderedContent) {
		return true
	}

	return false
}

// SetPrevRenderedContent gets a reference to the given string and assigns it to the PrevRenderedContent field.
func (o *GetMessageHistory200ResponseAllOfMessageHistoryInner) SetPrevRenderedContent(v string) {
	o.PrevRenderedContent = &v
}

// GetUserId returns the UserId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetMessageHistory200ResponseAllOfMessageHistoryInner) GetUserId() int32 {
	if o == nil || IsNil(o.UserId.Get()) {
		var ret int32
		return ret
	}
	return *o.UserId.Get()
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetMessageHistory200ResponseAllOfMessageHistoryInner) GetUserIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.UserId.Get(), o.UserId.IsSet()
}

// HasUserId returns a boolean if a field has been set.
func (o *GetMessageHistory200ResponseAllOfMessageHistoryInner) HasUserId() bool {
	if o != nil && o.UserId.IsSet() {
		return true
	}

	return false
}

// SetUserId gets a reference to the given NullableInt32 and assigns it to the UserId field.
func (o *GetMessageHistory200ResponseAllOfMessageHistoryInner) SetUserId(v int32) {
	o.UserId.Set(&v)
}
// SetUserIdNil sets the value for UserId to be an explicit nil
func (o *GetMessageHistory200ResponseAllOfMessageHistoryInner) SetUserIdNil() {
	o.UserId.Set(nil)
}

// UnsetUserId ensures that no value is present for UserId, not even an explicit nil
func (o *GetMessageHistory200ResponseAllOfMessageHistoryInner) UnsetUserId() {
	o.UserId.Unset()
}

// GetContentHtmlDiff returns the ContentHtmlDiff field value if set, zero value otherwise.
func (o *GetMessageHistory200ResponseAllOfMessageHistoryInner) GetContentHtmlDiff() string {
	if o == nil || IsNil(o.ContentHtmlDiff) {
		var ret string
		return ret
	}
	return *o.ContentHtmlDiff
}

// GetContentHtmlDiffOk returns a tuple with the ContentHtmlDiff field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetMessageHistory200ResponseAllOfMessageHistoryInner) GetContentHtmlDiffOk() (*string, bool) {
	if o == nil || IsNil(o.ContentHtmlDiff) {
		return nil, false
	}
	return o.ContentHtmlDiff, true
}

// HasContentHtmlDiff returns a boolean if a field has been set.
func (o *GetMessageHistory200ResponseAllOfMessageHistoryInner) HasContentHtmlDiff() bool {
	if o != nil && !IsNil(o.ContentHtmlDiff) {
		return true
	}

	return false
}

// SetContentHtmlDiff gets a reference to the given string and assigns it to the ContentHtmlDiff field.
func (o *GetMessageHistory200ResponseAllOfMessageHistoryInner) SetContentHtmlDiff(v string) {
	o.ContentHtmlDiff = &v
}

// GetTimestamp returns the Timestamp field value if set, zero value otherwise.
func (o *GetMessageHistory200ResponseAllOfMessageHistoryInner) GetTimestamp() int32 {
	if o == nil || IsNil(o.Timestamp) {
		var ret int32
		return ret
	}
	return *o.Timestamp
}

// GetTimestampOk returns a tuple with the Timestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetMessageHistory200ResponseAllOfMessageHistoryInner) GetTimestampOk() (*int32, bool) {
	if o == nil || IsNil(o.Timestamp) {
		return nil, false
	}
	return o.Timestamp, true
}

// HasTimestamp returns a boolean if a field has been set.
func (o *GetMessageHistory200ResponseAllOfMessageHistoryInner) HasTimestamp() bool {
	if o != nil && !IsNil(o.Timestamp) {
		return true
	}

	return false
}

// SetTimestamp gets a reference to the given int32 and assigns it to the Timestamp field.
func (o *GetMessageHistory200ResponseAllOfMessageHistoryInner) SetTimestamp(v int32) {
	o.Timestamp = &v
}

func (o GetMessageHistory200ResponseAllOfMessageHistoryInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetMessageHistory200ResponseAllOfMessageHistoryInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Topic) {
		toSerialize["topic"] = o.Topic
	}
	if !IsNil(o.PrevTopic) {
		toSerialize["prev_topic"] = o.PrevTopic
	}
	if !IsNil(o.Stream) {
		toSerialize["stream"] = o.Stream
	}
	if !IsNil(o.PrevStream) {
		toSerialize["prev_stream"] = o.PrevStream
	}
	if !IsNil(o.Content) {
		toSerialize["content"] = o.Content
	}
	if !IsNil(o.RenderedContent) {
		toSerialize["rendered_content"] = o.RenderedContent
	}
	if !IsNil(o.PrevContent) {
		toSerialize["prev_content"] = o.PrevContent
	}
	if !IsNil(o.PrevRenderedContent) {
		toSerialize["prev_rendered_content"] = o.PrevRenderedContent
	}
	if o.UserId.IsSet() {
		toSerialize["user_id"] = o.UserId.Get()
	}
	if !IsNil(o.ContentHtmlDiff) {
		toSerialize["content_html_diff"] = o.ContentHtmlDiff
	}
	if !IsNil(o.Timestamp) {
		toSerialize["timestamp"] = o.Timestamp
	}
	return toSerialize, nil
}

type NullableGetMessageHistory200ResponseAllOfMessageHistoryInner struct {
	value *GetMessageHistory200ResponseAllOfMessageHistoryInner
	isSet bool
}

func (v NullableGetMessageHistory200ResponseAllOfMessageHistoryInner) Get() *GetMessageHistory200ResponseAllOfMessageHistoryInner {
	return v.value
}

func (v *NullableGetMessageHistory200ResponseAllOfMessageHistoryInner) Set(val *GetMessageHistory200ResponseAllOfMessageHistoryInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGetMessageHistory200ResponseAllOfMessageHistoryInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGetMessageHistory200ResponseAllOfMessageHistoryInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetMessageHistory200ResponseAllOfMessageHistoryInner(val *GetMessageHistory200ResponseAllOfMessageHistoryInner) *NullableGetMessageHistory200ResponseAllOfMessageHistoryInner {
	return &NullableGetMessageHistory200ResponseAllOfMessageHistoryInner{value: val, isSet: true}
}

func (v NullableGetMessageHistory200ResponseAllOfMessageHistoryInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetMessageHistory200ResponseAllOfMessageHistoryInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


