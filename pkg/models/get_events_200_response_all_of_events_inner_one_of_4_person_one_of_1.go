/*
Zulip REST API

Powerful open source group chat 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// checks if the GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf1 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf1{}

// GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf1 When a user changes their avatar. 
type GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf1 struct {
	// The ID of the user who is affected by this change. 
	UserId *int32 `json:"user_id,omitempty"`
	// The URL of the new avatar for the user. 
	AvatarUrl *string `json:"avatar_url,omitempty"`
	// The new avatar data source type for the user.  Value values are `G` (gravatar) and `U` (uploaded by user). 
	AvatarSource *string `json:"avatar_source,omitempty"`
	// The new medium-size avatar URL for user. 
	AvatarUrlMedium *string `json:"avatar_url_medium,omitempty"`
	// The version number for the user's avatar. This is useful for cache-busting. 
	AvatarVersion *int32 `json:"avatar_version,omitempty"`
}

// NewGetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf1 instantiates a new GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf1 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf1() *GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf1 {
	this := GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf1{}
	return &this
}

// NewGetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf1WithDefaults instantiates a new GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf1 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf1WithDefaults() *GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf1 {
	this := GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf1{}
	return &this
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf1) GetUserId() int32 {
	if o == nil || IsNil(o.UserId) {
		var ret int32
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf1) GetUserIdOk() (*int32, bool) {
	if o == nil || IsNil(o.UserId) {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf1) HasUserId() bool {
	if o != nil && !IsNil(o.UserId) {
		return true
	}

	return false
}

// SetUserId gets a reference to the given int32 and assigns it to the UserId field.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf1) SetUserId(v int32) {
	o.UserId = &v
}

// GetAvatarUrl returns the AvatarUrl field value if set, zero value otherwise.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf1) GetAvatarUrl() string {
	if o == nil || IsNil(o.AvatarUrl) {
		var ret string
		return ret
	}
	return *o.AvatarUrl
}

// GetAvatarUrlOk returns a tuple with the AvatarUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf1) GetAvatarUrlOk() (*string, bool) {
	if o == nil || IsNil(o.AvatarUrl) {
		return nil, false
	}
	return o.AvatarUrl, true
}

// HasAvatarUrl returns a boolean if a field has been set.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf1) HasAvatarUrl() bool {
	if o != nil && !IsNil(o.AvatarUrl) {
		return true
	}

	return false
}

// SetAvatarUrl gets a reference to the given string and assigns it to the AvatarUrl field.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf1) SetAvatarUrl(v string) {
	o.AvatarUrl = &v
}

// GetAvatarSource returns the AvatarSource field value if set, zero value otherwise.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf1) GetAvatarSource() string {
	if o == nil || IsNil(o.AvatarSource) {
		var ret string
		return ret
	}
	return *o.AvatarSource
}

// GetAvatarSourceOk returns a tuple with the AvatarSource field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf1) GetAvatarSourceOk() (*string, bool) {
	if o == nil || IsNil(o.AvatarSource) {
		return nil, false
	}
	return o.AvatarSource, true
}

// HasAvatarSource returns a boolean if a field has been set.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf1) HasAvatarSource() bool {
	if o != nil && !IsNil(o.AvatarSource) {
		return true
	}

	return false
}

// SetAvatarSource gets a reference to the given string and assigns it to the AvatarSource field.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf1) SetAvatarSource(v string) {
	o.AvatarSource = &v
}

// GetAvatarUrlMedium returns the AvatarUrlMedium field value if set, zero value otherwise.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf1) GetAvatarUrlMedium() string {
	if o == nil || IsNil(o.AvatarUrlMedium) {
		var ret string
		return ret
	}
	return *o.AvatarUrlMedium
}

// GetAvatarUrlMediumOk returns a tuple with the AvatarUrlMedium field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf1) GetAvatarUrlMediumOk() (*string, bool) {
	if o == nil || IsNil(o.AvatarUrlMedium) {
		return nil, false
	}
	return o.AvatarUrlMedium, true
}

// HasAvatarUrlMedium returns a boolean if a field has been set.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf1) HasAvatarUrlMedium() bool {
	if o != nil && !IsNil(o.AvatarUrlMedium) {
		return true
	}

	return false
}

// SetAvatarUrlMedium gets a reference to the given string and assigns it to the AvatarUrlMedium field.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf1) SetAvatarUrlMedium(v string) {
	o.AvatarUrlMedium = &v
}

// GetAvatarVersion returns the AvatarVersion field value if set, zero value otherwise.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf1) GetAvatarVersion() int32 {
	if o == nil || IsNil(o.AvatarVersion) {
		var ret int32
		return ret
	}
	return *o.AvatarVersion
}

// GetAvatarVersionOk returns a tuple with the AvatarVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf1) GetAvatarVersionOk() (*int32, bool) {
	if o == nil || IsNil(o.AvatarVersion) {
		return nil, false
	}
	return o.AvatarVersion, true
}

// HasAvatarVersion returns a boolean if a field has been set.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf1) HasAvatarVersion() bool {
	if o != nil && !IsNil(o.AvatarVersion) {
		return true
	}

	return false
}

// SetAvatarVersion gets a reference to the given int32 and assigns it to the AvatarVersion field.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf1) SetAvatarVersion(v int32) {
	o.AvatarVersion = &v
}

func (o GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf1) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf1) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.UserId) {
		toSerialize["user_id"] = o.UserId
	}
	if !IsNil(o.AvatarUrl) {
		toSerialize["avatar_url"] = o.AvatarUrl
	}
	if !IsNil(o.AvatarSource) {
		toSerialize["avatar_source"] = o.AvatarSource
	}
	if !IsNil(o.AvatarUrlMedium) {
		toSerialize["avatar_url_medium"] = o.AvatarUrlMedium
	}
	if !IsNil(o.AvatarVersion) {
		toSerialize["avatar_version"] = o.AvatarVersion
	}
	return toSerialize, nil
}

type NullableGetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf1 struct {
	value *GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf1
	isSet bool
}

func (v NullableGetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf1) Get() *GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf1 {
	return v.value
}

func (v *NullableGetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf1) Set(val *GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf1) {
	v.value = val
	v.isSet = true
}

func (v NullableGetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf1) IsSet() bool {
	return v.isSet
}

func (v *NullableGetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf1(val *GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf1) *NullableGetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf1 {
	return &NullableGetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf1{value: val, isSet: true}
}

func (v NullableGetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


