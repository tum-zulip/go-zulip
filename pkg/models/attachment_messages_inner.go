/*
Zulip REST API

Powerful open source group chat 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// checks if the AttachmentMessagesInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AttachmentMessagesInner{}

// AttachmentMessagesInner struct for AttachmentMessagesInner
type AttachmentMessagesInner struct {
	// Time when the message was sent as a UNIX timestamp multiplied by 1000 (matching the format of getTime() in JavaScript).  **Changes**: Changed in Zulip 3.0 (feature level 22). This field was previously strangely called `name` and was a floating point number. 
	DateSent *int32 `json:"date_sent,omitempty"`
	// The unique message ID. Messages should always be displayed sorted by ID. 
	Id *int32 `json:"id,omitempty"`
}

// NewAttachmentMessagesInner instantiates a new AttachmentMessagesInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAttachmentMessagesInner() *AttachmentMessagesInner {
	this := AttachmentMessagesInner{}
	return &this
}

// NewAttachmentMessagesInnerWithDefaults instantiates a new AttachmentMessagesInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAttachmentMessagesInnerWithDefaults() *AttachmentMessagesInner {
	this := AttachmentMessagesInner{}
	return &this
}

// GetDateSent returns the DateSent field value if set, zero value otherwise.
func (o *AttachmentMessagesInner) GetDateSent() int32 {
	if o == nil || IsNil(o.DateSent) {
		var ret int32
		return ret
	}
	return *o.DateSent
}

// GetDateSentOk returns a tuple with the DateSent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AttachmentMessagesInner) GetDateSentOk() (*int32, bool) {
	if o == nil || IsNil(o.DateSent) {
		return nil, false
	}
	return o.DateSent, true
}

// HasDateSent returns a boolean if a field has been set.
func (o *AttachmentMessagesInner) HasDateSent() bool {
	if o != nil && !IsNil(o.DateSent) {
		return true
	}

	return false
}

// SetDateSent gets a reference to the given int32 and assigns it to the DateSent field.
func (o *AttachmentMessagesInner) SetDateSent(v int32) {
	o.DateSent = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *AttachmentMessagesInner) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AttachmentMessagesInner) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *AttachmentMessagesInner) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *AttachmentMessagesInner) SetId(v int32) {
	o.Id = &v
}

func (o AttachmentMessagesInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AttachmentMessagesInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DateSent) {
		toSerialize["date_sent"] = o.DateSent
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	return toSerialize, nil
}

type NullableAttachmentMessagesInner struct {
	value *AttachmentMessagesInner
	isSet bool
}

func (v NullableAttachmentMessagesInner) Get() *AttachmentMessagesInner {
	return v.value
}

func (v *NullableAttachmentMessagesInner) Set(val *AttachmentMessagesInner) {
	v.value = val
	v.isSet = true
}

func (v NullableAttachmentMessagesInner) IsSet() bool {
	return v.isSet
}

func (v *NullableAttachmentMessagesInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAttachmentMessagesInner(val *AttachmentMessagesInner) *NullableAttachmentMessagesInner {
	return &NullableAttachmentMessagesInner{value: val, isSet: true}
}

func (v NullableAttachmentMessagesInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAttachmentMessagesInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


