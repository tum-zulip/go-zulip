/*
Zulip REST API

Powerful open source group chat

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// checks if the SavedSnippet type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SavedSnippet{}

// SavedSnippet Object containing the details of the saved snippet.
type SavedSnippet struct {
	// The unique ID of the saved snippet.
	Id *int32 `json:"id,omitempty"`
	// The title of the saved snippet.
	Title *string `json:"title,omitempty"`
	// The content of the saved snippet in [Zulip-flavored Markdown](zulip.com/help/format-your-message-using-markdown format.  Clients should insert this content into a message when using a saved snippet.
	Content *string `json:"content,omitempty"`
	// The UNIX timestamp for when the saved snippet was created, in UTC seconds.
	DateCreated *Timestamp `json:"date_created,omitempty"`
}

// NewSavedSnippet instantiates a new SavedSnippet object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSavedSnippet() *SavedSnippet {
	this := SavedSnippet{}
	return &this
}

// NewSavedSnippetWithDefaults instantiates a new SavedSnippet object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSavedSnippetWithDefaults() *SavedSnippet {
	this := SavedSnippet{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *SavedSnippet) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SavedSnippet) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *SavedSnippet) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *SavedSnippet) SetId(v int32) {
	o.Id = &v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *SavedSnippet) GetTitle() string {
	if o == nil || IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SavedSnippet) GetTitleOk() (*string, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *SavedSnippet) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *SavedSnippet) SetTitle(v string) {
	o.Title = &v
}

// GetContent returns the Content field value if set, zero value otherwise.
func (o *SavedSnippet) GetContent() string {
	if o == nil || IsNil(o.Content) {
		var ret string
		return ret
	}
	return *o.Content
}

// GetContentOk returns a tuple with the Content field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SavedSnippet) GetContentOk() (*string, bool) {
	if o == nil || IsNil(o.Content) {
		return nil, false
	}
	return o.Content, true
}

// HasContent returns a boolean if a field has been set.
func (o *SavedSnippet) HasContent() bool {
	if o != nil && !IsNil(o.Content) {
		return true
	}

	return false
}

// SetContent gets a reference to the given string and assigns it to the Content field.
func (o *SavedSnippet) SetContent(v string) {
	o.Content = &v
}

// GetDateCreated returns the DateCreated field value if set, zero value otherwise.
func (o *SavedSnippet) GetDateCreated() Timestamp {
	if o == nil || IsNil(o.DateCreated) {
		var ret Timestamp
		return ret
	}
	return *o.DateCreated
}

// GetDateCreatedOk returns a tuple with the DateCreated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SavedSnippet) GetDateCreatedOk() (*Timestamp, bool) {
	if o == nil || IsNil(o.DateCreated) {
		return nil, false
	}
	return o.DateCreated, true
}

// HasDateCreated returns a boolean if a field has been set.
func (o *SavedSnippet) HasDateCreated() bool {
	if o != nil && !IsNil(o.DateCreated) {
		return true
	}

	return false
}

// SetDateCreated gets a reference to the given Timestamp and assigns it to the DateCreated field.
func (o *SavedSnippet) SetDateCreated(v Timestamp) {
	o.DateCreated = &v
}

func (o SavedSnippet) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SavedSnippet) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	if !IsNil(o.Content) {
		toSerialize["content"] = o.Content
	}
	if !IsNil(o.DateCreated) {
		toSerialize["date_created"] = o.DateCreated
	}
	return toSerialize, nil
}

type NullableSavedSnippet struct {
	value *SavedSnippet
	isSet bool
}

func (v NullableSavedSnippet) Get() *SavedSnippet {
	return v.value
}

func (v *NullableSavedSnippet) Set(val *SavedSnippet) {
	v.value = val
	v.isSet = true
}

func (v NullableSavedSnippet) IsSet() bool {
	return v.isSet
}

func (v *NullableSavedSnippet) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSavedSnippet(val *SavedSnippet) *NullableSavedSnippet {
	return &NullableSavedSnippet{value: val, isSet: true}
}

func (v NullableSavedSnippet) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSavedSnippet) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
