/*
Zulip REST API

Powerful open source group chat

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// checks if the DefaultChannelGroup type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DefaultChannelGroup{}

// DefaultChannelGroup Dictionary containing details of a default channel group.
type DefaultChannelGroup struct {
	// Name of the default channel group.
	Name *string `json:"name,omitempty"`
	// Description of the default channel group.
	Description *string `json:"description,omitempty"`
	// The ID of the default channel group.
	Id *int32 `json:"id,omitempty"`
	// An array of IDs of all the channels in the default stream group.  **Changes**: Before Zulip 10.0 (feature level 330), we sent array of dictionaries where each dictionary contained details about a single stream in the default stream group.
	Streams []int32 `json:"streams,omitempty"`
}

// NewDefaultChannelGroup instantiates a new DefaultChannelGroup object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDefaultChannelGroup() *DefaultChannelGroup {
	this := DefaultChannelGroup{}
	return &this
}

// NewDefaultChannelGroupWithDefaults instantiates a new DefaultChannelGroup object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDefaultChannelGroupWithDefaults() *DefaultChannelGroup {
	this := DefaultChannelGroup{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *DefaultChannelGroup) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DefaultChannelGroup) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *DefaultChannelGroup) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *DefaultChannelGroup) SetName(v string) {
	o.Name = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *DefaultChannelGroup) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DefaultChannelGroup) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *DefaultChannelGroup) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *DefaultChannelGroup) SetDescription(v string) {
	o.Description = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *DefaultChannelGroup) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DefaultChannelGroup) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *DefaultChannelGroup) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *DefaultChannelGroup) SetId(v int32) {
	o.Id = &v
}

// GetStreams returns the Streams field value if set, zero value otherwise.
func (o *DefaultChannelGroup) GetStreams() []int32 {
	if o == nil || IsNil(o.Streams) {
		var ret []int32
		return ret
	}
	return o.Streams
}

// GetStreamsOk returns a tuple with the Streams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DefaultChannelGroup) GetStreamsOk() ([]int32, bool) {
	if o == nil || IsNil(o.Streams) {
		return nil, false
	}
	return o.Streams, true
}

// HasStreams returns a boolean if a field has been set.
func (o *DefaultChannelGroup) HasStreams() bool {
	if o != nil && !IsNil(o.Streams) {
		return true
	}

	return false
}

// SetStreams gets a reference to the given []int32 and assigns it to the Streams field.
func (o *DefaultChannelGroup) SetStreams(v []int32) {
	o.Streams = v
}

func (o DefaultChannelGroup) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DefaultChannelGroup) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Streams) {
		toSerialize["streams"] = o.Streams
	}
	return toSerialize, nil
}

type NullableDefaultChannelGroup struct {
	value *DefaultChannelGroup
	isSet bool
}

func (v NullableDefaultChannelGroup) Get() *DefaultChannelGroup {
	return v.value
}

func (v *NullableDefaultChannelGroup) Set(val *DefaultChannelGroup) {
	v.value = val
	v.isSet = true
}

func (v NullableDefaultChannelGroup) IsSet() bool {
	return v.isSet
}

func (v *NullableDefaultChannelGroup) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDefaultChannelGroup(val *DefaultChannelGroup) *NullableDefaultChannelGroup {
	return &NullableDefaultChannelGroup{value: val, isSet: true}
}

func (v NullableDefaultChannelGroup) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDefaultChannelGroup) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
