/*
Zulip REST API

Powerful open source group chat 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// checks if the CheckMessagesMatchNarrow200ResponseAllOfMessagesValue type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CheckMessagesMatchNarrow200ResponseAllOfMessagesValue{}

// CheckMessagesMatchNarrow200ResponseAllOfMessagesValue `message_id`: The ID of the message that matches the narrow. No record will be returned for queried messages that do not match the narrow. 
type CheckMessagesMatchNarrow200ResponseAllOfMessagesValue struct {
	// HTML content of a queried message that matches the narrow. If the narrow is a search narrow, `<span class=\"highlight\">` elements will be included, wrapping the matches for the search keywords. 
	MatchContent *string `json:"match_content,omitempty"`
	// HTML-escaped topic of a queried message that matches the narrow. If the narrow is a search narrow, `<span class=\"highlight\">` elements will be included wrapping the matches for the search keywords. 
	MatchSubject *string `json:"match_subject,omitempty"`
}

// NewCheckMessagesMatchNarrow200ResponseAllOfMessagesValue instantiates a new CheckMessagesMatchNarrow200ResponseAllOfMessagesValue object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCheckMessagesMatchNarrow200ResponseAllOfMessagesValue() *CheckMessagesMatchNarrow200ResponseAllOfMessagesValue {
	this := CheckMessagesMatchNarrow200ResponseAllOfMessagesValue{}
	return &this
}

// NewCheckMessagesMatchNarrow200ResponseAllOfMessagesValueWithDefaults instantiates a new CheckMessagesMatchNarrow200ResponseAllOfMessagesValue object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCheckMessagesMatchNarrow200ResponseAllOfMessagesValueWithDefaults() *CheckMessagesMatchNarrow200ResponseAllOfMessagesValue {
	this := CheckMessagesMatchNarrow200ResponseAllOfMessagesValue{}
	return &this
}

// GetMatchContent returns the MatchContent field value if set, zero value otherwise.
func (o *CheckMessagesMatchNarrow200ResponseAllOfMessagesValue) GetMatchContent() string {
	if o == nil || IsNil(o.MatchContent) {
		var ret string
		return ret
	}
	return *o.MatchContent
}

// GetMatchContentOk returns a tuple with the MatchContent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CheckMessagesMatchNarrow200ResponseAllOfMessagesValue) GetMatchContentOk() (*string, bool) {
	if o == nil || IsNil(o.MatchContent) {
		return nil, false
	}
	return o.MatchContent, true
}

// HasMatchContent returns a boolean if a field has been set.
func (o *CheckMessagesMatchNarrow200ResponseAllOfMessagesValue) HasMatchContent() bool {
	if o != nil && !IsNil(o.MatchContent) {
		return true
	}

	return false
}

// SetMatchContent gets a reference to the given string and assigns it to the MatchContent field.
func (o *CheckMessagesMatchNarrow200ResponseAllOfMessagesValue) SetMatchContent(v string) {
	o.MatchContent = &v
}

// GetMatchSubject returns the MatchSubject field value if set, zero value otherwise.
func (o *CheckMessagesMatchNarrow200ResponseAllOfMessagesValue) GetMatchSubject() string {
	if o == nil || IsNil(o.MatchSubject) {
		var ret string
		return ret
	}
	return *o.MatchSubject
}

// GetMatchSubjectOk returns a tuple with the MatchSubject field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CheckMessagesMatchNarrow200ResponseAllOfMessagesValue) GetMatchSubjectOk() (*string, bool) {
	if o == nil || IsNil(o.MatchSubject) {
		return nil, false
	}
	return o.MatchSubject, true
}

// HasMatchSubject returns a boolean if a field has been set.
func (o *CheckMessagesMatchNarrow200ResponseAllOfMessagesValue) HasMatchSubject() bool {
	if o != nil && !IsNil(o.MatchSubject) {
		return true
	}

	return false
}

// SetMatchSubject gets a reference to the given string and assigns it to the MatchSubject field.
func (o *CheckMessagesMatchNarrow200ResponseAllOfMessagesValue) SetMatchSubject(v string) {
	o.MatchSubject = &v
}

func (o CheckMessagesMatchNarrow200ResponseAllOfMessagesValue) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CheckMessagesMatchNarrow200ResponseAllOfMessagesValue) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.MatchContent) {
		toSerialize["match_content"] = o.MatchContent
	}
	if !IsNil(o.MatchSubject) {
		toSerialize["match_subject"] = o.MatchSubject
	}
	return toSerialize, nil
}

type NullableCheckMessagesMatchNarrow200ResponseAllOfMessagesValue struct {
	value *CheckMessagesMatchNarrow200ResponseAllOfMessagesValue
	isSet bool
}

func (v NullableCheckMessagesMatchNarrow200ResponseAllOfMessagesValue) Get() *CheckMessagesMatchNarrow200ResponseAllOfMessagesValue {
	return v.value
}

func (v *NullableCheckMessagesMatchNarrow200ResponseAllOfMessagesValue) Set(val *CheckMessagesMatchNarrow200ResponseAllOfMessagesValue) {
	v.value = val
	v.isSet = true
}

func (v NullableCheckMessagesMatchNarrow200ResponseAllOfMessagesValue) IsSet() bool {
	return v.isSet
}

func (v *NullableCheckMessagesMatchNarrow200ResponseAllOfMessagesValue) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCheckMessagesMatchNarrow200ResponseAllOfMessagesValue(val *CheckMessagesMatchNarrow200ResponseAllOfMessagesValue) *NullableCheckMessagesMatchNarrow200ResponseAllOfMessagesValue {
	return &NullableCheckMessagesMatchNarrow200ResponseAllOfMessagesValue{value: val, isSet: true}
}

func (v NullableCheckMessagesMatchNarrow200ResponseAllOfMessagesValue) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCheckMessagesMatchNarrow200ResponseAllOfMessagesValue) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


