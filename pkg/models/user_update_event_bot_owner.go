/*
Zulip REST API

Powerful open source group chat

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// checks if the UserUpdateEventBotOwner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UserUpdateEventBotOwner{}

// UserUpdateEventBotOwner When the owner of a bot changes.
type UserUpdateEventBotOwner struct {
	// The ID of the user/bot whose owner has changed.
	UserId *int32 `json:"user_id,omitempty"`
	// The user ID of the new bot owner.
	BotOwnerId *int32 `json:"bot_owner_id,omitempty"`
}

// NewRealmUserUpdateEventPersonOneOf3 instantiates a new UserUpdateEventBotOwner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRealmUserUpdateEventPersonOneOf3() *UserUpdateEventBotOwner {
	this := UserUpdateEventBotOwner{}
	return &this
}

// NewRealmUserUpdateEventPersonOneOf3WithDefaults instantiates a new UserUpdateEventBotOwner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRealmUserUpdateEventPersonOneOf3WithDefaults() *UserUpdateEventBotOwner {
	this := UserUpdateEventBotOwner{}
	return &this
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *UserUpdateEventBotOwner) GetUserId() int32 {
	if o == nil || IsNil(o.UserId) {
		var ret int32
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserUpdateEventBotOwner) GetUserIdOk() (*int32, bool) {
	if o == nil || IsNil(o.UserId) {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *UserUpdateEventBotOwner) HasUserId() bool {
	if o != nil && !IsNil(o.UserId) {
		return true
	}

	return false
}

// SetUserId gets a reference to the given int32 and assigns it to the UserId field.
func (o *UserUpdateEventBotOwner) SetUserId(v int32) {
	o.UserId = &v
}

// GetBotOwnerId returns the BotOwnerId field value if set, zero value otherwise.
func (o *UserUpdateEventBotOwner) GetBotOwnerId() int32 {
	if o == nil || IsNil(o.BotOwnerId) {
		var ret int32
		return ret
	}
	return *o.BotOwnerId
}

// GetBotOwnerIdOk returns a tuple with the BotOwnerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserUpdateEventBotOwner) GetBotOwnerIdOk() (*int32, bool) {
	if o == nil || IsNil(o.BotOwnerId) {
		return nil, false
	}
	return o.BotOwnerId, true
}

// HasBotOwnerId returns a boolean if a field has been set.
func (o *UserUpdateEventBotOwner) HasBotOwnerId() bool {
	if o != nil && !IsNil(o.BotOwnerId) {
		return true
	}

	return false
}

// SetBotOwnerId gets a reference to the given int32 and assigns it to the BotOwnerId field.
func (o *UserUpdateEventBotOwner) SetBotOwnerId(v int32) {
	o.BotOwnerId = &v
}

func (o UserUpdateEventBotOwner) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UserUpdateEventBotOwner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.UserId) {
		toSerialize["user_id"] = o.UserId
	}
	if !IsNil(o.BotOwnerId) {
		toSerialize["bot_owner_id"] = o.BotOwnerId
	}
	return toSerialize, nil
}

type NullableUserUpdateEventBotOwner struct {
	value *UserUpdateEventBotOwner
	isSet bool
}

func (v NullableUserUpdateEventBotOwner) Get() *UserUpdateEventBotOwner {
	return v.value
}

func (v *NullableUserUpdateEventBotOwner) Set(val *UserUpdateEventBotOwner) {
	v.value = val
	v.isSet = true
}

func (v NullableUserUpdateEventBotOwner) IsSet() bool {
	return v.isSet
}

func (v *NullableUserUpdateEventBotOwner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserUpdateEventBotOwner(val *UserUpdateEventBotOwner) *NullableUserUpdateEventBotOwner {
	return &NullableUserUpdateEventBotOwner{value: val, isSet: true}
}

func (v NullableUserUpdateEventBotOwner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserUpdateEventBotOwner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
