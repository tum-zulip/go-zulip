/*
Zulip REST API

Powerful open source group chat

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// checks if the GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf4 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf4{}

// GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf4 When the [role](/help/user-roles) of a user changes.
type GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf4 struct {
	// The ID of the user affected by this change.
	UserId *int32 `json:"user_id,omitempty"`
	// The new [role](/api/roles-and-permissions) of the user.
	Role *int32 `json:"role,omitempty"`
}

// NewGetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf4 instantiates a new GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf4 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf4() *GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf4 {
	this := GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf4{}
	return &this
}

// NewGetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf4WithDefaults instantiates a new GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf4 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf4WithDefaults() *GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf4 {
	this := GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf4{}
	return &this
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf4) GetUserId() int32 {
	if o == nil || IsNil(o.UserId) {
		var ret int32
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf4) GetUserIdOk() (*int32, bool) {
	if o == nil || IsNil(o.UserId) {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf4) HasUserId() bool {
	if o != nil && !IsNil(o.UserId) {
		return true
	}

	return false
}

// SetUserId gets a reference to the given int32 and assigns it to the UserId field.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf4) SetUserId(v int32) {
	o.UserId = &v
}

// GetRole returns the Role field value if set, zero value otherwise.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf4) GetRole() int32 {
	if o == nil || IsNil(o.Role) {
		var ret int32
		return ret
	}
	return *o.Role
}

// GetRoleOk returns a tuple with the Role field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf4) GetRoleOk() (*int32, bool) {
	if o == nil || IsNil(o.Role) {
		return nil, false
	}
	return o.Role, true
}

// HasRole returns a boolean if a field has been set.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf4) HasRole() bool {
	if o != nil && !IsNil(o.Role) {
		return true
	}

	return false
}

// SetRole gets a reference to the given int32 and assigns it to the Role field.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf4) SetRole(v int32) {
	o.Role = &v
}

func (o GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf4) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf4) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.UserId) {
		toSerialize["user_id"] = o.UserId
	}
	if !IsNil(o.Role) {
		toSerialize["role"] = o.Role
	}
	return toSerialize, nil
}

type NullableGetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf4 struct {
	value *GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf4
	isSet bool
}

func (v NullableGetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf4) Get() *GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf4 {
	return v.value
}

func (v *NullableGetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf4) Set(val *GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf4) {
	v.value = val
	v.isSet = true
}

func (v NullableGetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf4) IsSet() bool {
	return v.isSet
}

func (v *NullableGetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf4) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf4(val *GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf4) *NullableGetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf4 {
	return &NullableGetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf4{value: val, isSet: true}
}

func (v NullableGetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf4) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf4) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
