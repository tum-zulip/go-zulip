/*
Zulip REST API

Powerful open source group chat 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// checks if the GetEvents200ResponseAllOfEventsInnerOneOf73 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetEvents200ResponseAllOfEventsInnerOneOf73{}

// GetEvents200ResponseAllOfEventsInnerOneOf73 Event containing details of an update to an existing navigation view.  **Changes**: New in Zulip 11.0 (feature level 390). 
type GetEvents200ResponseAllOfEventsInnerOneOf73 struct {
	// The ID of the event. Events appear in increasing order but may not be consecutive. 
	Id *int32 `json:"id,omitempty"`
	Type *string `json:"type,omitempty"`
	Op *string `json:"op,omitempty"`
	// The unique URL hash of the navigation view being updated. 
	Fragment *string `json:"fragment,omitempty"`
	Data *GetEvents200ResponseAllOfEventsInnerOneOf73Data `json:"data,omitempty"`
}

// NewGetEvents200ResponseAllOfEventsInnerOneOf73 instantiates a new GetEvents200ResponseAllOfEventsInnerOneOf73 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetEvents200ResponseAllOfEventsInnerOneOf73() *GetEvents200ResponseAllOfEventsInnerOneOf73 {
	this := GetEvents200ResponseAllOfEventsInnerOneOf73{}
	return &this
}

// NewGetEvents200ResponseAllOfEventsInnerOneOf73WithDefaults instantiates a new GetEvents200ResponseAllOfEventsInnerOneOf73 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetEvents200ResponseAllOfEventsInnerOneOf73WithDefaults() *GetEvents200ResponseAllOfEventsInnerOneOf73 {
	this := GetEvents200ResponseAllOfEventsInnerOneOf73{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf73) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf73) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf73) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf73) SetId(v int32) {
	o.Id = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf73) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf73) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf73) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf73) SetType(v string) {
	o.Type = &v
}

// GetOp returns the Op field value if set, zero value otherwise.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf73) GetOp() string {
	if o == nil || IsNil(o.Op) {
		var ret string
		return ret
	}
	return *o.Op
}

// GetOpOk returns a tuple with the Op field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf73) GetOpOk() (*string, bool) {
	if o == nil || IsNil(o.Op) {
		return nil, false
	}
	return o.Op, true
}

// HasOp returns a boolean if a field has been set.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf73) HasOp() bool {
	if o != nil && !IsNil(o.Op) {
		return true
	}

	return false
}

// SetOp gets a reference to the given string and assigns it to the Op field.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf73) SetOp(v string) {
	o.Op = &v
}

// GetFragment returns the Fragment field value if set, zero value otherwise.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf73) GetFragment() string {
	if o == nil || IsNil(o.Fragment) {
		var ret string
		return ret
	}
	return *o.Fragment
}

// GetFragmentOk returns a tuple with the Fragment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf73) GetFragmentOk() (*string, bool) {
	if o == nil || IsNil(o.Fragment) {
		return nil, false
	}
	return o.Fragment, true
}

// HasFragment returns a boolean if a field has been set.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf73) HasFragment() bool {
	if o != nil && !IsNil(o.Fragment) {
		return true
	}

	return false
}

// SetFragment gets a reference to the given string and assigns it to the Fragment field.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf73) SetFragment(v string) {
	o.Fragment = &v
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf73) GetData() GetEvents200ResponseAllOfEventsInnerOneOf73Data {
	if o == nil || IsNil(o.Data) {
		var ret GetEvents200ResponseAllOfEventsInnerOneOf73Data
		return ret
	}
	return *o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf73) GetDataOk() (*GetEvents200ResponseAllOfEventsInnerOneOf73Data, bool) {
	if o == nil || IsNil(o.Data) {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf73) HasData() bool {
	if o != nil && !IsNil(o.Data) {
		return true
	}

	return false
}

// SetData gets a reference to the given GetEvents200ResponseAllOfEventsInnerOneOf73Data and assigns it to the Data field.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf73) SetData(v GetEvents200ResponseAllOfEventsInnerOneOf73Data) {
	o.Data = &v
}

func (o GetEvents200ResponseAllOfEventsInnerOneOf73) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetEvents200ResponseAllOfEventsInnerOneOf73) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Op) {
		toSerialize["op"] = o.Op
	}
	if !IsNil(o.Fragment) {
		toSerialize["fragment"] = o.Fragment
	}
	if !IsNil(o.Data) {
		toSerialize["data"] = o.Data
	}
	return toSerialize, nil
}

type NullableGetEvents200ResponseAllOfEventsInnerOneOf73 struct {
	value *GetEvents200ResponseAllOfEventsInnerOneOf73
	isSet bool
}

func (v NullableGetEvents200ResponseAllOfEventsInnerOneOf73) Get() *GetEvents200ResponseAllOfEventsInnerOneOf73 {
	return v.value
}

func (v *NullableGetEvents200ResponseAllOfEventsInnerOneOf73) Set(val *GetEvents200ResponseAllOfEventsInnerOneOf73) {
	v.value = val
	v.isSet = true
}

func (v NullableGetEvents200ResponseAllOfEventsInnerOneOf73) IsSet() bool {
	return v.isSet
}

func (v *NullableGetEvents200ResponseAllOfEventsInnerOneOf73) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetEvents200ResponseAllOfEventsInnerOneOf73(val *GetEvents200ResponseAllOfEventsInnerOneOf73) *NullableGetEvents200ResponseAllOfEventsInnerOneOf73 {
	return &NullableGetEvents200ResponseAllOfEventsInnerOneOf73{value: val, isSet: true}
}

func (v NullableGetEvents200ResponseAllOfEventsInnerOneOf73) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetEvents200ResponseAllOfEventsInnerOneOf73) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


