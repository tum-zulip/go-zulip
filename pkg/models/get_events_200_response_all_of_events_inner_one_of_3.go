/*
Zulip REST API

Powerful open source group chat

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// checks if the GetEvents200ResponseAllOfEventsInnerOneOf3 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetEvents200ResponseAllOfEventsInnerOneOf3{}

// GetEvents200ResponseAllOfEventsInnerOneOf3 Event sent to a user's clients when that user's settings have changed.  **Changes**: New in Zulip 5.0 (feature level 89), replacing the previous `update_display_settings` and `update_global_notifications` event types, which are still present for backwards compatibility reasons.
type GetEvents200ResponseAllOfEventsInnerOneOf3 struct {
	// The ID of the event. Events appear in increasing order but may not be consecutive.
	Id   *int32  `json:"id,omitempty"`
	Type *string `json:"type,omitempty"`
	Op   *string `json:"op,omitempty"`
	// Name of the changed setting.
	Property *string                                            `json:"property,omitempty"`
	Value    *GetEvents200ResponseAllOfEventsInnerOneOf1Setting `json:"value,omitempty"`
	// Present only if the setting to be changed is `default_language`. Contains the name of the new default language in English.
	LanguageName *string `json:"language_name,omitempty"`
}

// NewGetEvents200ResponseAllOfEventsInnerOneOf3 instantiates a new GetEvents200ResponseAllOfEventsInnerOneOf3 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetEvents200ResponseAllOfEventsInnerOneOf3() *GetEvents200ResponseAllOfEventsInnerOneOf3 {
	this := GetEvents200ResponseAllOfEventsInnerOneOf3{}
	return &this
}

// NewGetEvents200ResponseAllOfEventsInnerOneOf3WithDefaults instantiates a new GetEvents200ResponseAllOfEventsInnerOneOf3 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetEvents200ResponseAllOfEventsInnerOneOf3WithDefaults() *GetEvents200ResponseAllOfEventsInnerOneOf3 {
	this := GetEvents200ResponseAllOfEventsInnerOneOf3{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf3) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf3) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf3) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf3) SetId(v int32) {
	o.Id = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf3) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf3) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf3) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf3) SetType(v string) {
	o.Type = &v
}

// GetOp returns the Op field value if set, zero value otherwise.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf3) GetOp() string {
	if o == nil || IsNil(o.Op) {
		var ret string
		return ret
	}
	return *o.Op
}

// GetOpOk returns a tuple with the Op field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf3) GetOpOk() (*string, bool) {
	if o == nil || IsNil(o.Op) {
		return nil, false
	}
	return o.Op, true
}

// HasOp returns a boolean if a field has been set.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf3) HasOp() bool {
	if o != nil && !IsNil(o.Op) {
		return true
	}

	return false
}

// SetOp gets a reference to the given string and assigns it to the Op field.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf3) SetOp(v string) {
	o.Op = &v
}

// GetProperty returns the Property field value if set, zero value otherwise.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf3) GetProperty() string {
	if o == nil || IsNil(o.Property) {
		var ret string
		return ret
	}
	return *o.Property
}

// GetPropertyOk returns a tuple with the Property field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf3) GetPropertyOk() (*string, bool) {
	if o == nil || IsNil(o.Property) {
		return nil, false
	}
	return o.Property, true
}

// HasProperty returns a boolean if a field has been set.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf3) HasProperty() bool {
	if o != nil && !IsNil(o.Property) {
		return true
	}

	return false
}

// SetProperty gets a reference to the given string and assigns it to the Property field.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf3) SetProperty(v string) {
	o.Property = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf3) GetValue() GetEvents200ResponseAllOfEventsInnerOneOf1Setting {
	if o == nil || IsNil(o.Value) {
		var ret GetEvents200ResponseAllOfEventsInnerOneOf1Setting
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf3) GetValueOk() (*GetEvents200ResponseAllOfEventsInnerOneOf1Setting, bool) {
	if o == nil || IsNil(o.Value) {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf3) HasValue() bool {
	if o != nil && !IsNil(o.Value) {
		return true
	}

	return false
}

// SetValue gets a reference to the given GetEvents200ResponseAllOfEventsInnerOneOf1Setting and assigns it to the Value field.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf3) SetValue(v GetEvents200ResponseAllOfEventsInnerOneOf1Setting) {
	o.Value = &v
}

// GetLanguageName returns the LanguageName field value if set, zero value otherwise.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf3) GetLanguageName() string {
	if o == nil || IsNil(o.LanguageName) {
		var ret string
		return ret
	}
	return *o.LanguageName
}

// GetLanguageNameOk returns a tuple with the LanguageName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf3) GetLanguageNameOk() (*string, bool) {
	if o == nil || IsNil(o.LanguageName) {
		return nil, false
	}
	return o.LanguageName, true
}

// HasLanguageName returns a boolean if a field has been set.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf3) HasLanguageName() bool {
	if o != nil && !IsNil(o.LanguageName) {
		return true
	}

	return false
}

// SetLanguageName gets a reference to the given string and assigns it to the LanguageName field.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf3) SetLanguageName(v string) {
	o.LanguageName = &v
}

func (o GetEvents200ResponseAllOfEventsInnerOneOf3) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetEvents200ResponseAllOfEventsInnerOneOf3) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Op) {
		toSerialize["op"] = o.Op
	}
	if !IsNil(o.Property) {
		toSerialize["property"] = o.Property
	}
	if !IsNil(o.Value) {
		toSerialize["value"] = o.Value
	}
	if !IsNil(o.LanguageName) {
		toSerialize["language_name"] = o.LanguageName
	}
	return toSerialize, nil
}

type NullableGetEvents200ResponseAllOfEventsInnerOneOf3 struct {
	value *GetEvents200ResponseAllOfEventsInnerOneOf3
	isSet bool
}

func (v NullableGetEvents200ResponseAllOfEventsInnerOneOf3) Get() *GetEvents200ResponseAllOfEventsInnerOneOf3 {
	return v.value
}

func (v *NullableGetEvents200ResponseAllOfEventsInnerOneOf3) Set(val *GetEvents200ResponseAllOfEventsInnerOneOf3) {
	v.value = val
	v.isSet = true
}

func (v NullableGetEvents200ResponseAllOfEventsInnerOneOf3) IsSet() bool {
	return v.isSet
}

func (v *NullableGetEvents200ResponseAllOfEventsInnerOneOf3) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetEvents200ResponseAllOfEventsInnerOneOf3(val *GetEvents200ResponseAllOfEventsInnerOneOf3) *NullableGetEvents200ResponseAllOfEventsInnerOneOf3 {
	return &NullableGetEvents200ResponseAllOfEventsInnerOneOf3{value: val, isSet: true}
}

func (v NullableGetEvents200ResponseAllOfEventsInnerOneOf3) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetEvents200ResponseAllOfEventsInnerOneOf3) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
