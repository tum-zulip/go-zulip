/*
Zulip REST API

Powerful open source group chat

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// checks if the UserSettingsUpdateEvent7Sender type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UserSettingsUpdateEvent7Sender{}

// UserSettingsUpdateEvent7Sender Object describing the user who is typing the message.
type UserSettingsUpdateEvent7Sender struct {
	// The user's ID.
	UserId *int32 `json:"user_id,omitempty"`
	// The Zulip API email address for the user.
	Email *string `json:"email,omitempty"`
}

// NewUserSettingsUpdateEvent7Sender instantiates a new UserSettingsUpdateEvent7Sender object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserSettingsUpdateEvent7Sender() *UserSettingsUpdateEvent7Sender {
	this := UserSettingsUpdateEvent7Sender{}
	return &this
}

// NewUserSettingsUpdateEvent7SenderWithDefaults instantiates a new UserSettingsUpdateEvent7Sender object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserSettingsUpdateEvent7SenderWithDefaults() *UserSettingsUpdateEvent7Sender {
	this := UserSettingsUpdateEvent7Sender{}
	return &this
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *UserSettingsUpdateEvent7Sender) GetUserId() int32 {
	if o == nil || IsNil(o.UserId) {
		var ret int32
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserSettingsUpdateEvent7Sender) GetUserIdOk() (*int32, bool) {
	if o == nil || IsNil(o.UserId) {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *UserSettingsUpdateEvent7Sender) HasUserId() bool {
	if o != nil && !IsNil(o.UserId) {
		return true
	}

	return false
}

// SetUserId gets a reference to the given int32 and assigns it to the UserId field.
func (o *UserSettingsUpdateEvent7Sender) SetUserId(v int32) {
	o.UserId = &v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *UserSettingsUpdateEvent7Sender) GetEmail() string {
	if o == nil || IsNil(o.Email) {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserSettingsUpdateEvent7Sender) GetEmailOk() (*string, bool) {
	if o == nil || IsNil(o.Email) {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *UserSettingsUpdateEvent7Sender) HasEmail() bool {
	if o != nil && !IsNil(o.Email) {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *UserSettingsUpdateEvent7Sender) SetEmail(v string) {
	o.Email = &v
}

func (o UserSettingsUpdateEvent7Sender) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UserSettingsUpdateEvent7Sender) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.UserId) {
		toSerialize["user_id"] = o.UserId
	}
	if !IsNil(o.Email) {
		toSerialize["email"] = o.Email
	}
	return toSerialize, nil
}

type NullableUserSettingsUpdateEvent7Sender struct {
	value *UserSettingsUpdateEvent7Sender
	isSet bool
}

func (v NullableUserSettingsUpdateEvent7Sender) Get() *UserSettingsUpdateEvent7Sender {
	return v.value
}

func (v *NullableUserSettingsUpdateEvent7Sender) Set(val *UserSettingsUpdateEvent7Sender) {
	v.value = val
	v.isSet = true
}

func (v NullableUserSettingsUpdateEvent7Sender) IsSet() bool {
	return v.isSet
}

func (v *NullableUserSettingsUpdateEvent7Sender) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserSettingsUpdateEvent7Sender(val *UserSettingsUpdateEvent7Sender) *NullableUserSettingsUpdateEvent7Sender {
	return &NullableUserSettingsUpdateEvent7Sender{value: val, isSet: true}
}

func (v NullableUserSettingsUpdateEvent7Sender) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserSettingsUpdateEvent7Sender) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
