/*
Zulip REST API

Powerful open source group chat

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"fmt"

	"gopkg.in/validator.v2"
)

// UpdateStatusForUser400Response - struct for UpdateStatusForUser400Response
type UpdateStatusForUser400Response struct {
	CodedError *CodedError
}

// CodedErrorAsUpdateStatusForUser400Response is a convenience function that returns CodedError wrapped in UpdateStatusForUser400Response
func CodedErrorAsUpdateStatusForUser400Response(v *CodedError) UpdateStatusForUser400Response {
	return UpdateStatusForUser400Response{
		CodedError: v,
	}
}

// Unmarshal JSON data into one of the pointers in the struct
func (dst *UpdateStatusForUser400Response) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into CodedError
	err = newStrictDecoder(data).Decode(&dst.CodedError)
	if err == nil {
		jsonCodedError, _ := json.Marshal(dst.CodedError)
		if string(jsonCodedError) == "{}" { // empty struct
			dst.CodedError = nil
		} else {
			if err = validator.Validate(dst.CodedError); err != nil {
				dst.CodedError = nil
			} else {
				match++
			}
		}
	} else {
		dst.CodedError = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.CodedError = nil

		return fmt.Errorf("data matches more than one schema in oneOf(UpdateStatusForUser400Response)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(UpdateStatusForUser400Response)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src UpdateStatusForUser400Response) MarshalJSON() ([]byte, error) {
	if src.CodedError != nil {
		return json.Marshal(&src.CodedError)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *UpdateStatusForUser400Response) GetActualInstance() interface{} {
	if obj == nil {
		return nil
	}
	if obj.CodedError != nil {
		return obj.CodedError
	}

	// all schemas are nil
	return nil
}

// Get the actual instance value
func (obj UpdateStatusForUser400Response) GetActualInstanceValue() interface{} {
	if obj.CodedError != nil {
		return *obj.CodedError
	}

	// all schemas are nil
	return nil
}

type NullableUpdateStatusForUser400Response struct {
	value *UpdateStatusForUser400Response
	isSet bool
}

func (v NullableUpdateStatusForUser400Response) Get() *UpdateStatusForUser400Response {
	return v.value
}

func (v *NullableUpdateStatusForUser400Response) Set(val *UpdateStatusForUser400Response) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateStatusForUser400Response) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateStatusForUser400Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateStatusForUser400Response(val *UpdateStatusForUser400Response) *NullableUpdateStatusForUser400Response {
	return &NullableUpdateStatusForUser400Response{value: val, isSet: true}
}

func (v NullableUpdateStatusForUser400Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateStatusForUser400Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
