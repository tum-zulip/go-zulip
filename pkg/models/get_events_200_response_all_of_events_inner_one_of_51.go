/*
Zulip REST API

Powerful open source group chat 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// checks if the GetEvents200ResponseAllOfEventsInnerOneOf51 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetEvents200ResponseAllOfEventsInnerOneOf51{}

// GetEvents200ResponseAllOfEventsInnerOneOf51 Legacy event type that is no longer sent to clients. Previously, sent to all users in a Zulip organization when the set of configured [linkifiers](/help/add-a-custom-linkifier) for the organization was changed.  **Changes**: Prior to Zulip 7.0 (feature level 176), this event type was sent to clients.  **Deprecated** in Zulip 4.0 (feature level 54), and replaced by the `realm_linkifiers` event type, which has a clearer name and format. 
type GetEvents200ResponseAllOfEventsInnerOneOf51 struct {
	// The ID of the event. Events appear in increasing order but may not be consecutive. 
	Id *int32 `json:"id,omitempty"`
	Type *string `json:"type,omitempty"`
	// An array of tuples, where each tuple described a linkifier. The first element of the tuple was a string regex pattern which represented the pattern to be linkified on matching, for example `\"#(?P<id>[123])\"`. The second element was the URL format string that the pattern should be linkified with. A URL format string for the above example would be `\"https://realm.com/my_realm_filter/%(id)s\"`. And the third element was the ID of the realm filter. 
	RealmFilters [][]GetEvents200ResponseAllOfEventsInnerOneOf51RealmFiltersInnerInner `json:"realm_filters,omitempty"`
}

// NewGetEvents200ResponseAllOfEventsInnerOneOf51 instantiates a new GetEvents200ResponseAllOfEventsInnerOneOf51 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetEvents200ResponseAllOfEventsInnerOneOf51() *GetEvents200ResponseAllOfEventsInnerOneOf51 {
	this := GetEvents200ResponseAllOfEventsInnerOneOf51{}
	return &this
}

// NewGetEvents200ResponseAllOfEventsInnerOneOf51WithDefaults instantiates a new GetEvents200ResponseAllOfEventsInnerOneOf51 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetEvents200ResponseAllOfEventsInnerOneOf51WithDefaults() *GetEvents200ResponseAllOfEventsInnerOneOf51 {
	this := GetEvents200ResponseAllOfEventsInnerOneOf51{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf51) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf51) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf51) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf51) SetId(v int32) {
	o.Id = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf51) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf51) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf51) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf51) SetType(v string) {
	o.Type = &v
}

// GetRealmFilters returns the RealmFilters field value if set, zero value otherwise.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf51) GetRealmFilters() [][]GetEvents200ResponseAllOfEventsInnerOneOf51RealmFiltersInnerInner {
	if o == nil || IsNil(o.RealmFilters) {
		var ret [][]GetEvents200ResponseAllOfEventsInnerOneOf51RealmFiltersInnerInner
		return ret
	}
	return o.RealmFilters
}

// GetRealmFiltersOk returns a tuple with the RealmFilters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf51) GetRealmFiltersOk() ([][]GetEvents200ResponseAllOfEventsInnerOneOf51RealmFiltersInnerInner, bool) {
	if o == nil || IsNil(o.RealmFilters) {
		return nil, false
	}
	return o.RealmFilters, true
}

// HasRealmFilters returns a boolean if a field has been set.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf51) HasRealmFilters() bool {
	if o != nil && !IsNil(o.RealmFilters) {
		return true
	}

	return false
}

// SetRealmFilters gets a reference to the given [][]GetEvents200ResponseAllOfEventsInnerOneOf51RealmFiltersInnerInner and assigns it to the RealmFilters field.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf51) SetRealmFilters(v [][]GetEvents200ResponseAllOfEventsInnerOneOf51RealmFiltersInnerInner) {
	o.RealmFilters = v
}

func (o GetEvents200ResponseAllOfEventsInnerOneOf51) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetEvents200ResponseAllOfEventsInnerOneOf51) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.RealmFilters) {
		toSerialize["realm_filters"] = o.RealmFilters
	}
	return toSerialize, nil
}

type NullableGetEvents200ResponseAllOfEventsInnerOneOf51 struct {
	value *GetEvents200ResponseAllOfEventsInnerOneOf51
	isSet bool
}

func (v NullableGetEvents200ResponseAllOfEventsInnerOneOf51) Get() *GetEvents200ResponseAllOfEventsInnerOneOf51 {
	return v.value
}

func (v *NullableGetEvents200ResponseAllOfEventsInnerOneOf51) Set(val *GetEvents200ResponseAllOfEventsInnerOneOf51) {
	v.value = val
	v.isSet = true
}

func (v NullableGetEvents200ResponseAllOfEventsInnerOneOf51) IsSet() bool {
	return v.isSet
}

func (v *NullableGetEvents200ResponseAllOfEventsInnerOneOf51) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetEvents200ResponseAllOfEventsInnerOneOf51(val *GetEvents200ResponseAllOfEventsInnerOneOf51) *NullableGetEvents200ResponseAllOfEventsInnerOneOf51 {
	return &NullableGetEvents200ResponseAllOfEventsInnerOneOf51{value: val, isSet: true}
}

func (v NullableGetEvents200ResponseAllOfEventsInnerOneOf51) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetEvents200ResponseAllOfEventsInnerOneOf51) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


