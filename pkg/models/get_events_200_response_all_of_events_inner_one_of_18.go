/*
Zulip REST API

Powerful open source group chat 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// checks if the GetEvents200ResponseAllOfEventsInnerOneOf18 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetEvents200ResponseAllOfEventsInnerOneOf18{}

// GetEvents200ResponseAllOfEventsInnerOneOf18 Event sent to all users who can see that a channel exists when a property of that channel changes. See [GET /streams](/api/get-streams#response) response for details on the various properties of a channel.  This event is also sent when archiving or unarchiving a channel to all the users who can see that channel exists but only to the clients that declared the `archived_channels` [client capability][client-capabilities].  **Changes**: Prior to Zulip 11.0 (feature level 378), this event was never sent when archiving or unarchiving a channel.  Before Zulip 9.0 (feature level 256), this event was never sent when the `first_message_id` property of a channel was updated because the oldest message that had been sent to it changed.  [client-capabilities]: /api/register-queue#parameter-client_capabilities 
type GetEvents200ResponseAllOfEventsInnerOneOf18 struct {
	// The ID of the event. Events appear in increasing order but may not be consecutive. 
	Id *int32 `json:"id,omitempty"`
	Type *string `json:"type,omitempty"`
	Op *string `json:"op,omitempty"`
	// The ID of the channel whose details have changed. 
	StreamId *int32 `json:"stream_id,omitempty"`
	// The name of the channel whose details have changed. 
	Name *string `json:"name,omitempty"`
	// The property of the channel which has changed. See [GET /streams](/api/get-streams#response) response for details on the various properties of a channel.  Clients should handle an \"unknown\" property received here without crashing, since that can happen when connecting to a server running a newer version of Zulip with new features. 
	Property *string `json:"property,omitempty"`
	Value *GetEvents200ResponseAllOfEventsInnerOneOf18Value `json:"value,omitempty"`
	// Note: Only present if the changed property was `description`.  The short description of the channel rendered as HTML, intended to be used when displaying the channel description in a UI.  One should use the standard Zulip rendered_markdown CSS when displaying this content so that emoji, LaTeX, and other syntax work correctly. And any client-side security logic for user-generated message content should be applied when displaying this HTML as though it were the body of a Zulip message.  See [Markdown message formatting](/api/message-formatting) for details on Zulip's HTML format. 
	RenderedDescription *string `json:"rendered_description,omitempty"`
	// Note: Only present if the changed property was `invite_only`.  Whether the history of the channel is public to its subscribers.  Currently always true for public channels (i.e. `\"invite_only\": false` implies `\"history_public_to_subscribers\": true`), but clients should not make that assumption, as we may change that behavior in the future. 
	HistoryPublicToSubscribers *bool `json:"history_public_to_subscribers,omitempty"`
	// Note: Only present if the changed property was `invite_only`.  Whether the channel's history is now readable by web-public spectators.  **Changes**: New in Zulip 5.0 (feature level 71). 
	IsWebPublic *bool `json:"is_web_public,omitempty"`
}

// NewGetEvents200ResponseAllOfEventsInnerOneOf18 instantiates a new GetEvents200ResponseAllOfEventsInnerOneOf18 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetEvents200ResponseAllOfEventsInnerOneOf18() *GetEvents200ResponseAllOfEventsInnerOneOf18 {
	this := GetEvents200ResponseAllOfEventsInnerOneOf18{}
	return &this
}

// NewGetEvents200ResponseAllOfEventsInnerOneOf18WithDefaults instantiates a new GetEvents200ResponseAllOfEventsInnerOneOf18 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetEvents200ResponseAllOfEventsInnerOneOf18WithDefaults() *GetEvents200ResponseAllOfEventsInnerOneOf18 {
	this := GetEvents200ResponseAllOfEventsInnerOneOf18{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf18) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf18) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf18) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf18) SetId(v int32) {
	o.Id = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf18) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf18) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf18) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf18) SetType(v string) {
	o.Type = &v
}

// GetOp returns the Op field value if set, zero value otherwise.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf18) GetOp() string {
	if o == nil || IsNil(o.Op) {
		var ret string
		return ret
	}
	return *o.Op
}

// GetOpOk returns a tuple with the Op field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf18) GetOpOk() (*string, bool) {
	if o == nil || IsNil(o.Op) {
		return nil, false
	}
	return o.Op, true
}

// HasOp returns a boolean if a field has been set.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf18) HasOp() bool {
	if o != nil && !IsNil(o.Op) {
		return true
	}

	return false
}

// SetOp gets a reference to the given string and assigns it to the Op field.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf18) SetOp(v string) {
	o.Op = &v
}

// GetStreamId returns the StreamId field value if set, zero value otherwise.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf18) GetStreamId() int32 {
	if o == nil || IsNil(o.StreamId) {
		var ret int32
		return ret
	}
	return *o.StreamId
}

// GetStreamIdOk returns a tuple with the StreamId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf18) GetStreamIdOk() (*int32, bool) {
	if o == nil || IsNil(o.StreamId) {
		return nil, false
	}
	return o.StreamId, true
}

// HasStreamId returns a boolean if a field has been set.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf18) HasStreamId() bool {
	if o != nil && !IsNil(o.StreamId) {
		return true
	}

	return false
}

// SetStreamId gets a reference to the given int32 and assigns it to the StreamId field.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf18) SetStreamId(v int32) {
	o.StreamId = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf18) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf18) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf18) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf18) SetName(v string) {
	o.Name = &v
}

// GetProperty returns the Property field value if set, zero value otherwise.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf18) GetProperty() string {
	if o == nil || IsNil(o.Property) {
		var ret string
		return ret
	}
	return *o.Property
}

// GetPropertyOk returns a tuple with the Property field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf18) GetPropertyOk() (*string, bool) {
	if o == nil || IsNil(o.Property) {
		return nil, false
	}
	return o.Property, true
}

// HasProperty returns a boolean if a field has been set.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf18) HasProperty() bool {
	if o != nil && !IsNil(o.Property) {
		return true
	}

	return false
}

// SetProperty gets a reference to the given string and assigns it to the Property field.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf18) SetProperty(v string) {
	o.Property = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf18) GetValue() GetEvents200ResponseAllOfEventsInnerOneOf18Value {
	if o == nil || IsNil(o.Value) {
		var ret GetEvents200ResponseAllOfEventsInnerOneOf18Value
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf18) GetValueOk() (*GetEvents200ResponseAllOfEventsInnerOneOf18Value, bool) {
	if o == nil || IsNil(o.Value) {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf18) HasValue() bool {
	if o != nil && !IsNil(o.Value) {
		return true
	}

	return false
}

// SetValue gets a reference to the given GetEvents200ResponseAllOfEventsInnerOneOf18Value and assigns it to the Value field.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf18) SetValue(v GetEvents200ResponseAllOfEventsInnerOneOf18Value) {
	o.Value = &v
}

// GetRenderedDescription returns the RenderedDescription field value if set, zero value otherwise.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf18) GetRenderedDescription() string {
	if o == nil || IsNil(o.RenderedDescription) {
		var ret string
		return ret
	}
	return *o.RenderedDescription
}

// GetRenderedDescriptionOk returns a tuple with the RenderedDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf18) GetRenderedDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.RenderedDescription) {
		return nil, false
	}
	return o.RenderedDescription, true
}

// HasRenderedDescription returns a boolean if a field has been set.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf18) HasRenderedDescription() bool {
	if o != nil && !IsNil(o.RenderedDescription) {
		return true
	}

	return false
}

// SetRenderedDescription gets a reference to the given string and assigns it to the RenderedDescription field.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf18) SetRenderedDescription(v string) {
	o.RenderedDescription = &v
}

// GetHistoryPublicToSubscribers returns the HistoryPublicToSubscribers field value if set, zero value otherwise.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf18) GetHistoryPublicToSubscribers() bool {
	if o == nil || IsNil(o.HistoryPublicToSubscribers) {
		var ret bool
		return ret
	}
	return *o.HistoryPublicToSubscribers
}

// GetHistoryPublicToSubscribersOk returns a tuple with the HistoryPublicToSubscribers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf18) GetHistoryPublicToSubscribersOk() (*bool, bool) {
	if o == nil || IsNil(o.HistoryPublicToSubscribers) {
		return nil, false
	}
	return o.HistoryPublicToSubscribers, true
}

// HasHistoryPublicToSubscribers returns a boolean if a field has been set.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf18) HasHistoryPublicToSubscribers() bool {
	if o != nil && !IsNil(o.HistoryPublicToSubscribers) {
		return true
	}

	return false
}

// SetHistoryPublicToSubscribers gets a reference to the given bool and assigns it to the HistoryPublicToSubscribers field.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf18) SetHistoryPublicToSubscribers(v bool) {
	o.HistoryPublicToSubscribers = &v
}

// GetIsWebPublic returns the IsWebPublic field value if set, zero value otherwise.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf18) GetIsWebPublic() bool {
	if o == nil || IsNil(o.IsWebPublic) {
		var ret bool
		return ret
	}
	return *o.IsWebPublic
}

// GetIsWebPublicOk returns a tuple with the IsWebPublic field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf18) GetIsWebPublicOk() (*bool, bool) {
	if o == nil || IsNil(o.IsWebPublic) {
		return nil, false
	}
	return o.IsWebPublic, true
}

// HasIsWebPublic returns a boolean if a field has been set.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf18) HasIsWebPublic() bool {
	if o != nil && !IsNil(o.IsWebPublic) {
		return true
	}

	return false
}

// SetIsWebPublic gets a reference to the given bool and assigns it to the IsWebPublic field.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf18) SetIsWebPublic(v bool) {
	o.IsWebPublic = &v
}

func (o GetEvents200ResponseAllOfEventsInnerOneOf18) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetEvents200ResponseAllOfEventsInnerOneOf18) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Op) {
		toSerialize["op"] = o.Op
	}
	if !IsNil(o.StreamId) {
		toSerialize["stream_id"] = o.StreamId
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Property) {
		toSerialize["property"] = o.Property
	}
	if !IsNil(o.Value) {
		toSerialize["value"] = o.Value
	}
	if !IsNil(o.RenderedDescription) {
		toSerialize["rendered_description"] = o.RenderedDescription
	}
	if !IsNil(o.HistoryPublicToSubscribers) {
		toSerialize["history_public_to_subscribers"] = o.HistoryPublicToSubscribers
	}
	if !IsNil(o.IsWebPublic) {
		toSerialize["is_web_public"] = o.IsWebPublic
	}
	return toSerialize, nil
}

type NullableGetEvents200ResponseAllOfEventsInnerOneOf18 struct {
	value *GetEvents200ResponseAllOfEventsInnerOneOf18
	isSet bool
}

func (v NullableGetEvents200ResponseAllOfEventsInnerOneOf18) Get() *GetEvents200ResponseAllOfEventsInnerOneOf18 {
	return v.value
}

func (v *NullableGetEvents200ResponseAllOfEventsInnerOneOf18) Set(val *GetEvents200ResponseAllOfEventsInnerOneOf18) {
	v.value = val
	v.isSet = true
}

func (v NullableGetEvents200ResponseAllOfEventsInnerOneOf18) IsSet() bool {
	return v.isSet
}

func (v *NullableGetEvents200ResponseAllOfEventsInnerOneOf18) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetEvents200ResponseAllOfEventsInnerOneOf18(val *GetEvents200ResponseAllOfEventsInnerOneOf18) *NullableGetEvents200ResponseAllOfEventsInnerOneOf18 {
	return &NullableGetEvents200ResponseAllOfEventsInnerOneOf18{value: val, isSet: true}
}

func (v NullableGetEvents200ResponseAllOfEventsInnerOneOf18) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetEvents200ResponseAllOfEventsInnerOneOf18) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


