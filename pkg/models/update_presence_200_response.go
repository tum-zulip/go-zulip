/*
Zulip REST API

Powerful open source group chat 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the UpdatePresence200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdatePresence200Response{}

// UpdatePresence200Response struct for UpdatePresence200Response
type UpdatePresence200Response struct {
	Result interface{} `json:"result"`
	Msg interface{} `json:"msg"`
	IgnoredParametersUnsupported interface{} `json:"ignored_parameters_unsupported,omitempty"`
	// The identifier for the latest user presence data returned in the `presences` data of the response.  If a value was passed for `last_update_id`, then this is guaranteed to be equal to or greater than that value. If it is the same value, then that indicates to the client that there were no updates to previously received user presence data.  The client should then pass this value as the `last_update_id` parameter when it next queries this endpoint, in order to only receive new user presence data and avoid redundantly fetching already known information.  This will be `-1` if no value was passed for [`last_update_id`](#parameter-last_update_id) and no user presence data was returned by the server. This can happen, for example, if an organization has disabled presence.  **Changes**: New in Zulip 9.0 (feature level 263). 
	PresenceLastUpdateId *int32 `json:"presence_last_update_id,omitempty"`
	// Only present if `ping_only` is `false`.  The time when the server fetched the `presences` data included in the response. 
	ServerTimestamp *float32 `json:"server_timestamp,omitempty"`
	// Only present if `ping_only` is `false`.  A dictionary where each entry describes the presence details of a user in the Zulip organization. Entries can be in either the modern presence format or the legacy presence format.  These entries will be the modern presence format when the `last_updated_id` parameter is passed, or when the deprecated `slim_presence` parameter is `true`.  If the deprecated `slim_presence` parameter is `false` and the `last_updated_id` parameter is omitted, the entries will be in the legacy presence API format.  **Note**: The legacy presence format should only be used when interacting with old servers. It will be removed as soon as doing so is practical. 
	Presences map[string]UpdatePresence200ResponseAllOfPresencesValue `json:"presences,omitempty"`
	// Legacy property for a part of the Zephyr mirroring system.  **Deprecated**. Clients should ignore this field. 
	// Deprecated
	ZephyrMirrorActive *bool `json:"zephyr_mirror_active,omitempty"`
}

type _UpdatePresence200Response UpdatePresence200Response

// NewUpdatePresence200Response instantiates a new UpdatePresence200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdatePresence200Response(result interface{}, msg interface{}) *UpdatePresence200Response {
	this := UpdatePresence200Response{}
	this.Result = result
	this.Msg = msg
	return &this
}

// NewUpdatePresence200ResponseWithDefaults instantiates a new UpdatePresence200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdatePresence200ResponseWithDefaults() *UpdatePresence200Response {
	this := UpdatePresence200Response{}
	return &this
}

// GetResult returns the Result field value
// If the value is explicit nil, the zero value for interface{} will be returned
func (o *UpdatePresence200Response) GetResult() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}

	return o.Result
}

// GetResultOk returns a tuple with the Result field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdatePresence200Response) GetResultOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Result) {
		return nil, false
	}
	return &o.Result, true
}

// SetResult sets field value
func (o *UpdatePresence200Response) SetResult(v interface{}) {
	o.Result = v
}

// GetMsg returns the Msg field value
// If the value is explicit nil, the zero value for interface{} will be returned
func (o *UpdatePresence200Response) GetMsg() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}

	return o.Msg
}

// GetMsgOk returns a tuple with the Msg field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdatePresence200Response) GetMsgOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Msg) {
		return nil, false
	}
	return &o.Msg, true
}

// SetMsg sets field value
func (o *UpdatePresence200Response) SetMsg(v interface{}) {
	o.Msg = v
}

// GetIgnoredParametersUnsupported returns the IgnoredParametersUnsupported field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdatePresence200Response) GetIgnoredParametersUnsupported() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.IgnoredParametersUnsupported
}

// GetIgnoredParametersUnsupportedOk returns a tuple with the IgnoredParametersUnsupported field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdatePresence200Response) GetIgnoredParametersUnsupportedOk() (*interface{}, bool) {
	if o == nil || IsNil(o.IgnoredParametersUnsupported) {
		return nil, false
	}
	return &o.IgnoredParametersUnsupported, true
}

// HasIgnoredParametersUnsupported returns a boolean if a field has been set.
func (o *UpdatePresence200Response) HasIgnoredParametersUnsupported() bool {
	if o != nil && !IsNil(o.IgnoredParametersUnsupported) {
		return true
	}

	return false
}

// SetIgnoredParametersUnsupported gets a reference to the given interface{} and assigns it to the IgnoredParametersUnsupported field.
func (o *UpdatePresence200Response) SetIgnoredParametersUnsupported(v interface{}) {
	o.IgnoredParametersUnsupported = v
}

// GetPresenceLastUpdateId returns the PresenceLastUpdateId field value if set, zero value otherwise.
func (o *UpdatePresence200Response) GetPresenceLastUpdateId() int32 {
	if o == nil || IsNil(o.PresenceLastUpdateId) {
		var ret int32
		return ret
	}
	return *o.PresenceLastUpdateId
}

// GetPresenceLastUpdateIdOk returns a tuple with the PresenceLastUpdateId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdatePresence200Response) GetPresenceLastUpdateIdOk() (*int32, bool) {
	if o == nil || IsNil(o.PresenceLastUpdateId) {
		return nil, false
	}
	return o.PresenceLastUpdateId, true
}

// HasPresenceLastUpdateId returns a boolean if a field has been set.
func (o *UpdatePresence200Response) HasPresenceLastUpdateId() bool {
	if o != nil && !IsNil(o.PresenceLastUpdateId) {
		return true
	}

	return false
}

// SetPresenceLastUpdateId gets a reference to the given int32 and assigns it to the PresenceLastUpdateId field.
func (o *UpdatePresence200Response) SetPresenceLastUpdateId(v int32) {
	o.PresenceLastUpdateId = &v
}

// GetServerTimestamp returns the ServerTimestamp field value if set, zero value otherwise.
func (o *UpdatePresence200Response) GetServerTimestamp() float32 {
	if o == nil || IsNil(o.ServerTimestamp) {
		var ret float32
		return ret
	}
	return *o.ServerTimestamp
}

// GetServerTimestampOk returns a tuple with the ServerTimestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdatePresence200Response) GetServerTimestampOk() (*float32, bool) {
	if o == nil || IsNil(o.ServerTimestamp) {
		return nil, false
	}
	return o.ServerTimestamp, true
}

// HasServerTimestamp returns a boolean if a field has been set.
func (o *UpdatePresence200Response) HasServerTimestamp() bool {
	if o != nil && !IsNil(o.ServerTimestamp) {
		return true
	}

	return false
}

// SetServerTimestamp gets a reference to the given float32 and assigns it to the ServerTimestamp field.
func (o *UpdatePresence200Response) SetServerTimestamp(v float32) {
	o.ServerTimestamp = &v
}

// GetPresences returns the Presences field value if set, zero value otherwise.
func (o *UpdatePresence200Response) GetPresences() map[string]UpdatePresence200ResponseAllOfPresencesValue {
	if o == nil || IsNil(o.Presences) {
		var ret map[string]UpdatePresence200ResponseAllOfPresencesValue
		return ret
	}
	return o.Presences
}

// GetPresencesOk returns a tuple with the Presences field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdatePresence200Response) GetPresencesOk() (map[string]UpdatePresence200ResponseAllOfPresencesValue, bool) {
	if o == nil || IsNil(o.Presences) {
		return map[string]UpdatePresence200ResponseAllOfPresencesValue{}, false
	}
	return o.Presences, true
}

// HasPresences returns a boolean if a field has been set.
func (o *UpdatePresence200Response) HasPresences() bool {
	if o != nil && !IsNil(o.Presences) {
		return true
	}

	return false
}

// SetPresences gets a reference to the given map[string]UpdatePresence200ResponseAllOfPresencesValue and assigns it to the Presences field.
func (o *UpdatePresence200Response) SetPresences(v map[string]UpdatePresence200ResponseAllOfPresencesValue) {
	o.Presences = v
}

// GetZephyrMirrorActive returns the ZephyrMirrorActive field value if set, zero value otherwise.
// Deprecated
func (o *UpdatePresence200Response) GetZephyrMirrorActive() bool {
	if o == nil || IsNil(o.ZephyrMirrorActive) {
		var ret bool
		return ret
	}
	return *o.ZephyrMirrorActive
}

// GetZephyrMirrorActiveOk returns a tuple with the ZephyrMirrorActive field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *UpdatePresence200Response) GetZephyrMirrorActiveOk() (*bool, bool) {
	if o == nil || IsNil(o.ZephyrMirrorActive) {
		return nil, false
	}
	return o.ZephyrMirrorActive, true
}

// HasZephyrMirrorActive returns a boolean if a field has been set.
func (o *UpdatePresence200Response) HasZephyrMirrorActive() bool {
	if o != nil && !IsNil(o.ZephyrMirrorActive) {
		return true
	}

	return false
}

// SetZephyrMirrorActive gets a reference to the given bool and assigns it to the ZephyrMirrorActive field.
// Deprecated
func (o *UpdatePresence200Response) SetZephyrMirrorActive(v bool) {
	o.ZephyrMirrorActive = &v
}

func (o UpdatePresence200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdatePresence200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Result != nil {
		toSerialize["result"] = o.Result
	}
	if o.Msg != nil {
		toSerialize["msg"] = o.Msg
	}
	if o.IgnoredParametersUnsupported != nil {
		toSerialize["ignored_parameters_unsupported"] = o.IgnoredParametersUnsupported
	}
	if !IsNil(o.PresenceLastUpdateId) {
		toSerialize["presence_last_update_id"] = o.PresenceLastUpdateId
	}
	if !IsNil(o.ServerTimestamp) {
		toSerialize["server_timestamp"] = o.ServerTimestamp
	}
	if !IsNil(o.Presences) {
		toSerialize["presences"] = o.Presences
	}
	if !IsNil(o.ZephyrMirrorActive) {
		toSerialize["zephyr_mirror_active"] = o.ZephyrMirrorActive
	}
	return toSerialize, nil
}

func (o *UpdatePresence200Response) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"result",
		"msg",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varUpdatePresence200Response := _UpdatePresence200Response{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varUpdatePresence200Response)

	if err != nil {
		return err
	}

	*o = UpdatePresence200Response(varUpdatePresence200Response)

	return err
}

type NullableUpdatePresence200Response struct {
	value *UpdatePresence200Response
	isSet bool
}

func (v NullableUpdatePresence200Response) Get() *UpdatePresence200Response {
	return v.value
}

func (v *NullableUpdatePresence200Response) Set(val *UpdatePresence200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdatePresence200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdatePresence200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdatePresence200Response(val *UpdatePresence200Response) *NullableUpdatePresence200Response {
	return &NullableUpdatePresence200Response{value: val, isSet: true}
}

func (v NullableUpdatePresence200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdatePresence200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


