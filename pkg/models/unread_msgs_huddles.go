/*
Zulip REST API

Powerful open source group chat

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// checks if the UnreadMsgsHuddles type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UnreadMsgsHuddles{}

// UnreadMsgsHuddles struct for UnreadMsgsHuddles
type UnreadMsgsHuddles struct {
	// A string containing the IDs of all users in the group direct message conversation, including the current user, separated by commas and sorted numerically; for example: `\"1,2,3\"`.
	UserIdsString *string `json:"user_ids_string,omitempty"`
	// The message IDs of the recent unread messages which have been sent in this group direct message conversation, sorted in ascending order.
	UnreadMessageIds []int32 `json:"unread_message_ids,omitempty"`
}

// NewUnreadMsgsHuddles instantiates a new UnreadMsgsHuddles object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUnreadMsgsHuddles() *UnreadMsgsHuddles {
	this := UnreadMsgsHuddles{}
	return &this
}

// NewUnreadMsgsHuddlesWithDefaults instantiates a new UnreadMsgsHuddles object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUnreadMsgsHuddlesWithDefaults() *UnreadMsgsHuddles {
	this := UnreadMsgsHuddles{}
	return &this
}

// GetUserIdsString returns the UserIdsString field value if set, zero value otherwise.
func (o *UnreadMsgsHuddles) GetUserIdsString() string {
	if o == nil || IsNil(o.UserIdsString) {
		var ret string
		return ret
	}
	return *o.UserIdsString
}

// GetUserIdsStringOk returns a tuple with the UserIdsString field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnreadMsgsHuddles) GetUserIdsStringOk() (*string, bool) {
	if o == nil || IsNil(o.UserIdsString) {
		return nil, false
	}
	return o.UserIdsString, true
}

// HasUserIdsString returns a boolean if a field has been set.
func (o *UnreadMsgsHuddles) HasUserIdsString() bool {
	if o != nil && !IsNil(o.UserIdsString) {
		return true
	}

	return false
}

// SetUserIdsString gets a reference to the given string and assigns it to the UserIdsString field.
func (o *UnreadMsgsHuddles) SetUserIdsString(v string) {
	o.UserIdsString = &v
}

// GetUnreadMessageIds returns the UnreadMessageIds field value if set, zero value otherwise.
func (o *UnreadMsgsHuddles) GetUnreadMessageIds() []int32 {
	if o == nil || IsNil(o.UnreadMessageIds) {
		var ret []int32
		return ret
	}
	return o.UnreadMessageIds
}

// GetUnreadMessageIdsOk returns a tuple with the UnreadMessageIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnreadMsgsHuddles) GetUnreadMessageIdsOk() ([]int32, bool) {
	if o == nil || IsNil(o.UnreadMessageIds) {
		return nil, false
	}
	return o.UnreadMessageIds, true
}

// HasUnreadMessageIds returns a boolean if a field has been set.
func (o *UnreadMsgsHuddles) HasUnreadMessageIds() bool {
	if o != nil && !IsNil(o.UnreadMessageIds) {
		return true
	}

	return false
}

// SetUnreadMessageIds gets a reference to the given []int32 and assigns it to the UnreadMessageIds field.
func (o *UnreadMsgsHuddles) SetUnreadMessageIds(v []int32) {
	o.UnreadMessageIds = v
}

func (o UnreadMsgsHuddles) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UnreadMsgsHuddles) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.UserIdsString) {
		toSerialize["user_ids_string"] = o.UserIdsString
	}
	if !IsNil(o.UnreadMessageIds) {
		toSerialize["unread_message_ids"] = o.UnreadMessageIds
	}
	return toSerialize, nil
}

type NullableUnreadMsgsHuddles struct {
	value *UnreadMsgsHuddles
	isSet bool
}

func (v NullableUnreadMsgsHuddles) Get() *UnreadMsgsHuddles {
	return v.value
}

func (v *NullableUnreadMsgsHuddles) Set(val *UnreadMsgsHuddles) {
	v.value = val
	v.isSet = true
}

func (v NullableUnreadMsgsHuddles) IsSet() bool {
	return v.isSet
}

func (v *NullableUnreadMsgsHuddles) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUnreadMsgsHuddles(val *UnreadMsgsHuddles) *NullableUnreadMsgsHuddles {
	return &NullableUnreadMsgsHuddles{value: val, isSet: true}
}

func (v NullableUnreadMsgsHuddles) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUnreadMsgsHuddles) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
