/*
Zulip REST API

Powerful open source group chat

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the SendMessage200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SendMessage200Response{}

// SendMessage200Response struct for SendMessage200Response
type SendMessage200Response struct {
	Result string `json:"result"`
	Msg    string `json:"msg"`
	// An array of any parameters sent in the request that are not supported by the endpoint.  See [error handling](zulip.com/api/rest-error-handling#ignored-parameters documentation for details on this and its change history.
	IgnoredParametersUnsupported []string `json:"ignored_parameters_unsupported,omitempty"`
	// The unique ID assigned to the sent message.
	Id int32 `json:"id"`
	// If the message's sender had configured their [visibility policy settings](zulip.com/help/mute-a-topic to potentially automatically follow or unmute topics when sending messages, and one of these policies did in fact change the user's visibility policy for the topic where this message was sent, the new value for that user's visibility policy for the recipient topic.  Only present if the sender's visibility was in fact changed.  The value can be either [unmuted or followed](zulip.com/api/update-user-topic#parameter-visibility_policy.  Clients will also be notified about the change in policy via a `user_topic` event as usual. This field is intended to be used by clients to explicitly inform the user when a topic's visibility policy was changed automatically due to sending a message.  For example, the Zulip web application uses this field to decide whether to display a warning or notice suggesting to unmute the topic after sending a message to a muted channel. Such a notice would be confusing in the event that the act of sending the message had already resulted in the user automatically unmuting or following the topic in question.  **Changes**: New in Zulip 8.0 (feature level 218).
	AutomaticNewVisibilityPolicy *int32 `json:"automatic_new_visibility_policy,omitempty"`
}

type _SendMessage200Response SendMessage200Response

// NewSendMessage200Response instantiates a new SendMessage200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSendMessage200Response(result string, msg string, id int32) *SendMessage200Response {
	this := SendMessage200Response{}
	this.Result = result
	this.Msg = msg
	this.Id = id
	return &this
}

// NewSendMessage200ResponseWithDefaults instantiates a new SendMessage200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSendMessage200ResponseWithDefaults() *SendMessage200Response {
	this := SendMessage200Response{}
	return &this
}

// GetResult returns the Result field value
func (o *SendMessage200Response) GetResult() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Result
}

// GetResultOk returns a tuple with the Result field value
// and a boolean to check if the value has been set.
func (o *SendMessage200Response) GetResultOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Result, true
}

// SetResult sets field value
func (o *SendMessage200Response) SetResult(v string) {
	o.Result = v
}

// GetMsg returns the Msg field value
func (o *SendMessage200Response) GetMsg() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Msg
}

// GetMsgOk returns a tuple with the Msg field value
// and a boolean to check if the value has been set.
func (o *SendMessage200Response) GetMsgOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Msg, true
}

// SetMsg sets field value
func (o *SendMessage200Response) SetMsg(v string) {
	o.Msg = v
}

// GetIgnoredParametersUnsupported returns the IgnoredParametersUnsupported field value if set, zero value otherwise.
func (o *SendMessage200Response) GetIgnoredParametersUnsupported() []string {
	if o == nil || IsNil(o.IgnoredParametersUnsupported) {
		var ret []string
		return ret
	}
	return o.IgnoredParametersUnsupported
}

// GetIgnoredParametersUnsupportedOk returns a tuple with the IgnoredParametersUnsupported field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SendMessage200Response) GetIgnoredParametersUnsupportedOk() ([]string, bool) {
	if o == nil || IsNil(o.IgnoredParametersUnsupported) {
		return nil, false
	}
	return o.IgnoredParametersUnsupported, true
}

// HasIgnoredParametersUnsupported returns a boolean if a field has been set.
func (o *SendMessage200Response) HasIgnoredParametersUnsupported() bool {
	if o != nil && !IsNil(o.IgnoredParametersUnsupported) {
		return true
	}

	return false
}

// SetIgnoredParametersUnsupported gets a reference to the given []string and assigns it to the IgnoredParametersUnsupported field.
func (o *SendMessage200Response) SetIgnoredParametersUnsupported(v []string) {
	o.IgnoredParametersUnsupported = v
}

// GetId returns the Id field value
func (o *SendMessage200Response) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *SendMessage200Response) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *SendMessage200Response) SetId(v int32) {
	o.Id = v
}

// GetAutomaticNewVisibilityPolicy returns the AutomaticNewVisibilityPolicy field value if set, zero value otherwise.
func (o *SendMessage200Response) GetAutomaticNewVisibilityPolicy() int32 {
	if o == nil || IsNil(o.AutomaticNewVisibilityPolicy) {
		var ret int32
		return ret
	}
	return *o.AutomaticNewVisibilityPolicy
}

// GetAutomaticNewVisibilityPolicyOk returns a tuple with the AutomaticNewVisibilityPolicy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SendMessage200Response) GetAutomaticNewVisibilityPolicyOk() (*int32, bool) {
	if o == nil || IsNil(o.AutomaticNewVisibilityPolicy) {
		return nil, false
	}
	return o.AutomaticNewVisibilityPolicy, true
}

// HasAutomaticNewVisibilityPolicy returns a boolean if a field has been set.
func (o *SendMessage200Response) HasAutomaticNewVisibilityPolicy() bool {
	if o != nil && !IsNil(o.AutomaticNewVisibilityPolicy) {
		return true
	}

	return false
}

// SetAutomaticNewVisibilityPolicy gets a reference to the given int32 and assigns it to the AutomaticNewVisibilityPolicy field.
func (o *SendMessage200Response) SetAutomaticNewVisibilityPolicy(v int32) {
	o.AutomaticNewVisibilityPolicy = &v
}

func (o SendMessage200Response) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SendMessage200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["result"] = o.Result
	toSerialize["msg"] = o.Msg
	if !IsNil(o.IgnoredParametersUnsupported) {
		toSerialize["ignored_parameters_unsupported"] = o.IgnoredParametersUnsupported
	}
	toSerialize["id"] = o.Id
	if !IsNil(o.AutomaticNewVisibilityPolicy) {
		toSerialize["automatic_new_visibility_policy"] = o.AutomaticNewVisibilityPolicy
	}
	return toSerialize, nil
}

func (o *SendMessage200Response) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"result",
		"msg",
		"id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSendMessage200Response := _SendMessage200Response{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varSendMessage200Response)

	if err != nil {
		return err
	}

	*o = SendMessage200Response(varSendMessage200Response)

	return err
}

type NullableSendMessage200Response struct {
	value *SendMessage200Response
	isSet bool
}

func (v NullableSendMessage200Response) Get() *SendMessage200Response {
	return v.value
}

func (v *NullableSendMessage200Response) Set(val *SendMessage200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableSendMessage200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableSendMessage200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSendMessage200Response(val *SendMessage200Response) *NullableSendMessage200Response {
	return &NullableSendMessage200Response{value: val, isSet: true}
}

func (v NullableSendMessage200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSendMessage200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
