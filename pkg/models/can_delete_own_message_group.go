/*
Zulip REST API

Powerful open source group chat 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// checks if the CanDeleteOwnMessageGroup type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CanDeleteOwnMessageGroup{}

// CanDeleteOwnMessageGroup A [group-setting value][setting-values] defining the set of users who have permission to delete the messages that they have sent in the channel.  [update-group-setting]: /api/group-setting-values#updating-group-setting-values  Note that a user must [have content access](/help/channel-permissions) to a channel in order to delete their own message in the channel.  Users with permission to delete any message in the channel and users present in the organization-level `can_delete_own_message_group` setting can always delete their own messages in the channel if they [have content access](/help/channel-permissions) to that channel.  **Changes**: New in Zulip 11.0 (feature level 407). Prior to this change, only the users in the organization-level `can_delete_any_message_group` and `can_delete_own_message_group` settings were able delete their own messages in the organization.  [setting-values]: /api/group-setting-values 
type CanDeleteOwnMessageGroup struct {
	// The list of IDs of individual users in the collection of users with this permission.  **Changes**: Prior to Zulip 10.0 (feature level 303), this list would include deactivated users who had the permission before being deactivated. 
	DirectMembers []int32 `json:"direct_members,omitempty"`
	// The list of IDs of the groups in the collection of users with this permission. 
	DirectSubgroups []int32 `json:"direct_subgroups,omitempty"`
}

// NewCanDeleteOwnMessageGroup instantiates a new CanDeleteOwnMessageGroup object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCanDeleteOwnMessageGroup() *CanDeleteOwnMessageGroup {
	this := CanDeleteOwnMessageGroup{}
	return &this
}

// NewCanDeleteOwnMessageGroupWithDefaults instantiates a new CanDeleteOwnMessageGroup object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCanDeleteOwnMessageGroupWithDefaults() *CanDeleteOwnMessageGroup {
	this := CanDeleteOwnMessageGroup{}
	return &this
}

// GetDirectMembers returns the DirectMembers field value if set, zero value otherwise.
func (o *CanDeleteOwnMessageGroup) GetDirectMembers() []int32 {
	if o == nil || IsNil(o.DirectMembers) {
		var ret []int32
		return ret
	}
	return o.DirectMembers
}

// GetDirectMembersOk returns a tuple with the DirectMembers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CanDeleteOwnMessageGroup) GetDirectMembersOk() ([]int32, bool) {
	if o == nil || IsNil(o.DirectMembers) {
		return nil, false
	}
	return o.DirectMembers, true
}

// HasDirectMembers returns a boolean if a field has been set.
func (o *CanDeleteOwnMessageGroup) HasDirectMembers() bool {
	if o != nil && !IsNil(o.DirectMembers) {
		return true
	}

	return false
}

// SetDirectMembers gets a reference to the given []int32 and assigns it to the DirectMembers field.
func (o *CanDeleteOwnMessageGroup) SetDirectMembers(v []int32) {
	o.DirectMembers = v
}

// GetDirectSubgroups returns the DirectSubgroups field value if set, zero value otherwise.
func (o *CanDeleteOwnMessageGroup) GetDirectSubgroups() []int32 {
	if o == nil || IsNil(o.DirectSubgroups) {
		var ret []int32
		return ret
	}
	return o.DirectSubgroups
}

// GetDirectSubgroupsOk returns a tuple with the DirectSubgroups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CanDeleteOwnMessageGroup) GetDirectSubgroupsOk() ([]int32, bool) {
	if o == nil || IsNil(o.DirectSubgroups) {
		return nil, false
	}
	return o.DirectSubgroups, true
}

// HasDirectSubgroups returns a boolean if a field has been set.
func (o *CanDeleteOwnMessageGroup) HasDirectSubgroups() bool {
	if o != nil && !IsNil(o.DirectSubgroups) {
		return true
	}

	return false
}

// SetDirectSubgroups gets a reference to the given []int32 and assigns it to the DirectSubgroups field.
func (o *CanDeleteOwnMessageGroup) SetDirectSubgroups(v []int32) {
	o.DirectSubgroups = v
}

func (o CanDeleteOwnMessageGroup) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CanDeleteOwnMessageGroup) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DirectMembers) {
		toSerialize["direct_members"] = o.DirectMembers
	}
	if !IsNil(o.DirectSubgroups) {
		toSerialize["direct_subgroups"] = o.DirectSubgroups
	}
	return toSerialize, nil
}

type NullableCanDeleteOwnMessageGroup struct {
	value *CanDeleteOwnMessageGroup
	isSet bool
}

func (v NullableCanDeleteOwnMessageGroup) Get() *CanDeleteOwnMessageGroup {
	return v.value
}

func (v *NullableCanDeleteOwnMessageGroup) Set(val *CanDeleteOwnMessageGroup) {
	v.value = val
	v.isSet = true
}

func (v NullableCanDeleteOwnMessageGroup) IsSet() bool {
	return v.isSet
}

func (v *NullableCanDeleteOwnMessageGroup) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCanDeleteOwnMessageGroup(val *CanDeleteOwnMessageGroup) *NullableCanDeleteOwnMessageGroup {
	return &NullableCanDeleteOwnMessageGroup{value: val, isSet: true}
}

func (v NullableCanDeleteOwnMessageGroup) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCanDeleteOwnMessageGroup) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


