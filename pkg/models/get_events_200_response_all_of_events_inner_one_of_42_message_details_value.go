/*
Zulip REST API

Powerful open source group chat 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the GetEvents200ResponseAllOfEventsInnerOneOf42MessageDetailsValue type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetEvents200ResponseAllOfEventsInnerOneOf42MessageDetailsValue{}

// GetEvents200ResponseAllOfEventsInnerOneOf42MessageDetailsValue `{message_id}`: Object containing details about the message with the specified ID. 
type GetEvents200ResponseAllOfEventsInnerOneOf42MessageDetailsValue struct {
	// The type of this message. Either `\"stream\"` or `\"private\"`. 
	Type string `json:"type"`
	// A flag which indicates whether the message contains a mention of the user.  Present only if the message mentions the current user. 
	Mentioned *bool `json:"mentioned,omitempty"`
	// Present only if `type` is `private`.  The user IDs of every recipient of this direct message, excluding yourself. Will be the empty list for a message you had sent to only yourself. 
	UserIds []int32 `json:"user_ids,omitempty"`
	// Present only if `type` is `\"stream\"`.  The ID of the channel where the message was sent. 
	StreamId *int32 `json:"stream_id,omitempty"`
	// Present only if `type` is `\"stream\"`.  Name of the topic where the message was sent.  For clients that don't support the `empty_topic_name` [client capability][client-capabilities], if the actual topic name is empty string, this field's value will instead be the value of `realm_empty_topic_display_name` found in the [`POST /register`](/api/register-queue) response.  **Changes**: Before 10.0 (feature level 334), `empty_topic_name` client capability didn't exist and empty string as the topic name for channel messages wasn't allowed.  [client-capabilities]: /api/register-queue#parameter-client_capabilities 
	Topic *string `json:"topic,omitempty"`
	// **Deprecated** internal implementation detail. Clients should ignore this field as it will be removed in the future. 
	// Deprecated
	UnmutedStreamMsg *bool `json:"unmuted_stream_msg,omitempty"`
}

type _GetEvents200ResponseAllOfEventsInnerOneOf42MessageDetailsValue GetEvents200ResponseAllOfEventsInnerOneOf42MessageDetailsValue

// NewGetEvents200ResponseAllOfEventsInnerOneOf42MessageDetailsValue instantiates a new GetEvents200ResponseAllOfEventsInnerOneOf42MessageDetailsValue object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetEvents200ResponseAllOfEventsInnerOneOf42MessageDetailsValue(type_ string) *GetEvents200ResponseAllOfEventsInnerOneOf42MessageDetailsValue {
	this := GetEvents200ResponseAllOfEventsInnerOneOf42MessageDetailsValue{}
	this.Type = type_
	return &this
}

// NewGetEvents200ResponseAllOfEventsInnerOneOf42MessageDetailsValueWithDefaults instantiates a new GetEvents200ResponseAllOfEventsInnerOneOf42MessageDetailsValue object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetEvents200ResponseAllOfEventsInnerOneOf42MessageDetailsValueWithDefaults() *GetEvents200ResponseAllOfEventsInnerOneOf42MessageDetailsValue {
	this := GetEvents200ResponseAllOfEventsInnerOneOf42MessageDetailsValue{}
	return &this
}

// GetType returns the Type field value
func (o *GetEvents200ResponseAllOfEventsInnerOneOf42MessageDetailsValue) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf42MessageDetailsValue) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *GetEvents200ResponseAllOfEventsInnerOneOf42MessageDetailsValue) SetType(v string) {
	o.Type = v
}

// GetMentioned returns the Mentioned field value if set, zero value otherwise.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf42MessageDetailsValue) GetMentioned() bool {
	if o == nil || IsNil(o.Mentioned) {
		var ret bool
		return ret
	}
	return *o.Mentioned
}

// GetMentionedOk returns a tuple with the Mentioned field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf42MessageDetailsValue) GetMentionedOk() (*bool, bool) {
	if o == nil || IsNil(o.Mentioned) {
		return nil, false
	}
	return o.Mentioned, true
}

// HasMentioned returns a boolean if a field has been set.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf42MessageDetailsValue) HasMentioned() bool {
	if o != nil && !IsNil(o.Mentioned) {
		return true
	}

	return false
}

// SetMentioned gets a reference to the given bool and assigns it to the Mentioned field.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf42MessageDetailsValue) SetMentioned(v bool) {
	o.Mentioned = &v
}

// GetUserIds returns the UserIds field value if set, zero value otherwise.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf42MessageDetailsValue) GetUserIds() []int32 {
	if o == nil || IsNil(o.UserIds) {
		var ret []int32
		return ret
	}
	return o.UserIds
}

// GetUserIdsOk returns a tuple with the UserIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf42MessageDetailsValue) GetUserIdsOk() ([]int32, bool) {
	if o == nil || IsNil(o.UserIds) {
		return nil, false
	}
	return o.UserIds, true
}

// HasUserIds returns a boolean if a field has been set.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf42MessageDetailsValue) HasUserIds() bool {
	if o != nil && !IsNil(o.UserIds) {
		return true
	}

	return false
}

// SetUserIds gets a reference to the given []int32 and assigns it to the UserIds field.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf42MessageDetailsValue) SetUserIds(v []int32) {
	o.UserIds = v
}

// GetStreamId returns the StreamId field value if set, zero value otherwise.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf42MessageDetailsValue) GetStreamId() int32 {
	if o == nil || IsNil(o.StreamId) {
		var ret int32
		return ret
	}
	return *o.StreamId
}

// GetStreamIdOk returns a tuple with the StreamId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf42MessageDetailsValue) GetStreamIdOk() (*int32, bool) {
	if o == nil || IsNil(o.StreamId) {
		return nil, false
	}
	return o.StreamId, true
}

// HasStreamId returns a boolean if a field has been set.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf42MessageDetailsValue) HasStreamId() bool {
	if o != nil && !IsNil(o.StreamId) {
		return true
	}

	return false
}

// SetStreamId gets a reference to the given int32 and assigns it to the StreamId field.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf42MessageDetailsValue) SetStreamId(v int32) {
	o.StreamId = &v
}

// GetTopic returns the Topic field value if set, zero value otherwise.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf42MessageDetailsValue) GetTopic() string {
	if o == nil || IsNil(o.Topic) {
		var ret string
		return ret
	}
	return *o.Topic
}

// GetTopicOk returns a tuple with the Topic field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf42MessageDetailsValue) GetTopicOk() (*string, bool) {
	if o == nil || IsNil(o.Topic) {
		return nil, false
	}
	return o.Topic, true
}

// HasTopic returns a boolean if a field has been set.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf42MessageDetailsValue) HasTopic() bool {
	if o != nil && !IsNil(o.Topic) {
		return true
	}

	return false
}

// SetTopic gets a reference to the given string and assigns it to the Topic field.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf42MessageDetailsValue) SetTopic(v string) {
	o.Topic = &v
}

// GetUnmutedStreamMsg returns the UnmutedStreamMsg field value if set, zero value otherwise.
// Deprecated
func (o *GetEvents200ResponseAllOfEventsInnerOneOf42MessageDetailsValue) GetUnmutedStreamMsg() bool {
	if o == nil || IsNil(o.UnmutedStreamMsg) {
		var ret bool
		return ret
	}
	return *o.UnmutedStreamMsg
}

// GetUnmutedStreamMsgOk returns a tuple with the UnmutedStreamMsg field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *GetEvents200ResponseAllOfEventsInnerOneOf42MessageDetailsValue) GetUnmutedStreamMsgOk() (*bool, bool) {
	if o == nil || IsNil(o.UnmutedStreamMsg) {
		return nil, false
	}
	return o.UnmutedStreamMsg, true
}

// HasUnmutedStreamMsg returns a boolean if a field has been set.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf42MessageDetailsValue) HasUnmutedStreamMsg() bool {
	if o != nil && !IsNil(o.UnmutedStreamMsg) {
		return true
	}

	return false
}

// SetUnmutedStreamMsg gets a reference to the given bool and assigns it to the UnmutedStreamMsg field.
// Deprecated
func (o *GetEvents200ResponseAllOfEventsInnerOneOf42MessageDetailsValue) SetUnmutedStreamMsg(v bool) {
	o.UnmutedStreamMsg = &v
}

func (o GetEvents200ResponseAllOfEventsInnerOneOf42MessageDetailsValue) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetEvents200ResponseAllOfEventsInnerOneOf42MessageDetailsValue) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["type"] = o.Type
	if !IsNil(o.Mentioned) {
		toSerialize["mentioned"] = o.Mentioned
	}
	if !IsNil(o.UserIds) {
		toSerialize["user_ids"] = o.UserIds
	}
	if !IsNil(o.StreamId) {
		toSerialize["stream_id"] = o.StreamId
	}
	if !IsNil(o.Topic) {
		toSerialize["topic"] = o.Topic
	}
	if !IsNil(o.UnmutedStreamMsg) {
		toSerialize["unmuted_stream_msg"] = o.UnmutedStreamMsg
	}
	return toSerialize, nil
}

func (o *GetEvents200ResponseAllOfEventsInnerOneOf42MessageDetailsValue) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"type",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varGetEvents200ResponseAllOfEventsInnerOneOf42MessageDetailsValue := _GetEvents200ResponseAllOfEventsInnerOneOf42MessageDetailsValue{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varGetEvents200ResponseAllOfEventsInnerOneOf42MessageDetailsValue)

	if err != nil {
		return err
	}

	*o = GetEvents200ResponseAllOfEventsInnerOneOf42MessageDetailsValue(varGetEvents200ResponseAllOfEventsInnerOneOf42MessageDetailsValue)

	return err
}

type NullableGetEvents200ResponseAllOfEventsInnerOneOf42MessageDetailsValue struct {
	value *GetEvents200ResponseAllOfEventsInnerOneOf42MessageDetailsValue
	isSet bool
}

func (v NullableGetEvents200ResponseAllOfEventsInnerOneOf42MessageDetailsValue) Get() *GetEvents200ResponseAllOfEventsInnerOneOf42MessageDetailsValue {
	return v.value
}

func (v *NullableGetEvents200ResponseAllOfEventsInnerOneOf42MessageDetailsValue) Set(val *GetEvents200ResponseAllOfEventsInnerOneOf42MessageDetailsValue) {
	v.value = val
	v.isSet = true
}

func (v NullableGetEvents200ResponseAllOfEventsInnerOneOf42MessageDetailsValue) IsSet() bool {
	return v.isSet
}

func (v *NullableGetEvents200ResponseAllOfEventsInnerOneOf42MessageDetailsValue) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetEvents200ResponseAllOfEventsInnerOneOf42MessageDetailsValue(val *GetEvents200ResponseAllOfEventsInnerOneOf42MessageDetailsValue) *NullableGetEvents200ResponseAllOfEventsInnerOneOf42MessageDetailsValue {
	return &NullableGetEvents200ResponseAllOfEventsInnerOneOf42MessageDetailsValue{value: val, isSet: true}
}

func (v NullableGetEvents200ResponseAllOfEventsInnerOneOf42MessageDetailsValue) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetEvents200ResponseAllOfEventsInnerOneOf42MessageDetailsValue) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


