/*
Zulip REST API

Powerful open source group chat 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// checks if the RegisterQueue200ResponseAllOfRealmIncomingWebhookBotsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RegisterQueue200ResponseAllOfRealmIncomingWebhookBotsInner{}

// RegisterQueue200ResponseAllOfRealmIncomingWebhookBotsInner Object containing details of the bot. 
type RegisterQueue200ResponseAllOfRealmIncomingWebhookBotsInner struct {
	// A machine-readable unique name identifying the integration, all-lower-case without spaces. 
	Name *string `json:"name,omitempty"`
	// A human-readable display name identifying the integration that this bot implements, intended to be used in menus for selecting which integration to create.  **Changes**: New in Zulip 8.0 (feature level 207). 
	DisplayName *string `json:"display_name,omitempty"`
	// For incoming webhook integrations that support the Zulip server filtering incoming events, the list of event types supported by it.  A null value will be present if this incoming webhook integration doesn't support such filtering.  **Changes**: New in Zulip 8.0 (feature level 207). 
	AllEventTypes []string `json:"all_event_types,omitempty"`
	// An array of configuration options that can be set when creating a bot user for this incoming webhook integration.  This is an unstable API. Please discuss in chat.zulip.org before using it.  **Changes**: As of Zulip 11.0 (feature level 403), this object is reserved for integration-specific configuration options that can be set when creating a bot user. Previously, this object also included optional webhook URL parameters, which are now specified in the `url_options` object.  Before Zulip 10.0 (feature level 318), this field was named `config`, and was reserved for configuration data key-value pairs. 
	ConfigOptions []WebhookConfigOptionInner `json:"config_options,omitempty"`
	// An array of optional URL parameter options for the incoming webhook integration. In the web app, these are used when [generating a URL for an integration](/help/generate-integration-url).  This is an unstable API expected to be used only by the Zulip web app. Please discuss in chat.zulip.org before using it.  **Changes**: New in Zulip 11.0 (feature level 403). Previously, these optional URL parameter options were included in the `config_options` object. 
	UrlOptions []WebhookUrlOptionInner `json:"url_options,omitempty"`
}

// NewRegisterQueue200ResponseAllOfRealmIncomingWebhookBotsInner instantiates a new RegisterQueue200ResponseAllOfRealmIncomingWebhookBotsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRegisterQueue200ResponseAllOfRealmIncomingWebhookBotsInner() *RegisterQueue200ResponseAllOfRealmIncomingWebhookBotsInner {
	this := RegisterQueue200ResponseAllOfRealmIncomingWebhookBotsInner{}
	return &this
}

// NewRegisterQueue200ResponseAllOfRealmIncomingWebhookBotsInnerWithDefaults instantiates a new RegisterQueue200ResponseAllOfRealmIncomingWebhookBotsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRegisterQueue200ResponseAllOfRealmIncomingWebhookBotsInnerWithDefaults() *RegisterQueue200ResponseAllOfRealmIncomingWebhookBotsInner {
	this := RegisterQueue200ResponseAllOfRealmIncomingWebhookBotsInner{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *RegisterQueue200ResponseAllOfRealmIncomingWebhookBotsInner) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RegisterQueue200ResponseAllOfRealmIncomingWebhookBotsInner) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *RegisterQueue200ResponseAllOfRealmIncomingWebhookBotsInner) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *RegisterQueue200ResponseAllOfRealmIncomingWebhookBotsInner) SetName(v string) {
	o.Name = &v
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *RegisterQueue200ResponseAllOfRealmIncomingWebhookBotsInner) GetDisplayName() string {
	if o == nil || IsNil(o.DisplayName) {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RegisterQueue200ResponseAllOfRealmIncomingWebhookBotsInner) GetDisplayNameOk() (*string, bool) {
	if o == nil || IsNil(o.DisplayName) {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *RegisterQueue200ResponseAllOfRealmIncomingWebhookBotsInner) HasDisplayName() bool {
	if o != nil && !IsNil(o.DisplayName) {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *RegisterQueue200ResponseAllOfRealmIncomingWebhookBotsInner) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetAllEventTypes returns the AllEventTypes field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RegisterQueue200ResponseAllOfRealmIncomingWebhookBotsInner) GetAllEventTypes() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.AllEventTypes
}

// GetAllEventTypesOk returns a tuple with the AllEventTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RegisterQueue200ResponseAllOfRealmIncomingWebhookBotsInner) GetAllEventTypesOk() ([]string, bool) {
	if o == nil || IsNil(o.AllEventTypes) {
		return nil, false
	}
	return o.AllEventTypes, true
}

// HasAllEventTypes returns a boolean if a field has been set.
func (o *RegisterQueue200ResponseAllOfRealmIncomingWebhookBotsInner) HasAllEventTypes() bool {
	if o != nil && !IsNil(o.AllEventTypes) {
		return true
	}

	return false
}

// SetAllEventTypes gets a reference to the given []string and assigns it to the AllEventTypes field.
func (o *RegisterQueue200ResponseAllOfRealmIncomingWebhookBotsInner) SetAllEventTypes(v []string) {
	o.AllEventTypes = v
}

// GetConfigOptions returns the ConfigOptions field value if set, zero value otherwise.
func (o *RegisterQueue200ResponseAllOfRealmIncomingWebhookBotsInner) GetConfigOptions() []WebhookConfigOptionInner {
	if o == nil || IsNil(o.ConfigOptions) {
		var ret []WebhookConfigOptionInner
		return ret
	}
	return o.ConfigOptions
}

// GetConfigOptionsOk returns a tuple with the ConfigOptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RegisterQueue200ResponseAllOfRealmIncomingWebhookBotsInner) GetConfigOptionsOk() ([]WebhookConfigOptionInner, bool) {
	if o == nil || IsNil(o.ConfigOptions) {
		return nil, false
	}
	return o.ConfigOptions, true
}

// HasConfigOptions returns a boolean if a field has been set.
func (o *RegisterQueue200ResponseAllOfRealmIncomingWebhookBotsInner) HasConfigOptions() bool {
	if o != nil && !IsNil(o.ConfigOptions) {
		return true
	}

	return false
}

// SetConfigOptions gets a reference to the given []WebhookConfigOptionInner and assigns it to the ConfigOptions field.
func (o *RegisterQueue200ResponseAllOfRealmIncomingWebhookBotsInner) SetConfigOptions(v []WebhookConfigOptionInner) {
	o.ConfigOptions = v
}

// GetUrlOptions returns the UrlOptions field value if set, zero value otherwise.
func (o *RegisterQueue200ResponseAllOfRealmIncomingWebhookBotsInner) GetUrlOptions() []WebhookUrlOptionInner {
	if o == nil || IsNil(o.UrlOptions) {
		var ret []WebhookUrlOptionInner
		return ret
	}
	return o.UrlOptions
}

// GetUrlOptionsOk returns a tuple with the UrlOptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RegisterQueue200ResponseAllOfRealmIncomingWebhookBotsInner) GetUrlOptionsOk() ([]WebhookUrlOptionInner, bool) {
	if o == nil || IsNil(o.UrlOptions) {
		return nil, false
	}
	return o.UrlOptions, true
}

// HasUrlOptions returns a boolean if a field has been set.
func (o *RegisterQueue200ResponseAllOfRealmIncomingWebhookBotsInner) HasUrlOptions() bool {
	if o != nil && !IsNil(o.UrlOptions) {
		return true
	}

	return false
}

// SetUrlOptions gets a reference to the given []WebhookUrlOptionInner and assigns it to the UrlOptions field.
func (o *RegisterQueue200ResponseAllOfRealmIncomingWebhookBotsInner) SetUrlOptions(v []WebhookUrlOptionInner) {
	o.UrlOptions = v
}

func (o RegisterQueue200ResponseAllOfRealmIncomingWebhookBotsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RegisterQueue200ResponseAllOfRealmIncomingWebhookBotsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.DisplayName) {
		toSerialize["display_name"] = o.DisplayName
	}
	if o.AllEventTypes != nil {
		toSerialize["all_event_types"] = o.AllEventTypes
	}
	if !IsNil(o.ConfigOptions) {
		toSerialize["config_options"] = o.ConfigOptions
	}
	if !IsNil(o.UrlOptions) {
		toSerialize["url_options"] = o.UrlOptions
	}
	return toSerialize, nil
}

type NullableRegisterQueue200ResponseAllOfRealmIncomingWebhookBotsInner struct {
	value *RegisterQueue200ResponseAllOfRealmIncomingWebhookBotsInner
	isSet bool
}

func (v NullableRegisterQueue200ResponseAllOfRealmIncomingWebhookBotsInner) Get() *RegisterQueue200ResponseAllOfRealmIncomingWebhookBotsInner {
	return v.value
}

func (v *NullableRegisterQueue200ResponseAllOfRealmIncomingWebhookBotsInner) Set(val *RegisterQueue200ResponseAllOfRealmIncomingWebhookBotsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableRegisterQueue200ResponseAllOfRealmIncomingWebhookBotsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableRegisterQueue200ResponseAllOfRealmIncomingWebhookBotsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRegisterQueue200ResponseAllOfRealmIncomingWebhookBotsInner(val *RegisterQueue200ResponseAllOfRealmIncomingWebhookBotsInner) *NullableRegisterQueue200ResponseAllOfRealmIncomingWebhookBotsInner {
	return &NullableRegisterQueue200ResponseAllOfRealmIncomingWebhookBotsInner{value: val, isSet: true}
}

func (v NullableRegisterQueue200ResponseAllOfRealmIncomingWebhookBotsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRegisterQueue200ResponseAllOfRealmIncomingWebhookBotsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


