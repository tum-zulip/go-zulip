/*
Zulip REST API

Powerful open source group chat 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// checks if the WebhookUrlOptionInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WebhookUrlOptionInner{}

// WebhookUrlOptionInner struct for WebhookUrlOptionInner
type WebhookUrlOptionInner struct {
	// The parameter variable to encode the users input for this option in the integrations webhook URL. 
	Key *string `json:"key,omitempty"`
	// A human-readable label of the url option. 
	Label *string `json:"label,omitempty"`
	// The name of the validator function for the configuration option. 
	Validator *string `json:"validator,omitempty"`
}

// NewWebhookUrlOptionInner instantiates a new WebhookUrlOptionInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWebhookUrlOptionInner() *WebhookUrlOptionInner {
	this := WebhookUrlOptionInner{}
	return &this
}

// NewWebhookUrlOptionInnerWithDefaults instantiates a new WebhookUrlOptionInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWebhookUrlOptionInnerWithDefaults() *WebhookUrlOptionInner {
	this := WebhookUrlOptionInner{}
	return &this
}

// GetKey returns the Key field value if set, zero value otherwise.
func (o *WebhookUrlOptionInner) GetKey() string {
	if o == nil || IsNil(o.Key) {
		var ret string
		return ret
	}
	return *o.Key
}

// GetKeyOk returns a tuple with the Key field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookUrlOptionInner) GetKeyOk() (*string, bool) {
	if o == nil || IsNil(o.Key) {
		return nil, false
	}
	return o.Key, true
}

// HasKey returns a boolean if a field has been set.
func (o *WebhookUrlOptionInner) HasKey() bool {
	if o != nil && !IsNil(o.Key) {
		return true
	}

	return false
}

// SetKey gets a reference to the given string and assigns it to the Key field.
func (o *WebhookUrlOptionInner) SetKey(v string) {
	o.Key = &v
}

// GetLabel returns the Label field value if set, zero value otherwise.
func (o *WebhookUrlOptionInner) GetLabel() string {
	if o == nil || IsNil(o.Label) {
		var ret string
		return ret
	}
	return *o.Label
}

// GetLabelOk returns a tuple with the Label field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookUrlOptionInner) GetLabelOk() (*string, bool) {
	if o == nil || IsNil(o.Label) {
		return nil, false
	}
	return o.Label, true
}

// HasLabel returns a boolean if a field has been set.
func (o *WebhookUrlOptionInner) HasLabel() bool {
	if o != nil && !IsNil(o.Label) {
		return true
	}

	return false
}

// SetLabel gets a reference to the given string and assigns it to the Label field.
func (o *WebhookUrlOptionInner) SetLabel(v string) {
	o.Label = &v
}

// GetValidator returns the Validator field value if set, zero value otherwise.
func (o *WebhookUrlOptionInner) GetValidator() string {
	if o == nil || IsNil(o.Validator) {
		var ret string
		return ret
	}
	return *o.Validator
}

// GetValidatorOk returns a tuple with the Validator field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookUrlOptionInner) GetValidatorOk() (*string, bool) {
	if o == nil || IsNil(o.Validator) {
		return nil, false
	}
	return o.Validator, true
}

// HasValidator returns a boolean if a field has been set.
func (o *WebhookUrlOptionInner) HasValidator() bool {
	if o != nil && !IsNil(o.Validator) {
		return true
	}

	return false
}

// SetValidator gets a reference to the given string and assigns it to the Validator field.
func (o *WebhookUrlOptionInner) SetValidator(v string) {
	o.Validator = &v
}

func (o WebhookUrlOptionInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WebhookUrlOptionInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Key) {
		toSerialize["key"] = o.Key
	}
	if !IsNil(o.Label) {
		toSerialize["label"] = o.Label
	}
	if !IsNil(o.Validator) {
		toSerialize["validator"] = o.Validator
	}
	return toSerialize, nil
}

type NullableWebhookUrlOptionInner struct {
	value *WebhookUrlOptionInner
	isSet bool
}

func (v NullableWebhookUrlOptionInner) Get() *WebhookUrlOptionInner {
	return v.value
}

func (v *NullableWebhookUrlOptionInner) Set(val *WebhookUrlOptionInner) {
	v.value = val
	v.isSet = true
}

func (v NullableWebhookUrlOptionInner) IsSet() bool {
	return v.isSet
}

func (v *NullableWebhookUrlOptionInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWebhookUrlOptionInner(val *WebhookUrlOptionInner) *NullableWebhookUrlOptionInner {
	return &NullableWebhookUrlOptionInner{value: val, isSet: true}
}

func (v NullableWebhookUrlOptionInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWebhookUrlOptionInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


