/*
Zulip REST API

Powerful open source group chat

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"fmt"

	"gopkg.in/validator.v2"
)

// UpdateMessageFlagsForNarrowRequestNarrowInner - struct for UpdateMessageFlagsForNarrowRequestNarrowInner
type UpdateMessageFlagsForNarrowRequestNarrowInner struct {
	UpdateMessageFlagsForNarrowRequestNarrowInnerOneOf *UpdateMessageFlagsForNarrowRequestNarrowInnerOneOf
	ArrayOfString                                      *[]string
}

// UpdateMessageFlagsForNarrowRequestNarrowInnerOneOfAsUpdateMessageFlagsForNarrowRequestNarrowInner is a convenience function that returns UpdateMessageFlagsForNarrowRequestNarrowInnerOneOf wrapped in UpdateMessageFlagsForNarrowRequestNarrowInner
func UpdateMessageFlagsForNarrowRequestNarrowInnerOneOfAsUpdateMessageFlagsForNarrowRequestNarrowInner(v *UpdateMessageFlagsForNarrowRequestNarrowInnerOneOf) UpdateMessageFlagsForNarrowRequestNarrowInner {
	return UpdateMessageFlagsForNarrowRequestNarrowInner{
		UpdateMessageFlagsForNarrowRequestNarrowInnerOneOf: v,
	}
}

// []stringAsUpdateMessageFlagsForNarrowRequestNarrowInner is a convenience function that returns []string wrapped in UpdateMessageFlagsForNarrowRequestNarrowInner
func ArrayOfStringAsUpdateMessageFlagsForNarrowRequestNarrowInner(v *[]string) UpdateMessageFlagsForNarrowRequestNarrowInner {
	return UpdateMessageFlagsForNarrowRequestNarrowInner{
		ArrayOfString: v,
	}
}

// Unmarshal JSON data into one of the pointers in the struct
func (dst *UpdateMessageFlagsForNarrowRequestNarrowInner) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into UpdateMessageFlagsForNarrowRequestNarrowInnerOneOf
	err = newStrictDecoder(data).Decode(&dst.UpdateMessageFlagsForNarrowRequestNarrowInnerOneOf)
	if err == nil {
		jsonUpdateMessageFlagsForNarrowRequestNarrowInnerOneOf, _ := json.Marshal(dst.UpdateMessageFlagsForNarrowRequestNarrowInnerOneOf)
		if string(jsonUpdateMessageFlagsForNarrowRequestNarrowInnerOneOf) == "{}" { // empty struct
			dst.UpdateMessageFlagsForNarrowRequestNarrowInnerOneOf = nil
		} else {
			if err = validator.Validate(dst.UpdateMessageFlagsForNarrowRequestNarrowInnerOneOf); err != nil {
				dst.UpdateMessageFlagsForNarrowRequestNarrowInnerOneOf = nil
			} else {
				match++
			}
		}
	} else {
		dst.UpdateMessageFlagsForNarrowRequestNarrowInnerOneOf = nil
	}

	// try to unmarshal data into ArrayOfString
	err = newStrictDecoder(data).Decode(&dst.ArrayOfString)
	if err == nil {
		jsonArrayOfString, _ := json.Marshal(dst.ArrayOfString)
		if string(jsonArrayOfString) == "{}" { // empty struct
			dst.ArrayOfString = nil
		} else {
			if err = validator.Validate(dst.ArrayOfString); err != nil {
				dst.ArrayOfString = nil
			} else {
				match++
			}
		}
	} else {
		dst.ArrayOfString = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.UpdateMessageFlagsForNarrowRequestNarrowInnerOneOf = nil
		dst.ArrayOfString = nil

		return fmt.Errorf("data matches more than one schema in oneOf(UpdateMessageFlagsForNarrowRequestNarrowInner)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(UpdateMessageFlagsForNarrowRequestNarrowInner)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src UpdateMessageFlagsForNarrowRequestNarrowInner) MarshalJSON() ([]byte, error) {
	if src.UpdateMessageFlagsForNarrowRequestNarrowInnerOneOf != nil {
		return json.Marshal(&src.UpdateMessageFlagsForNarrowRequestNarrowInnerOneOf)
	}

	if src.ArrayOfString != nil {
		return json.Marshal(&src.ArrayOfString)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *UpdateMessageFlagsForNarrowRequestNarrowInner) GetActualInstance() interface{} {
	if obj == nil {
		return nil
	}
	if obj.UpdateMessageFlagsForNarrowRequestNarrowInnerOneOf != nil {
		return obj.UpdateMessageFlagsForNarrowRequestNarrowInnerOneOf
	}

	if obj.ArrayOfString != nil {
		return obj.ArrayOfString
	}

	// all schemas are nil
	return nil
}

// Get the actual instance value
func (obj UpdateMessageFlagsForNarrowRequestNarrowInner) GetActualInstanceValue() interface{} {
	if obj.UpdateMessageFlagsForNarrowRequestNarrowInnerOneOf != nil {
		return *obj.UpdateMessageFlagsForNarrowRequestNarrowInnerOneOf
	}

	if obj.ArrayOfString != nil {
		return *obj.ArrayOfString
	}

	// all schemas are nil
	return nil
}

type NullableUpdateMessageFlagsForNarrowRequestNarrowInner struct {
	value *UpdateMessageFlagsForNarrowRequestNarrowInner
	isSet bool
}

func (v NullableUpdateMessageFlagsForNarrowRequestNarrowInner) Get() *UpdateMessageFlagsForNarrowRequestNarrowInner {
	return v.value
}

func (v *NullableUpdateMessageFlagsForNarrowRequestNarrowInner) Set(val *UpdateMessageFlagsForNarrowRequestNarrowInner) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateMessageFlagsForNarrowRequestNarrowInner) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateMessageFlagsForNarrowRequestNarrowInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateMessageFlagsForNarrowRequestNarrowInner(val *UpdateMessageFlagsForNarrowRequestNarrowInner) *NullableUpdateMessageFlagsForNarrowRequestNarrowInner {
	return &NullableUpdateMessageFlagsForNarrowRequestNarrowInner{value: val, isSet: true}
}

func (v NullableUpdateMessageFlagsForNarrowRequestNarrowInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateMessageFlagsForNarrowRequestNarrowInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
