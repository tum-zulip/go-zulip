/*
Zulip REST API

Powerful open source group chat 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the UpdateMessage200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateMessage200Response{}

// UpdateMessage200Response struct for UpdateMessage200Response
type UpdateMessage200Response struct {
	Result interface{} `json:"result"`
	Msg interface{} `json:"msg"`
	IgnoredParametersUnsupported interface{} `json:"ignored_parameters_unsupported,omitempty"`
	// Details on all files uploaded by the acting user whose only references were removed when editing this message. Clients should ask the acting user if they wish to delete the uploaded files returned in this response, which might otherwise remain visible only in message edit history.  Note that [access to message edit history][edit-history-access] is configurable; this detail may be important in presenting the question clearly to users.  New in Zulip 10.0 (feature level 285).  [edit-history-access]: /help/restrict-message-edit-history-access 
	DetachedUploads []Attachment `json:"detached_uploads,omitempty"`
}

type _UpdateMessage200Response UpdateMessage200Response

// NewUpdateMessage200Response instantiates a new UpdateMessage200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateMessage200Response(result interface{}, msg interface{}) *UpdateMessage200Response {
	this := UpdateMessage200Response{}
	this.Result = result
	this.Msg = msg
	return &this
}

// NewUpdateMessage200ResponseWithDefaults instantiates a new UpdateMessage200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateMessage200ResponseWithDefaults() *UpdateMessage200Response {
	this := UpdateMessage200Response{}
	return &this
}

// GetResult returns the Result field value
// If the value is explicit nil, the zero value for interface{} will be returned
func (o *UpdateMessage200Response) GetResult() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}

	return o.Result
}

// GetResultOk returns a tuple with the Result field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateMessage200Response) GetResultOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Result) {
		return nil, false
	}
	return &o.Result, true
}

// SetResult sets field value
func (o *UpdateMessage200Response) SetResult(v interface{}) {
	o.Result = v
}

// GetMsg returns the Msg field value
// If the value is explicit nil, the zero value for interface{} will be returned
func (o *UpdateMessage200Response) GetMsg() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}

	return o.Msg
}

// GetMsgOk returns a tuple with the Msg field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateMessage200Response) GetMsgOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Msg) {
		return nil, false
	}
	return &o.Msg, true
}

// SetMsg sets field value
func (o *UpdateMessage200Response) SetMsg(v interface{}) {
	o.Msg = v
}

// GetIgnoredParametersUnsupported returns the IgnoredParametersUnsupported field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateMessage200Response) GetIgnoredParametersUnsupported() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.IgnoredParametersUnsupported
}

// GetIgnoredParametersUnsupportedOk returns a tuple with the IgnoredParametersUnsupported field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateMessage200Response) GetIgnoredParametersUnsupportedOk() (*interface{}, bool) {
	if o == nil || IsNil(o.IgnoredParametersUnsupported) {
		return nil, false
	}
	return &o.IgnoredParametersUnsupported, true
}

// HasIgnoredParametersUnsupported returns a boolean if a field has been set.
func (o *UpdateMessage200Response) HasIgnoredParametersUnsupported() bool {
	if o != nil && !IsNil(o.IgnoredParametersUnsupported) {
		return true
	}

	return false
}

// SetIgnoredParametersUnsupported gets a reference to the given interface{} and assigns it to the IgnoredParametersUnsupported field.
func (o *UpdateMessage200Response) SetIgnoredParametersUnsupported(v interface{}) {
	o.IgnoredParametersUnsupported = v
}

// GetDetachedUploads returns the DetachedUploads field value if set, zero value otherwise.
func (o *UpdateMessage200Response) GetDetachedUploads() []Attachment {
	if o == nil || IsNil(o.DetachedUploads) {
		var ret []Attachment
		return ret
	}
	return o.DetachedUploads
}

// GetDetachedUploadsOk returns a tuple with the DetachedUploads field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateMessage200Response) GetDetachedUploadsOk() ([]Attachment, bool) {
	if o == nil || IsNil(o.DetachedUploads) {
		return nil, false
	}
	return o.DetachedUploads, true
}

// HasDetachedUploads returns a boolean if a field has been set.
func (o *UpdateMessage200Response) HasDetachedUploads() bool {
	if o != nil && !IsNil(o.DetachedUploads) {
		return true
	}

	return false
}

// SetDetachedUploads gets a reference to the given []Attachment and assigns it to the DetachedUploads field.
func (o *UpdateMessage200Response) SetDetachedUploads(v []Attachment) {
	o.DetachedUploads = v
}

func (o UpdateMessage200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateMessage200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Result != nil {
		toSerialize["result"] = o.Result
	}
	if o.Msg != nil {
		toSerialize["msg"] = o.Msg
	}
	if o.IgnoredParametersUnsupported != nil {
		toSerialize["ignored_parameters_unsupported"] = o.IgnoredParametersUnsupported
	}
	if !IsNil(o.DetachedUploads) {
		toSerialize["detached_uploads"] = o.DetachedUploads
	}
	return toSerialize, nil
}

func (o *UpdateMessage200Response) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"result",
		"msg",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varUpdateMessage200Response := _UpdateMessage200Response{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varUpdateMessage200Response)

	if err != nil {
		return err
	}

	*o = UpdateMessage200Response(varUpdateMessage200Response)

	return err
}

type NullableUpdateMessage200Response struct {
	value *UpdateMessage200Response
	isSet bool
}

func (v NullableUpdateMessage200Response) Get() *UpdateMessage200Response {
	return v.value
}

func (v *NullableUpdateMessage200Response) Set(val *UpdateMessage200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateMessage200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateMessage200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateMessage200Response(val *UpdateMessage200Response) *NullableUpdateMessage200Response {
	return &NullableUpdateMessage200Response{value: val, isSet: true}
}

func (v NullableUpdateMessage200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateMessage200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


