/*
Zulip REST API

Powerful open source group chat

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// checks if the DefaultStreamGroupsEvent type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DefaultStreamGroupsEvent{}

// DefaultStreamGroupsEvent Event sent to all users in a Zulip organization when an organization administrator changes the organization's configured default channel groups.  Default channel groups are an **experimental** feature that is not yet stabilized.
type DefaultStreamGroupsEvent struct {
	// The ID of the event. Events appear in increasing order but may not be consecutive.
	Id   *int32  `json:"id,omitempty"`
	Type *string `json:"type,omitempty"`
	// An array of dictionaries where each dictionary contains details about a single default channel group.
	DefaultStreamGroups []DefaultChannelGroup `json:"default_stream_groups,omitempty"`
}

// NewUpdateGlobalNotificationsEvent8 instantiates a new DefaultStreamGroupsEvent object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateGlobalNotificationsEvent8() *DefaultStreamGroupsEvent {
	this := DefaultStreamGroupsEvent{}
	return &this
}

// NewUpdateGlobalNotificationsEvent8WithDefaults instantiates a new DefaultStreamGroupsEvent object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateGlobalNotificationsEvent8WithDefaults() *DefaultStreamGroupsEvent {
	this := DefaultStreamGroupsEvent{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *DefaultStreamGroupsEvent) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DefaultStreamGroupsEvent) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *DefaultStreamGroupsEvent) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *DefaultStreamGroupsEvent) SetId(v int32) {
	o.Id = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *DefaultStreamGroupsEvent) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DefaultStreamGroupsEvent) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *DefaultStreamGroupsEvent) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *DefaultStreamGroupsEvent) SetType(v string) {
	o.Type = &v
}

// GetDefaultStreamGroups returns the DefaultStreamGroups field value if set, zero value otherwise.
func (o *DefaultStreamGroupsEvent) GetDefaultStreamGroups() []DefaultChannelGroup {
	if o == nil || IsNil(o.DefaultStreamGroups) {
		var ret []DefaultChannelGroup
		return ret
	}
	return o.DefaultStreamGroups
}

// GetDefaultStreamGroupsOk returns a tuple with the DefaultStreamGroups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DefaultStreamGroupsEvent) GetDefaultStreamGroupsOk() ([]DefaultChannelGroup, bool) {
	if o == nil || IsNil(o.DefaultStreamGroups) {
		return nil, false
	}
	return o.DefaultStreamGroups, true
}

// HasDefaultStreamGroups returns a boolean if a field has been set.
func (o *DefaultStreamGroupsEvent) HasDefaultStreamGroups() bool {
	if o != nil && !IsNil(o.DefaultStreamGroups) {
		return true
	}

	return false
}

// SetDefaultStreamGroups gets a reference to the given []DefaultChannelGroup and assigns it to the DefaultStreamGroups field.
func (o *DefaultStreamGroupsEvent) SetDefaultStreamGroups(v []DefaultChannelGroup) {
	o.DefaultStreamGroups = v
}

func (o DefaultStreamGroupsEvent) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DefaultStreamGroupsEvent) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.DefaultStreamGroups) {
		toSerialize["default_stream_groups"] = o.DefaultStreamGroups
	}
	return toSerialize, nil
}

type NullableUpdateGlobalNotificationsEvent8 struct {
	value *DefaultStreamGroupsEvent
	isSet bool
}

func (v NullableUpdateGlobalNotificationsEvent8) Get() *DefaultStreamGroupsEvent {
	return v.value
}

func (v *NullableUpdateGlobalNotificationsEvent8) Set(val *DefaultStreamGroupsEvent) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateGlobalNotificationsEvent8) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateGlobalNotificationsEvent8) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateGlobalNotificationsEvent8(val *DefaultStreamGroupsEvent) *NullableUpdateGlobalNotificationsEvent8 {
	return &NullableUpdateGlobalNotificationsEvent8{value: val, isSet: true}
}

func (v NullableUpdateGlobalNotificationsEvent8) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateGlobalNotificationsEvent8) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
