/*
Zulip REST API

Powerful open source group chat

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// checks if the RealmBotAddEvent type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RealmBotAddEvent{}

// RealmBotAddEvent Event sent to users who can administer a newly created bot user. Clients will also receive a `realm_user` event that contains basic details (but not the API key).  The `realm_user` events are sufficient for clients that only need to interact with the bot; this `realm_bot` event type is relevant only for administering bots.  Only organization administrators and the user who owns the bot will receive this event.
type RealmBotAddEvent struct {
	// The ID of the event. Events appear in increasing order but may not be consecutive.
	Id   *int32  `json:"id,omitempty"`
	Type *string `json:"type,omitempty"`
	Op   *string `json:"op,omitempty"`
	Bot  *Bot    `json:"bot,omitempty"`
}

// NewSubscriptionAddEvent9 instantiates a new RealmBotAddEvent object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSubscriptionAddEvent9() *RealmBotAddEvent {
	this := RealmBotAddEvent{}
	return &this
}

// NewSubscriptionAddEvent9WithDefaults instantiates a new RealmBotAddEvent object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSubscriptionAddEvent9WithDefaults() *RealmBotAddEvent {
	this := RealmBotAddEvent{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *RealmBotAddEvent) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RealmBotAddEvent) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *RealmBotAddEvent) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *RealmBotAddEvent) SetId(v int32) {
	o.Id = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *RealmBotAddEvent) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RealmBotAddEvent) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *RealmBotAddEvent) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *RealmBotAddEvent) SetType(v string) {
	o.Type = &v
}

// GetOp returns the Op field value if set, zero value otherwise.
func (o *RealmBotAddEvent) GetOp() string {
	if o == nil || IsNil(o.Op) {
		var ret string
		return ret
	}
	return *o.Op
}

// GetOpOk returns a tuple with the Op field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RealmBotAddEvent) GetOpOk() (*string, bool) {
	if o == nil || IsNil(o.Op) {
		return nil, false
	}
	return o.Op, true
}

// HasOp returns a boolean if a field has been set.
func (o *RealmBotAddEvent) HasOp() bool {
	if o != nil && !IsNil(o.Op) {
		return true
	}

	return false
}

// SetOp gets a reference to the given string and assigns it to the Op field.
func (o *RealmBotAddEvent) SetOp(v string) {
	o.Op = &v
}

// GetBot returns the Bot field value if set, zero value otherwise.
func (o *RealmBotAddEvent) GetBot() Bot {
	if o == nil || IsNil(o.Bot) {
		var ret Bot
		return ret
	}
	return *o.Bot
}

// GetBotOk returns a tuple with the Bot field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RealmBotAddEvent) GetBotOk() (*Bot, bool) {
	if o == nil || IsNil(o.Bot) {
		return nil, false
	}
	return o.Bot, true
}

// HasBot returns a boolean if a field has been set.
func (o *RealmBotAddEvent) HasBot() bool {
	if o != nil && !IsNil(o.Bot) {
		return true
	}

	return false
}

// SetBot gets a reference to the given Bot and assigns it to the Bot field.
func (o *RealmBotAddEvent) SetBot(v Bot) {
	o.Bot = &v
}

func (o RealmBotAddEvent) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RealmBotAddEvent) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Op) {
		toSerialize["op"] = o.Op
	}
	if !IsNil(o.Bot) {
		toSerialize["bot"] = o.Bot
	}
	return toSerialize, nil
}

type NullableSubscriptionAddEvent9 struct {
	value *RealmBotAddEvent
	isSet bool
}

func (v NullableSubscriptionAddEvent9) Get() *RealmBotAddEvent {
	return v.value
}

func (v *NullableSubscriptionAddEvent9) Set(val *RealmBotAddEvent) {
	v.value = val
	v.isSet = true
}

func (v NullableSubscriptionAddEvent9) IsSet() bool {
	return v.isSet
}

func (v *NullableSubscriptionAddEvent9) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSubscriptionAddEvent9(val *RealmBotAddEvent) *NullableSubscriptionAddEvent9 {
	return &NullableSubscriptionAddEvent9{value: val, isSet: true}
}

func (v NullableSubscriptionAddEvent9) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSubscriptionAddEvent9) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
