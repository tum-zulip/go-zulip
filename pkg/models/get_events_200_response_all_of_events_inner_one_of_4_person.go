/*
Zulip REST API

Powerful open source group chat 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"fmt"
	"gopkg.in/validator.v2"
)

// GetEvents200ResponseAllOfEventsInnerOneOf4Person - Object containing the changed details of the user. It has multiple forms depending on the value changed.  **Changes**: Removed `is_billing_admin` field in Zulip 10.0 (feature level 363), as it was replaced by the `can_manage_billing_group` realm setting. 
type GetEvents200ResponseAllOfEventsInnerOneOf4Person struct {
	GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf *GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf
	GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf1 *GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf1
	GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf2 *GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf2
	GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf3 *GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf3
	GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf4 *GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf4
	GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf5 *GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf5
	GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf6 *GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf6
	GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf7 *GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf7
	GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf8 *GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf8
}

// GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOfAsGetEvents200ResponseAllOfEventsInnerOneOf4Person is a convenience function that returns GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf wrapped in GetEvents200ResponseAllOfEventsInnerOneOf4Person
func GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOfAsGetEvents200ResponseAllOfEventsInnerOneOf4Person(v *GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf) GetEvents200ResponseAllOfEventsInnerOneOf4Person {
	return GetEvents200ResponseAllOfEventsInnerOneOf4Person{
		GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf: v,
	}
}

// GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf1AsGetEvents200ResponseAllOfEventsInnerOneOf4Person is a convenience function that returns GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf1 wrapped in GetEvents200ResponseAllOfEventsInnerOneOf4Person
func GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf1AsGetEvents200ResponseAllOfEventsInnerOneOf4Person(v *GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf1) GetEvents200ResponseAllOfEventsInnerOneOf4Person {
	return GetEvents200ResponseAllOfEventsInnerOneOf4Person{
		GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf1: v,
	}
}

// GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf2AsGetEvents200ResponseAllOfEventsInnerOneOf4Person is a convenience function that returns GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf2 wrapped in GetEvents200ResponseAllOfEventsInnerOneOf4Person
func GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf2AsGetEvents200ResponseAllOfEventsInnerOneOf4Person(v *GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf2) GetEvents200ResponseAllOfEventsInnerOneOf4Person {
	return GetEvents200ResponseAllOfEventsInnerOneOf4Person{
		GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf2: v,
	}
}

// GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf3AsGetEvents200ResponseAllOfEventsInnerOneOf4Person is a convenience function that returns GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf3 wrapped in GetEvents200ResponseAllOfEventsInnerOneOf4Person
func GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf3AsGetEvents200ResponseAllOfEventsInnerOneOf4Person(v *GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf3) GetEvents200ResponseAllOfEventsInnerOneOf4Person {
	return GetEvents200ResponseAllOfEventsInnerOneOf4Person{
		GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf3: v,
	}
}

// GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf4AsGetEvents200ResponseAllOfEventsInnerOneOf4Person is a convenience function that returns GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf4 wrapped in GetEvents200ResponseAllOfEventsInnerOneOf4Person
func GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf4AsGetEvents200ResponseAllOfEventsInnerOneOf4Person(v *GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf4) GetEvents200ResponseAllOfEventsInnerOneOf4Person {
	return GetEvents200ResponseAllOfEventsInnerOneOf4Person{
		GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf4: v,
	}
}

// GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf5AsGetEvents200ResponseAllOfEventsInnerOneOf4Person is a convenience function that returns GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf5 wrapped in GetEvents200ResponseAllOfEventsInnerOneOf4Person
func GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf5AsGetEvents200ResponseAllOfEventsInnerOneOf4Person(v *GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf5) GetEvents200ResponseAllOfEventsInnerOneOf4Person {
	return GetEvents200ResponseAllOfEventsInnerOneOf4Person{
		GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf5: v,
	}
}

// GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf6AsGetEvents200ResponseAllOfEventsInnerOneOf4Person is a convenience function that returns GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf6 wrapped in GetEvents200ResponseAllOfEventsInnerOneOf4Person
func GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf6AsGetEvents200ResponseAllOfEventsInnerOneOf4Person(v *GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf6) GetEvents200ResponseAllOfEventsInnerOneOf4Person {
	return GetEvents200ResponseAllOfEventsInnerOneOf4Person{
		GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf6: v,
	}
}

// GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf7AsGetEvents200ResponseAllOfEventsInnerOneOf4Person is a convenience function that returns GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf7 wrapped in GetEvents200ResponseAllOfEventsInnerOneOf4Person
func GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf7AsGetEvents200ResponseAllOfEventsInnerOneOf4Person(v *GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf7) GetEvents200ResponseAllOfEventsInnerOneOf4Person {
	return GetEvents200ResponseAllOfEventsInnerOneOf4Person{
		GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf7: v,
	}
}

// GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf8AsGetEvents200ResponseAllOfEventsInnerOneOf4Person is a convenience function that returns GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf8 wrapped in GetEvents200ResponseAllOfEventsInnerOneOf4Person
func GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf8AsGetEvents200ResponseAllOfEventsInnerOneOf4Person(v *GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf8) GetEvents200ResponseAllOfEventsInnerOneOf4Person {
	return GetEvents200ResponseAllOfEventsInnerOneOf4Person{
		GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf8: v,
	}
}


// Unmarshal JSON data into one of the pointers in the struct
func (dst *GetEvents200ResponseAllOfEventsInnerOneOf4Person) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf
	err = newStrictDecoder(data).Decode(&dst.GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf)
	if err == nil {
		jsonGetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf, _ := json.Marshal(dst.GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf)
		if string(jsonGetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf) == "{}" { // empty struct
			dst.GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf = nil
		} else {
			if err = validator.Validate(dst.GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf); err != nil {
				dst.GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf = nil
			} else {
				match++
			}
		}
	} else {
		dst.GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf = nil
	}

	// try to unmarshal data into GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf1
	err = newStrictDecoder(data).Decode(&dst.GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf1)
	if err == nil {
		jsonGetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf1, _ := json.Marshal(dst.GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf1)
		if string(jsonGetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf1) == "{}" { // empty struct
			dst.GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf1 = nil
		} else {
			if err = validator.Validate(dst.GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf1); err != nil {
				dst.GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf1 = nil
			} else {
				match++
			}
		}
	} else {
		dst.GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf1 = nil
	}

	// try to unmarshal data into GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf2
	err = newStrictDecoder(data).Decode(&dst.GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf2)
	if err == nil {
		jsonGetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf2, _ := json.Marshal(dst.GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf2)
		if string(jsonGetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf2) == "{}" { // empty struct
			dst.GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf2 = nil
		} else {
			if err = validator.Validate(dst.GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf2); err != nil {
				dst.GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf2 = nil
			} else {
				match++
			}
		}
	} else {
		dst.GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf2 = nil
	}

	// try to unmarshal data into GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf3
	err = newStrictDecoder(data).Decode(&dst.GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf3)
	if err == nil {
		jsonGetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf3, _ := json.Marshal(dst.GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf3)
		if string(jsonGetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf3) == "{}" { // empty struct
			dst.GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf3 = nil
		} else {
			if err = validator.Validate(dst.GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf3); err != nil {
				dst.GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf3 = nil
			} else {
				match++
			}
		}
	} else {
		dst.GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf3 = nil
	}

	// try to unmarshal data into GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf4
	err = newStrictDecoder(data).Decode(&dst.GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf4)
	if err == nil {
		jsonGetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf4, _ := json.Marshal(dst.GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf4)
		if string(jsonGetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf4) == "{}" { // empty struct
			dst.GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf4 = nil
		} else {
			if err = validator.Validate(dst.GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf4); err != nil {
				dst.GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf4 = nil
			} else {
				match++
			}
		}
	} else {
		dst.GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf4 = nil
	}

	// try to unmarshal data into GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf5
	err = newStrictDecoder(data).Decode(&dst.GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf5)
	if err == nil {
		jsonGetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf5, _ := json.Marshal(dst.GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf5)
		if string(jsonGetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf5) == "{}" { // empty struct
			dst.GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf5 = nil
		} else {
			if err = validator.Validate(dst.GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf5); err != nil {
				dst.GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf5 = nil
			} else {
				match++
			}
		}
	} else {
		dst.GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf5 = nil
	}

	// try to unmarshal data into GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf6
	err = newStrictDecoder(data).Decode(&dst.GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf6)
	if err == nil {
		jsonGetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf6, _ := json.Marshal(dst.GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf6)
		if string(jsonGetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf6) == "{}" { // empty struct
			dst.GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf6 = nil
		} else {
			if err = validator.Validate(dst.GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf6); err != nil {
				dst.GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf6 = nil
			} else {
				match++
			}
		}
	} else {
		dst.GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf6 = nil
	}

	// try to unmarshal data into GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf7
	err = newStrictDecoder(data).Decode(&dst.GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf7)
	if err == nil {
		jsonGetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf7, _ := json.Marshal(dst.GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf7)
		if string(jsonGetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf7) == "{}" { // empty struct
			dst.GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf7 = nil
		} else {
			if err = validator.Validate(dst.GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf7); err != nil {
				dst.GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf7 = nil
			} else {
				match++
			}
		}
	} else {
		dst.GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf7 = nil
	}

	// try to unmarshal data into GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf8
	err = newStrictDecoder(data).Decode(&dst.GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf8)
	if err == nil {
		jsonGetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf8, _ := json.Marshal(dst.GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf8)
		if string(jsonGetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf8) == "{}" { // empty struct
			dst.GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf8 = nil
		} else {
			if err = validator.Validate(dst.GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf8); err != nil {
				dst.GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf8 = nil
			} else {
				match++
			}
		}
	} else {
		dst.GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf8 = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf = nil
		dst.GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf1 = nil
		dst.GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf2 = nil
		dst.GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf3 = nil
		dst.GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf4 = nil
		dst.GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf5 = nil
		dst.GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf6 = nil
		dst.GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf7 = nil
		dst.GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf8 = nil

		return fmt.Errorf("data matches more than one schema in oneOf(GetEvents200ResponseAllOfEventsInnerOneOf4Person)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(GetEvents200ResponseAllOfEventsInnerOneOf4Person)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src GetEvents200ResponseAllOfEventsInnerOneOf4Person) MarshalJSON() ([]byte, error) {
	if src.GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf != nil {
		return json.Marshal(&src.GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf)
	}

	if src.GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf1 != nil {
		return json.Marshal(&src.GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf1)
	}

	if src.GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf2 != nil {
		return json.Marshal(&src.GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf2)
	}

	if src.GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf3 != nil {
		return json.Marshal(&src.GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf3)
	}

	if src.GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf4 != nil {
		return json.Marshal(&src.GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf4)
	}

	if src.GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf5 != nil {
		return json.Marshal(&src.GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf5)
	}

	if src.GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf6 != nil {
		return json.Marshal(&src.GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf6)
	}

	if src.GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf7 != nil {
		return json.Marshal(&src.GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf7)
	}

	if src.GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf8 != nil {
		return json.Marshal(&src.GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf8)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *GetEvents200ResponseAllOfEventsInnerOneOf4Person) GetActualInstance() (interface{}) {
	if obj == nil {
		return nil
	}
	if obj.GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf != nil {
		return obj.GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf
	}

	if obj.GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf1 != nil {
		return obj.GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf1
	}

	if obj.GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf2 != nil {
		return obj.GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf2
	}

	if obj.GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf3 != nil {
		return obj.GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf3
	}

	if obj.GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf4 != nil {
		return obj.GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf4
	}

	if obj.GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf5 != nil {
		return obj.GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf5
	}

	if obj.GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf6 != nil {
		return obj.GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf6
	}

	if obj.GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf7 != nil {
		return obj.GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf7
	}

	if obj.GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf8 != nil {
		return obj.GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf8
	}

	// all schemas are nil
	return nil
}

// Get the actual instance value
func (obj GetEvents200ResponseAllOfEventsInnerOneOf4Person) GetActualInstanceValue() (interface{}) {
	if obj.GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf != nil {
		return *obj.GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf
	}

	if obj.GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf1 != nil {
		return *obj.GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf1
	}

	if obj.GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf2 != nil {
		return *obj.GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf2
	}

	if obj.GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf3 != nil {
		return *obj.GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf3
	}

	if obj.GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf4 != nil {
		return *obj.GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf4
	}

	if obj.GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf5 != nil {
		return *obj.GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf5
	}

	if obj.GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf6 != nil {
		return *obj.GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf6
	}

	if obj.GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf7 != nil {
		return *obj.GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf7
	}

	if obj.GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf8 != nil {
		return *obj.GetEvents200ResponseAllOfEventsInnerOneOf4PersonOneOf8
	}

	// all schemas are nil
	return nil
}

type NullableGetEvents200ResponseAllOfEventsInnerOneOf4Person struct {
	value *GetEvents200ResponseAllOfEventsInnerOneOf4Person
	isSet bool
}

func (v NullableGetEvents200ResponseAllOfEventsInnerOneOf4Person) Get() *GetEvents200ResponseAllOfEventsInnerOneOf4Person {
	return v.value
}

func (v *NullableGetEvents200ResponseAllOfEventsInnerOneOf4Person) Set(val *GetEvents200ResponseAllOfEventsInnerOneOf4Person) {
	v.value = val
	v.isSet = true
}

func (v NullableGetEvents200ResponseAllOfEventsInnerOneOf4Person) IsSet() bool {
	return v.isSet
}

func (v *NullableGetEvents200ResponseAllOfEventsInnerOneOf4Person) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetEvents200ResponseAllOfEventsInnerOneOf4Person(val *GetEvents200ResponseAllOfEventsInnerOneOf4Person) *NullableGetEvents200ResponseAllOfEventsInnerOneOf4Person {
	return &NullableGetEvents200ResponseAllOfEventsInnerOneOf4Person{value: val, isSet: true}
}

func (v NullableGetEvents200ResponseAllOfEventsInnerOneOf4Person) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetEvents200ResponseAllOfEventsInnerOneOf4Person) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


