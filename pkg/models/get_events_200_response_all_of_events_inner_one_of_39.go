/*
Zulip REST API

Powerful open source group chat

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// checks if the GetEvents200ResponseAllOfEventsInnerOneOf39 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetEvents200ResponseAllOfEventsInnerOneOf39{}

// GetEvents200ResponseAllOfEventsInnerOneOf39 Event sent when a user starts editing a message. Event sent when a user starts typing in a textarea to edit the content of a message. See the [edit message typing notifications endpoint](/api/set-typing-status-for-message-edit).  Clients requesting `typing_edit_message` event type that have `receives_typing_notifications` enabled will receive this event if they would have been notified if the message's content edit were to be saved (E.g., because they were a direct message recipient or are a subscribe to the channel).  **Changes**: New in Zulip 10.0 (feature level 351). Previously, typing notifications were not available when editing messages.
type GetEvents200ResponseAllOfEventsInnerOneOf39 struct {
	// The ID of the event. Events appear in increasing order but may not be consecutive.
	Id   *int32  `json:"id,omitempty"`
	Type *string `json:"type,omitempty"`
	Op   *string `json:"op,omitempty"`
	// The ID of the user who is typing the edit of the message.  Clients should be careful to display this user as the person who is typing, not that of the sender of the message, in case a collaborative editing feature be might be added in the future.
	SenderId *int32 `json:"sender_id,omitempty"`
	// Indicates the message id of the message that is being edited.
	MessageId *int32                                                `json:"message_id,omitempty"`
	Recipient *GetEvents200ResponseAllOfEventsInnerOneOf39Recipient `json:"recipient,omitempty"`
}

// NewGetEvents200ResponseAllOfEventsInnerOneOf39 instantiates a new GetEvents200ResponseAllOfEventsInnerOneOf39 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetEvents200ResponseAllOfEventsInnerOneOf39() *GetEvents200ResponseAllOfEventsInnerOneOf39 {
	this := GetEvents200ResponseAllOfEventsInnerOneOf39{}
	return &this
}

// NewGetEvents200ResponseAllOfEventsInnerOneOf39WithDefaults instantiates a new GetEvents200ResponseAllOfEventsInnerOneOf39 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetEvents200ResponseAllOfEventsInnerOneOf39WithDefaults() *GetEvents200ResponseAllOfEventsInnerOneOf39 {
	this := GetEvents200ResponseAllOfEventsInnerOneOf39{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf39) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf39) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf39) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf39) SetId(v int32) {
	o.Id = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf39) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf39) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf39) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf39) SetType(v string) {
	o.Type = &v
}

// GetOp returns the Op field value if set, zero value otherwise.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf39) GetOp() string {
	if o == nil || IsNil(o.Op) {
		var ret string
		return ret
	}
	return *o.Op
}

// GetOpOk returns a tuple with the Op field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf39) GetOpOk() (*string, bool) {
	if o == nil || IsNil(o.Op) {
		return nil, false
	}
	return o.Op, true
}

// HasOp returns a boolean if a field has been set.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf39) HasOp() bool {
	if o != nil && !IsNil(o.Op) {
		return true
	}

	return false
}

// SetOp gets a reference to the given string and assigns it to the Op field.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf39) SetOp(v string) {
	o.Op = &v
}

// GetSenderId returns the SenderId field value if set, zero value otherwise.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf39) GetSenderId() int32 {
	if o == nil || IsNil(o.SenderId) {
		var ret int32
		return ret
	}
	return *o.SenderId
}

// GetSenderIdOk returns a tuple with the SenderId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf39) GetSenderIdOk() (*int32, bool) {
	if o == nil || IsNil(o.SenderId) {
		return nil, false
	}
	return o.SenderId, true
}

// HasSenderId returns a boolean if a field has been set.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf39) HasSenderId() bool {
	if o != nil && !IsNil(o.SenderId) {
		return true
	}

	return false
}

// SetSenderId gets a reference to the given int32 and assigns it to the SenderId field.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf39) SetSenderId(v int32) {
	o.SenderId = &v
}

// GetMessageId returns the MessageId field value if set, zero value otherwise.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf39) GetMessageId() int32 {
	if o == nil || IsNil(o.MessageId) {
		var ret int32
		return ret
	}
	return *o.MessageId
}

// GetMessageIdOk returns a tuple with the MessageId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf39) GetMessageIdOk() (*int32, bool) {
	if o == nil || IsNil(o.MessageId) {
		return nil, false
	}
	return o.MessageId, true
}

// HasMessageId returns a boolean if a field has been set.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf39) HasMessageId() bool {
	if o != nil && !IsNil(o.MessageId) {
		return true
	}

	return false
}

// SetMessageId gets a reference to the given int32 and assigns it to the MessageId field.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf39) SetMessageId(v int32) {
	o.MessageId = &v
}

// GetRecipient returns the Recipient field value if set, zero value otherwise.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf39) GetRecipient() GetEvents200ResponseAllOfEventsInnerOneOf39Recipient {
	if o == nil || IsNil(o.Recipient) {
		var ret GetEvents200ResponseAllOfEventsInnerOneOf39Recipient
		return ret
	}
	return *o.Recipient
}

// GetRecipientOk returns a tuple with the Recipient field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf39) GetRecipientOk() (*GetEvents200ResponseAllOfEventsInnerOneOf39Recipient, bool) {
	if o == nil || IsNil(o.Recipient) {
		return nil, false
	}
	return o.Recipient, true
}

// HasRecipient returns a boolean if a field has been set.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf39) HasRecipient() bool {
	if o != nil && !IsNil(o.Recipient) {
		return true
	}

	return false
}

// SetRecipient gets a reference to the given GetEvents200ResponseAllOfEventsInnerOneOf39Recipient and assigns it to the Recipient field.
func (o *GetEvents200ResponseAllOfEventsInnerOneOf39) SetRecipient(v GetEvents200ResponseAllOfEventsInnerOneOf39Recipient) {
	o.Recipient = &v
}

func (o GetEvents200ResponseAllOfEventsInnerOneOf39) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetEvents200ResponseAllOfEventsInnerOneOf39) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Op) {
		toSerialize["op"] = o.Op
	}
	if !IsNil(o.SenderId) {
		toSerialize["sender_id"] = o.SenderId
	}
	if !IsNil(o.MessageId) {
		toSerialize["message_id"] = o.MessageId
	}
	if !IsNil(o.Recipient) {
		toSerialize["recipient"] = o.Recipient
	}
	return toSerialize, nil
}

type NullableGetEvents200ResponseAllOfEventsInnerOneOf39 struct {
	value *GetEvents200ResponseAllOfEventsInnerOneOf39
	isSet bool
}

func (v NullableGetEvents200ResponseAllOfEventsInnerOneOf39) Get() *GetEvents200ResponseAllOfEventsInnerOneOf39 {
	return v.value
}

func (v *NullableGetEvents200ResponseAllOfEventsInnerOneOf39) Set(val *GetEvents200ResponseAllOfEventsInnerOneOf39) {
	v.value = val
	v.isSet = true
}

func (v NullableGetEvents200ResponseAllOfEventsInnerOneOf39) IsSet() bool {
	return v.isSet
}

func (v *NullableGetEvents200ResponseAllOfEventsInnerOneOf39) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetEvents200ResponseAllOfEventsInnerOneOf39(val *GetEvents200ResponseAllOfEventsInnerOneOf39) *NullableGetEvents200ResponseAllOfEventsInnerOneOf39 {
	return &NullableGetEvents200ResponseAllOfEventsInnerOneOf39{value: val, isSet: true}
}

func (v NullableGetEvents200ResponseAllOfEventsInnerOneOf39) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetEvents200ResponseAllOfEventsInnerOneOf39) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
