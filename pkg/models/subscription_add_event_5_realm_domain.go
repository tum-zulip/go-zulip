/*
Zulip REST API

Powerful open source group chat

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// checks if the SubscriptionAddEvent5RealmDomain type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SubscriptionAddEvent5RealmDomain{}

// SubscriptionAddEvent5RealmDomain Object containing details of the edited domain.
type SubscriptionAddEvent5RealmDomain struct {
	// The domain whose settings have changed.
	Domain *string `json:"domain,omitempty"`
	// Whether subdomains are allowed for this domain.
	AllowSubdomains *bool `json:"allow_subdomains,omitempty"`
}

// NewSubscriptionAddEvent5RealmDomain instantiates a new SubscriptionAddEvent5RealmDomain object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSubscriptionAddEvent5RealmDomain() *SubscriptionAddEvent5RealmDomain {
	this := SubscriptionAddEvent5RealmDomain{}
	return &this
}

// NewSubscriptionAddEvent5RealmDomainWithDefaults instantiates a new SubscriptionAddEvent5RealmDomain object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSubscriptionAddEvent5RealmDomainWithDefaults() *SubscriptionAddEvent5RealmDomain {
	this := SubscriptionAddEvent5RealmDomain{}
	return &this
}

// GetDomain returns the Domain field value if set, zero value otherwise.
func (o *SubscriptionAddEvent5RealmDomain) GetDomain() string {
	if o == nil || IsNil(o.Domain) {
		var ret string
		return ret
	}
	return *o.Domain
}

// GetDomainOk returns a tuple with the Domain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubscriptionAddEvent5RealmDomain) GetDomainOk() (*string, bool) {
	if o == nil || IsNil(o.Domain) {
		return nil, false
	}
	return o.Domain, true
}

// HasDomain returns a boolean if a field has been set.
func (o *SubscriptionAddEvent5RealmDomain) HasDomain() bool {
	if o != nil && !IsNil(o.Domain) {
		return true
	}

	return false
}

// SetDomain gets a reference to the given string and assigns it to the Domain field.
func (o *SubscriptionAddEvent5RealmDomain) SetDomain(v string) {
	o.Domain = &v
}

// GetAllowSubdomains returns the AllowSubdomains field value if set, zero value otherwise.
func (o *SubscriptionAddEvent5RealmDomain) GetAllowSubdomains() bool {
	if o == nil || IsNil(o.AllowSubdomains) {
		var ret bool
		return ret
	}
	return *o.AllowSubdomains
}

// GetAllowSubdomainsOk returns a tuple with the AllowSubdomains field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubscriptionAddEvent5RealmDomain) GetAllowSubdomainsOk() (*bool, bool) {
	if o == nil || IsNil(o.AllowSubdomains) {
		return nil, false
	}
	return o.AllowSubdomains, true
}

// HasAllowSubdomains returns a boolean if a field has been set.
func (o *SubscriptionAddEvent5RealmDomain) HasAllowSubdomains() bool {
	if o != nil && !IsNil(o.AllowSubdomains) {
		return true
	}

	return false
}

// SetAllowSubdomains gets a reference to the given bool and assigns it to the AllowSubdomains field.
func (o *SubscriptionAddEvent5RealmDomain) SetAllowSubdomains(v bool) {
	o.AllowSubdomains = &v
}

func (o SubscriptionAddEvent5RealmDomain) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SubscriptionAddEvent5RealmDomain) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Domain) {
		toSerialize["domain"] = o.Domain
	}
	if !IsNil(o.AllowSubdomains) {
		toSerialize["allow_subdomains"] = o.AllowSubdomains
	}
	return toSerialize, nil
}

type NullableSubscriptionAddEvent5RealmDomain struct {
	value *SubscriptionAddEvent5RealmDomain
	isSet bool
}

func (v NullableSubscriptionAddEvent5RealmDomain) Get() *SubscriptionAddEvent5RealmDomain {
	return v.value
}

func (v *NullableSubscriptionAddEvent5RealmDomain) Set(val *SubscriptionAddEvent5RealmDomain) {
	v.value = val
	v.isSet = true
}

func (v NullableSubscriptionAddEvent5RealmDomain) IsSet() bool {
	return v.isSet
}

func (v *NullableSubscriptionAddEvent5RealmDomain) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSubscriptionAddEvent5RealmDomain(val *SubscriptionAddEvent5RealmDomain) *NullableSubscriptionAddEvent5RealmDomain {
	return &NullableSubscriptionAddEvent5RealmDomain{value: val, isSet: true}
}

func (v NullableSubscriptionAddEvent5RealmDomain) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSubscriptionAddEvent5RealmDomain) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
